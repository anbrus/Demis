<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>
    <Title>Симуляция в реальном времени</Title>
    <meta http-equiv="Content-Type"
          content="text/html; charset=windows-1251">
</HEAD>
<BODY>

    <h1 align=center>Симуляция в реальном времени</h1>
    <P>
        &nbsp;&nbsp;&nbsp;Demis стремится выполнять программу так, как она выполнялась бы в реальной
        микропроцессорной системе, работающей с такой-же тактовой частотой как указано в настройках проекта.
        Процессор компьютера работает значительно быстрее микропроцессора симулируемой системы. Для синхронизации
        выполнения программы с реальным временем, программа приостанавливается несколько десятков раз в секунду,
        с целью выровнять время. Выглядит это следующим образом:
    </P>
    <P>
        --И--__________П___________--И--__________П___________--И--__________П___________
    </P>
    <P>
        Здесь И - исполнение программы, П - пауза, для синхронизации времени.
        Соответственно, чем выше частота процессора в настройках проекта, тем быстрее будет исполнятся программа и наоборот.
        Разумеется, есть определённые пределы, определяемые количеством элементов архитектуры и быстродействием компьютера.
        При увеличении тактовой частоты симулируемого процессора длительность паузы будет уменьшатся, и, начиная с какой-то
        частоты, программа будет исполнятся медленнее, чем она работала бы в реальной микропроцессорной системе с такой-же
        частотой.
    </P>
    <P>
        &nbsp;&nbsp;&nbsp;В связи с этим можно выделить такое понятие, как время, текущее внутри симулируемой системы. При определённых
        настройках, оно совпадает с реальным, нашим, временем, а при завышенной тактовой частоте симулируемой системы,
        оно будет течь медленнее. Время симулируемой системы с момента запуска, отображается снизу в окне архитектуры в
        поле "Время".
    </P>
    <P>
        &nbsp;&nbsp;&nbsp;Различные временные параметры элементов архитектуры, привязываются либо к реальному времени,
        либо к времени симулируемой системы. К реальному времени можно привязать таймер с соответствующими настройками.
        К времени симулируемой системы привязывается время дребезга кнопок и клавиатур, время гашения светящихся
        элементов динамических индикаторов и таймер с соответствующими настройками.
    </P>
    <P>
        &nbsp;&nbsp;&nbsp;Особо нужно отметить таймер, работающий в реальном времени. Разработчику важно понимать, что симуляция микропроцессорной
        системы выполняется приложением, работающим под управлением многозадачной операционной системы. Demis, так же,
        как и любое другое приложение в любой момент может быть приостановлен, и процессор переключится на выполнение
        других программ, затем, через некоторое время, Demis снова продолжит работу. Время простоя приложения на
        неперегруженном компьютере мало, поэтому для пользователя исполнение приложения выглядит непрерывным. Но в
        симулируемой микропроцессорной системе это может быть вполне заметно. Предположим, таймер настроен на генерацию
        коротких импульсов с интервалом 20мс в реальном времени. Опрос таймера выполнен в цикле. Программа успешно
        фиксирует импульсы от таймера, затем операционная система прерывает Demis на 100мс, затем возвращает ему управление.
        В этом случае программа пропустит 5 импульсов таймера. Таймер, работающий во времени симулируемой системы,
        донесёт до программы все импульсы, как будто Demis не прерывался. Для гарантированного "отлавливания" редко
        возникающих коротких импульсов таймера реального времени можно использовать прерывания. Запрос прерывания
        сформируется даже, если таймер сработал во время приостановки Demis. Если за время приостановки таймер
        сработает несколько раз, то запрос прерывания будет только один. Также можно последовательно соединить два
        таймера. Один будет генерировать импульсы, а второй настроить на подсчёт их количества. В этом случае потеря
        импульсов произойдёт только при переполнении второго таймера.
    </P>
    <P>
        &nbsp;&nbsp;&nbsp;В случае завышенной тактовой частоты проекта, исполнение программы будет происходить медленнее,
        чем должно было бы быть в реальности. В такой ситуации таймер, работающий в реальном времени будет по-прежнему
        выдавать импульсы с заданным интервалом, а таймер, работающий во времени симулируемой системы, будет выдавать
        импульсы реже, чем задано. Иными словами, количество инструкций, которые выполнятся между импульсами таймера
        реального времени будет всё время разным, а при использовании таймера симулируемой системы количество инструкций
        между импульсами будет примерно одинаковым при заданной тактовой частоте и частоте таймера.
    </P>
</BODY>
</HTML>
