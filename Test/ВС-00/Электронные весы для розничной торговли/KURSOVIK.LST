Turbo Assembler	 Version 3.1	    24/05/04 21:43:14	    Page 1
Kursovik.asm



      1					 .386
      2					 ;Задайте объём	ПЗУ в байтах
      3		  =1000			 RomSize	  EQU	4096
      4		  =0000			 KbdOutPort	  EQU	0
      5		  =0000			 KbdInPort	  EQU	0
      6		  =0003			 InPortControl	  EQU	3
      7		  =0004			 PricePortArr	  EQU	4
      8		  =0009			 WeightPortArr	  EQU	9
      9		  =000E			 CostPortArr	  EQU	0Eh
     10		  =0014			 ADCPortOut	  EQU	14h
     11		  =0015			 ADCPortData1	  EQU	15h
     12		  =0016			 ADCPortData2	  EQU	16h
     13		  =0017			 ADCPortIn	  EQU	17h
     14		  =0030			 BufPort	  EQU	30h
     15		  =0032			 MaxDreb	  EQU	50
     16		  =2710			 MaxWeight	  EQU	2710h
     17
     18	    0000			 IntTable   SEGMENT AT 0 use16
     19					 ;Здесь	размещаются адреса обработчиков	прерываний
     20	    0000			 IntTable   ENDS
     21
     22	    0000			 Data	    SEGMENT AT 40h use16
     23					 ;Здесь	размещаются описания переменных
     24	    0000  ????			 BaseW	    dw	  ?
     25	    0002  ????			 RealADC    dw	  ?
     26	    0004  05*(??)		 PriceArr   db	  5	      dup(?)
     27	    0009  05*(??)		 WeightArr  db	  5	      dup(?)
     28	    000E  0B*(??)		 CostArr    db	  11	      dup(?)
     29	    0019  08*(??)		 SumArr	    db	  8	      dup(?)
     30	    0021  04*(??)		 KbdImage   db	  4	      dup(?)
     31	    0025  ??			 CurDigit   db	  ?
     32	    0026  ????			 Weight	    dw	  ?
     33	    0028  ??			 CurSys	    db	  ?
     34	    0029  ??			 PreSum	    db	  ?
     35	    002A  ??			 NullFlag   db	  ?
     36
     37	    002B			 Data	    ENDS
     38
     39					 ;Задайте необходимый адрес стека
     40	    0000			 Stk	    SEGMENT AT 200h use16
     41					 ;Задайте необходимый размер стека
     42	    0000  64*(????)			    dw	  100 dup (?)
     43	    00C8			 StkTop	    Label Word
     44	    00C8			 Stk	    ENDS
     45
     46	    0000			 InitData   SEGMENT use16
     47					 ;Здесь	размещаются описания констант
     48	    0000			 InitData   ENDS
     49
     50	    0000			 Code	    SEGMENT use16
     51					 ;Здесь	размещаются описания констант
     52
     53						    ASSUME cs:Code,ds:Data,es:Data
     54	    0000  3F 0C	76 5E 4D 5B 7B+	 Obraz	    DB	  03Fh,00Ch,076h,05Eh,04Dh,05Bh,07Bh,00Eh
     55		  0E
     56	    0008  7F 5F	6F 79 33 7C 73+		    DB	  07Fh,05Fh,06Fh,079h,033h,07Ch,073h,063h
     57		  63
Turbo Assembler	 Version 3.1	    24/05/04 21:43:14	    Page 2
Kursovik.asm



     58	    0010  73 60	60 3F 0C	 ErrorW	     db	   115,96,96,03fh,00Ch
     59	    0015  73 60	60 3F 76	 ErrorK	     db	   115,96,96,03fh,076h
     60	    001A			 Start:
     61	    001A  B8 0000s			    mov	  ax,Data
     62	    001D  8E D8				    mov	  ds,ax
     63	    001F  8E C0				    mov	  es,ax
     64	    0021  B8 0000s			    mov	  ax,Stk
     65	    0024  8E D0				    mov	  ss,ax
     66	    0026  BC 00C8r			    lea	  sp,StkTop
     67					 ;Здесь	размещается код	программы
     68					 ;//////////////////начало
     69	    0029  E8 0306			    call  Podgotovka
     70	    002C  E8 0128		 st1:	    call  KbdInput    ;опрос клавиатуры
     71	    002F  E8 014C			    call  InChislo    ;получение по образу клавиатуры введенного числа
     72	    0032  E8 039B			    call  InNextPrice ;модификация цены	с учетом вновь введенной цифры
     73	    0035  E8 018D			    call  InADCData   ;опрос АЦП - ввод	веса товара
     74	    0038  E8 01F1			    call  InControl   ;контрольный процесс
     75	    003B  E8 03BB			    call  CtrlAction  ;действие	на входное слово
     76	    003E  E8 04DF			    call  OutData
     77	    0041  A0 002Ar			    mov	  al,NullFlag
     78	    0044  E6 30				    out	  BufPort,al
     79	    0046  EB E4				    jmp	  st1
     80					 ;//////////////////конец
     81	    0048			 MulCost PROC NEAR		      ;//подпрограмма умножает цену на вес и получает	    +
     82					 стоимость
     83	    0048  60				    pusha
     84	    0049  B0 00				    mov	  al,0
     85	    004B  A2 000Er			    mov	  CostArr[0],al
     86	    004E  A2 000Fr			    mov	  CostArr[1],al
     87	    0051  A2 0010r			    mov	  CostArr[2],al
     88	    0054  A2 0011r			    mov	  CostArr[3],al
     89	    0057  A2 0012r			    mov	  CostArr[4],al
     90	    005A  A2 0013r			    mov	  CostArr[5],al
     91	    005D  A2 0014r			    mov	  CostArr[6],al
     92	    0060  A2 0015r			    mov	  CostArr[7],al
     93	    0063  A2 0016r			    mov	  CostArr[8],al
     94	    0066  A2 0017r			    mov	  CostArr[9],al
     95	    0069  A2 0018r			    mov	  CostArr[10],al
     96	    006C  BB FFFF			    mov	  bx,0ffffh
     97	    006F  43				 m0:inc	  bx
     98	    0070  BE 0000			    mov	  si,0
     99	    0073  8A 87	0009r			 m1:mov	  al,WeightArr[bx]
    100	    0077  8A 94	0004r			    mov	  dl,PriceArr[si]
    101	    007B  F6 E2				    mul	  dl
    102	    007D  D4 0A				    aam
    103	    007F  03 F3				    add	  si,bx
    104	    0081  00 84	000Er			    add	  CostArr[si],al
    105	    0085  10 A4	000Fr			    adc	  CostArr[si+1],ah
    106	    0089  32 E4				    xor	  ah,ah
    107	    008B  10 A4	0010r			    adc	  CostArr[si+2],ah
    108	    008F  10 A4	0011r			    adc	  CostArr[si+3],ah
    109	    0093  10 A4	0012r			    adc	  CostArr[si+4],ah
    110	    0097  2B F3				    sub	  si,bx
    111						    ;/////////////////коррекция
    112	    0099  56 53				    push  si bx
    113	    009B  BE 0000			    mov	  si,0
    114	    009E  8A 84	000Er			 m7:mov	  al,CostArr[si]
Turbo Assembler	 Version 3.1	    24/05/04 21:43:14	    Page 3
Kursovik.asm



    115	    00A2  D4 0A				    aam
    116	    00A4  88 84	000Er			    mov	  CostArr[si],al
    117	    00A8  00 A4	000Fr			    add	  CostArr[si+1],ah
    118	    00AC  8B DE				    mov	  bx,si
    119	    00AE  43				 m6:inc	  bx
    120	    00AF  32 E4				    xor	  ah,ah
    121	    00B1  10 A7	000Er			    adc	  CostArr[bx],ah
    122	    00B5  83 FB	0A			    cmp	  bx,10
    123	    00B8  75 F4				    jne	  m6
    124	    00BA  46				    inc	  si
    125	    00BB  83 FE	0A			    cmp	  si,10
    126	    00BE  75 DE				    jne	  m7
    127	    00C0  5B 5E				    pop	  bx si
    128						    ;////////////////
    129	    00C2  46				    inc	  si
    130	    00C3  83 FE	05			    cmp	  si,5
    131	    00C6  75 AB				    jne	  m1
    132	    00C8  83 FB	04			    cmp	  bx,4
    133	    00CB  75 A2				    jne	  m0
    134	    00CD  B0 F7				    mov	  al,11110111b
    135	    00CF  20 06	0028r			    and	  CurSys,al
    136	    00D3  A0 0028r			    mov	  al,Cursys
    137	    00D6  24 04				    and	  al,100b
    138	    00D8  74 03				    jz	  m3
    139	    00DA  E8 0002			    call  SumSum
    140	    00DD  61				 m3:popa
    141	    00DE  C3				    ret
    142	    00DF			 MulCost ENDP
    143
    144	    00DF			 SumSum	PROC NEAR		  ;//подпрограмма суммирующая выручку
    145	    00DF  60				    pusha
    146						    ;суммирование
    147	    00E0  A0 0011r			    mov	  al,CostArr[3]
    148	    00E3  00 06	0019r			    add	  SumArr[0],al
    149	    00E7  A0 0012r			    mov	  al,CostArr[4]
    150	    00EA  10 06	001Ar			    adc	  SumArr[1],al
    151	    00EE  A0 0013r			    mov	  al,CostArr[5]
    152	    00F1  10 06	001Br			    adc	  SumArr[2],al
    153	    00F5  A0 0014r			    mov	  al,CostArr[6]
    154	    00F8  10 06	001Cr			    adc	  SumArr[3],al
    155	    00FC  A0 0015r			    mov	  al,CostArr[7]
    156	    00FF  10 06	001Dr			    adc	  SumArr[4],al
    157	    0103  A0 0016r			    mov	  al,CostArr[8]
    158	    0106  10 06	001Er			   adc	 SumArr[5],al
    159	    010A  A0 0017r			    mov	  al,CostArr[9]
    160	    010D  10 06	001Fr			    adc	  SumArr[6],al
    161	    0111  A0 0018r			    mov	  al,CostArr[10]
    162	    0114  10 06	0020r			    adc	  SumArr[7],al
    163						    ;/////////////////коррекция
    164	    0118  BE 0000			    mov	  si,0
    165	    011B  8A 84	0019r			 m8:mov	  al,SumArr[si]
    166	    011F  D4 0A				    aam
    167	    0121  88 84	0019r			    mov	  SumArr[si],al
    168	    0125  00 A4	001Ar			    add	  SumArr[si+1],ah
    169	    0129  8B DE				    mov	  bx,si
    170	    012B  43				 m9:inc	  bx
    171	    012C  32 E4				    xor	  ah,ah
Turbo Assembler	 Version 3.1	    24/05/04 21:43:14	    Page 4
Kursovik.asm



    172	    012E  10 A7	0019r			    adc	  SumArr[bx],ah
    173	    0132  83 FB	08			    cmp	  bx,8
    174	    0135  75 F4				    jne	  m9
    175	    0137  46				    inc	  si
    176	    0138  83 FE	08			    cmp	  si,8
    177	    013B  75 DE				    jne	  m8
    178						    ;////////////////
    179	    013D  80 26	0028r FB		    and	  CurSys,11111011b
    180	    0142  61				    popa
    181	    0143  C3				    ret
    182	    0144			 SumSum	ENDP
    183
    184	    0144			 DrebEzg    PROC  NEAR	      ;//защита	от дребезга, в регистре	Dx храниться адрес порта,   +
    185					 Al- значение прочитанное из порта
    186	    0144  8A E0				md1:mov	  ah,al
    187	    0146  B7 00				    mov	  bh,0
    188	    0148  EC				md2:in	  al,dx
    189	    0149  3A E0				    cmp	  ah,al
    190	    014B  75 F7				    jne	  md1
    191	    014D  FE C7				    inc	  bh
    192	    014F  80 FF	32			    cmp	  bh,MaxDreb
    193	    0152  75 F4				    jne	  md2
    194	    0154  8A C4				    mov	  al,ah
    195	    0156  C3				    ret
    196	    0157			 DrebEzg    ENDP
    197
    198	    0157			 KbdInput   PROC  NEAR
    199	    0157  BA 0000			    mov	  dx,KbdOutPort
    200	    015A  BE 0021r			    lea	  si,KbdImage
    201	    015D  B3 01				    mov	  bl,1
    202	    015F  8A C3				mp8:mov	  al,bl
    203	    0161  EE				    out	  dx,al
    204	    0162  EC				    in	  al,dx
    205	    0163  3C 00				    cmp	  al,0
    206	    0165  74 0C				    je	  mp3
    207	    0167  E8 FFDA			    call  dreBezg
    208	    016A  88 04				    mov	  [si],al
    209	    016C  EC				mp2:in	  al,dx
    210	    016D  3C 00				    cmp	  al,0
    211	    016F  75 FB				    jne	  mp2
    212	    0171  EB 02				    jmp	  mp4
    213	    0173  88 04				mp3:mov	  [si],al
    214	    0175  46				mp4:inc	  si
    215	    0176  D0 E3				    shl	  bl,1
    216	    0178  80 FB	08			    cmp	  bl,8
    217	    017B  75 E2				    jne	  mp8
    218	    017D  C3				    ret
    219	    017E			 KbdInput   ENDP
    220
    221	    017E			 InChislo   PROC  NEAR	      ;процедура вычисления числа по образу клавиатуры
    222	    017E  BE 0000			    mov	  si,0
    223	    0181  B9 00FF			    mov	  cx,0ffh
    224	    0184  32 ED				    xor	  ch,ch
    225	    0186  33 D2				    xor	  dx,dx
    226	    0188  8A A4	0021r		       mch0:mov	  ah,KbdImage[si]
    227	    018C  C0 E4	04			    shl	  ah,4
    228	    018F  32 C0				    xor	  al,al
Turbo Assembler	 Version 3.1	    24/05/04 21:43:14	    Page 5
Kursovik.asm



    229	    0191  0B D0				    or	  dx,ax
    230	    0193  C1 EA	04			    shr	  dx,4
    231	    0196  46				    inc	  si
    232	    0197  83 FE	03			    cmp	  si,3
    233	    019A  75 EC				    jne	  mch0
    234	    019C  83 FA	00			    cmp	  dx,0
    235	    019F  74 23				    je	  mch4
    236	    01A1  FE C1				mch3:inc   cl	      ;считаем введенное значение
    237	    01A3  D1 EA				    shr	  dx,1
    238	    01A5  73 02				    jnc	   mch2
    239	    01A7  FE C5				    inc	  ch
    240	    01A9  83 FA	00			mch2:cmp   dx,0
    241	    01AC  75 F3				    jne	  mch3
    242						    ;////////////////////////////////////////////
    243	    01AE  B0 BF				    mov	  al,10111111b
    244	    01B0  20 06	0028r			    and	   CurSys,al
    245	    01B4  80 FD	01			    cmp	  ch,1	      ;проверка	на двойное нажатие
    246	    01B7  77 05				    ja	 mch1
    247	    01B9  88 0E	0025r			    mov	  CurDigit,cl
    248	    01BD  C3				    ret
    249	    01BE  B0 40			       mch1:mov	  al,64
    250	    01C0  08 06	0028r			    or	  CurSys,al
    251	    01C4  C3			       mch4:ret
    252	    01C5			 InChislo   ENDP
    253
    254	    01C5			 InADCData  PROC  NEAR
    255	    01C5  B0 00				    mov	  al,0
    256	    01C7  A2 0009r			    mov	  WeightArr[0],al
    257	    01CA  A2 000Ar			    mov	  WeightArr[1],al
    258	    01CD  A2 000Br			    mov	  WeightArr[2],al
    259	    01D0  A2 000Cr			    mov	  WeightArr[3],al
    260	    01D3  A2 000Dr			    mov	  WeightArr[4],al
    261	    01D6  E6 14				    out	  ADCPortOut,al
    262	    01D8  B0 01				    mov	  al,1
    263	    01DA  E6 14				    out	  ADCPortOut,al
    264	    01DC  E4 17			 WaitRdy:   in	  al,ADCPortIn	      ;Ждём единичку на	вы   ходе Rdy АЦП - признак;	    +
    265					 завершения преобразования
    266	    01DE  3C 01				    cmp	  al,1
    267	    01E0  75 FA				    jne	  WaitRdy
    268	    01E2  E4 16				    in	  al,ADCPortData2	 ;Считываем из АЦП данные
    269	    01E4  8A E0				    mov	  ah,al
    270	    01E6  E4 15				    in	  al,ADCPortData1	 ;В АХ находится считанное с АЦП слово
    271
    272	    01E8  A3 0002r			    mov	  RealADC,ax		  ;Сохраняем текущее состояние АЦП
    273	    01EB  3B 06	0000r			    cmp	  ax,BaseW		  ;Сравниваем с	0
    274	    01EF  72 31				    jb	  ma2
    275	    01F1  2B 06	0000r			    sub	  ax,BaseW
    276	    01F5  A3 0026r			    mov	  Weight,ax   ;//сохраняем прочитанное значение	преобразуем в формат удобный+
    277					 для вывода
    278						    ;///////////////////
    279	    01F8  33 C9				    xor	  cx,cx
    280	    01FA  BE 0000			    mov	  si,0
    281	    01FD  B1 0A				    mov	  cl,10
    282	    01FF  33 D2				ma0:xor	  dx,dx
    283	    0201  F7 F1				    div	  cx
    284	    0203  88 94	0009r			    mov	  WeightArr[si],dl
    285	    0207  46				    inc	  si
Turbo Assembler	 Version 3.1	    24/05/04 21:43:14	    Page 6
Kursovik.asm



    286	    0208  3D 0000			    cmp	  ax,0
    287	    020B  75 F2				    jne	  ma0
    288						    ;///////////////////
    289	    020D  B0 DF				    mov	  al,11011111b
    290	    020F  20 06	0028r			    and	  CurSys,al
    291	    0213  A1 0026r			    mov	  ax,Weight
    292	    0216  3D 2710			    cmp	  ax,MaxWeight		  ;проверка перевеса
    293	    0219  76 06				    jbe	  ma4
    294	    021B  B0 20				    mov	  al,00100000b
    295	    021D  08 06	0028r			    or	  CurSys,al
    296	    0221  C3				ma4:ret
    297	    0222  B8 0000			ma2:mov	  ax,0
    298	    0225  C7 06	0026r 0000		    mov	  Weight,0
    299	    022B  C3				    ret
    300	    022C			 InADCData  ENDP
    301
    302	    022C			 InControl  PROC NEAR
    303	    022C  E4 03				    in	  al,InPortControl
    304	    022E  3C 00				    cmp	  al,0
    305	    0230  0F 84	0081			    je	  mcn1
    306	    0234  BA 0003			    mov	  dx,InPortControl
    307	    0237  E8 FF0A			    call  dreBezg
    308
    309	    023A  50				    push  ax; ожидаем пока кнопки будут	отжаты
    310	    023B  E4 03			       mic0:in	  al,InPortControl
    311	    023D  24 FB				    and	  al,11111011b
    312	    023F  3C 00				    cmp	  al,0
    313	    0241  75 F8				    jne	  mic0
    314	    0243  E4 03				    in	  al,InPortControl
    315	    0245  BA 0003			    mov	  dx,InPortControl
    316	    0248  E8 FEF9			    call  dreBezg
    317	    024B  58				    pop	  ax
    318	    024C  24 0F				    and	  al,00001111b
    319	    024E  8A 16	0028r			    mov	  dl,CurSys
    320	    0252  80 E2	F0			    and	  dl,11110000b
    321	    0255  0A D0				    or	  dl,al
    322	    0257  88 16	0028r			    mov	  CurSys,dl
    323						    ;///////////////////////////////////реализация программного	переключателя	    +
    324					 отслеживающего	состояние кнопки счет выручки
    325
    326	    025B  A0 0028r			    mov	  al,CurSys   ;состояние в текущий момент
    327	    025E  24 04				    and	  al,00000100b
    328	    0260  8A 16	0029r			    mov	  dl,PreSum   ;состояние в предыдущий момент
    329	    0264  80 E2	04			    and	  dl,00000100b
    330	    0267  3C 00				    cmp	  al,0
    331	    0269  75 1A				    jne	  mcn3
    332	    026B  80 FA	00			    cmp	  dl,0
    333	    026E  74 15				    je	  mcn3
    334	    0270  80 26	0028r EB		    and	  CurSys,11101011b   ; не производить счет
    335	    0275  80 0E	0028r 10		    or	  CurSys,00010000b    ;производить вывод
    336	    027A  A0 0028r			    mov	  al,CurSys
    337	    027D  A2 0029r			    mov	  PreSum,al
    338	    0280  B0 3F				    mov	  al,03fh
    339	    0282  E6 00				    out	  0,al
    340	    0284  C3				    ret
    341
    342	    0285  A0 0028r		       mcn3:mov	  al,CurSys   ;состояние в текущий момент
Turbo Assembler	 Version 3.1	    24/05/04 21:43:14	    Page 7
Kursovik.asm



    343	    0288  24 04				    and	  al,00000100b
    344	    028A  8A 16	0029r			    mov	  dl,PreSum   ;состояние в предыдущий момент
    345	    028E  80 E2	04			    and	  dl,00000100b
    346	    0291  3C 00				    cmp	  al,0
    347	    0293  74 19				    je	  mcn4
    348	    0295  80 FA	00			    cmp	  dl,0
    349	    0298  75 14				    jne	  mcn4
    350	    029A  80 26	0028r EB		    and	  CurSys,11101011b   ;не производить вывод
    351	    029F  80 0E	0028r 04		    or	  CurSys,00000100b    ;производить счет
    352	    02A4  A0 0028r			    mov	  al,CurSys
    353	    02A7  A2 0029r			    mov	  PreSum,al
    354	    02AA  B0 00				    mov	  al,0
    355	    02AC  E6 00				    out	  0,al
    356	    02AE  A0 0028r		       mcn4:mov	  al,CurSys
    357	    02B1  A2 0029r			    mov	  PreSum,al
    358	    02B4  C3				    ret
    359	    02B5  80 26	0028r F0	       mcn1:and	 CurSys,11110000b
    360	    02BA  80 26	0029r F0		    and	  PreSum,11110000b
    361	    02BF  C3				    ret
    362	    02C0			 InControl  ENDP
    363
    364	    02C0			 OutPrice   PROC  NEAR	      ;//вывод на индикаторы цены товара
    365	    02C0  60				    pusha
    366	    02C1  BE 0000r			    lea	  si,Obraz
    367	    02C4  B3 05				    mov	  bl,5
    368	    02C6  32 FF				    xor	  bh,bh
    369	    02C8  BA 0004			    mov	  dx,PricePortArr
    370	    02CB  FE CB				mp0:dec	  bl
    371	    02CD  8A 8F	0004r			    mov	  cl,PriceArr[bx]
    372	    02D1  8B E9				    mov	  bp,cx
    373	    02D3  2E: 8A 02			    mov	  al,cs:[si+bp]
    374	    02D6  80 FB	02			    cmp	  bl,2
    375	    02D9  75 02				    jne	  mp1
    376	    02DB  0C 80				    or	  al,10000000b
    377	    02DD  EE				mp1:out	  dx,al
    378	    02DE  42				    inc	  dx
    379	    02DF  80 FB	00			    cmp	  bl,0
    380	    02E2  75 E7				    jne	  mp0
    381	    02E4  61				    popa
    382	    02E5  C3				    ret
    383	    02E6			 OutPrice   ENDP
    384
    385	    02E6			 OutWeight  PROC  NEAR	      ;//вывод на индикаторы цены товара
    386	    02E6  60				    pusha
    387	    02E7  BE 0000r			    lea	  si,Obraz
    388	    02EA  B3 05				    mov	  bl,5
    389	    02EC  32 FF				    xor	  bh,bh
    390	    02EE  BA 0009			    mov	  dx,WeightPortArr
    391	    02F1  FE CB				mw0:dec	  bl
    392	    02F3  8A 8F	0009r			    mov	  cl,WeightArr[bx]
    393	    02F7  8B E9				    mov	  bp,cx
    394	    02F9  2E: 8A 02			    mov	  al,cs:[si+bp]
    395	    02FC  80 FB	03			    cmp	  bl,3
    396	    02FF  75 02				    jne	  mw1
    397	    0301  0C 80				    or	  al,10000000b
    398	    0303  EE				mw1:out	  dx,al
    399	    0304  42				    inc	  dx
Turbo Assembler	 Version 3.1	    24/05/04 21:43:14	    Page 8
Kursovik.asm



    400	    0305  80 FB	00			    cmp	  bl,0
    401	    0308  75 E7				    jne	  mw0
    402	    030A  61				    popa
    403	    030B  C3				    ret
    404	    030C			 OutWeight  ENDP
    405
    406	    030C			 OutCost  PROC	NEAR	    ;//вывод на	индикаторы цены	товара
    407	    030C  60				    pusha
    408	    030D  BE 0000r			    lea	  si,Obraz
    409	    0310  B3 06				    mov	  bl,6
    410	    0312  32 FF				    xor	  bh,bh
    411	    0314  BA 000E			    mov	  dx,CostPortArr
    412	    0317  FE CB				mc0:dec	  bl
    413	    0319  8A 8F	0011r			    mov	  cl,CostArr[bx+3]
    414	    031D  8B E9				    mov	  bp,cx
    415	    031F  2E: 8A 02			    mov	  al,cs:[si+bp]
    416	    0322  80 FB	02			    cmp	  bl,2
    417	    0325  75 02				    jne	  mc1
    418	    0327  0C 80				    or	  al,10000000b
    419	    0329  EE				mc1:out	  dx,al
    420	    032A  42				    inc	  dx
    421	    032B  80 FB	00			    cmp	  bl,0
    422	    032E  75 E7				    jne	  mc0
    423	    0330  61				    popa
    424	    0331  C3				    ret
    425	    0332			 OutCost  ENDP
    426
    427	    0332			 Podgotovka PROC  NEAR	      ;//подготовка инициализация переменных
    428	    0332  60				    pusha
    429	    0333  B8 0000			    mov	  ax,0
    430	    0336  A3 0000r			    mov	  BaseW,ax
    431	    0339  A3 0002r			    mov	  RealADC,ax
    432	    033C  B8 0000			    mov	  ax,0
    433	    033F  A2 0004r			    mov	  PriceArr[0],al
    434	    0342  A2 0005r			    mov	  PriceArr[1],al
    435	    0345  A2 0006r			    mov	  PriceArr[2],al
    436	    0348  A2 0007r			    mov	  PriceArr[3],al
    437	    034B  A2 0008r			    mov	  PriceArr[4],al
    438	    034E  A2 0009r			    mov	  WeightArr[0],al
    439	    0351  A2 000Ar			    mov	  WeightArr[1],al
    440	    0354  A2 000Br			    mov	  WeightArr[2],al
    441	    0357  A2 000Cr			    mov	  WeightArr[3],al
    442	    035A  A2 000Dr			    mov	  WeightArr[4],al
    443	    035D  A2 0021r			    mov	  KbdImage[0],al
    444	    0360  A2 0022r			    mov	  KbdImage[1],al
    445	    0363  A2 0023r			    mov	  KbdImage[2],al
    446	    0366  A2 0024r			    mov	  KbdImage[3],al
    447	    0369  A2 0019r			    mov	  SumArr[0],al
    448	    036C  A2 001Ar			    mov	  SumArr[1],al
    449	    036F  A2 001Br			    mov	  SumArr[2],al
    450	    0372  A2 001Cr			    mov	  SumArr[3],al
    451	    0375  A2 001Dr			    mov	  SumArr[4],al
    452	    0378  A2 001Er			    mov	  SumArr[5],al
    453	    037B  A2 001Fr			    mov	  SumArr[6],al
    454	    037E  A2 0020r			    mov	  SumArr[7],al
    455	    0381  A2 000Er			    mov	  CostArr[0],al
    456	    0384  A2 000Fr			    mov	  CostArr[1],al
Turbo Assembler	 Version 3.1	    24/05/04 21:43:14	    Page 9
Kursovik.asm



    457	    0387  A2 0010r			    mov	  CostArr[2],al
    458	    038A  A2 0011r			    mov	  CostArr[3],al
    459	    038D  A2 0012r			    mov	  CostArr[4],al
    460	    0390  A2 0013r			    mov	  CostArr[5],al
    461	    0393  A2 0014r			    mov	  CostArr[6],al
    462	    0396  A2 0015r			    mov	  CostArr[7],al
    463	    0399  A2 0016r			    mov	  CostArr[8],al
    464	    039C  A2 0017r			    mov	  CostArr[9],al
    465	    039F  A2 0018r			    mov	  CostArr[10],al
    466	    03A2  C6 06	0028r 00		    mov	  CurSys,0
    467	    03A7  C6 06	0029r 00		    mov	  PreSum,0
    468	    03AC  C6 06	002Ar 00		    mov	  NullFlag,0
    469	    03B1  B0 FF				    mov	  al,0ffh
    470	    03B3  A2 0025r			    mov	  CurDigit,al
    471	    03B6  61				    popa
    472	    03B7  C3				    ret
    473	    03B8			 Podgotovka ENDP
    474
    475	    03B8			 SdvigPrice PROC NEAR
    476	    03B8  BE 0004			  mov	  si,4
    477	    03BB  4E			      mn0:dec	  si
    478	    03BC  8A 84	0004r			  mov	  al,PriceArr[si]
    479	    03C0  88 84	0005r			  mov	  PriceArr[si+1],al
    480	    03C4  83 FE	00			  cmp	  si,0
    481	    03C7  75 F2				  jne	  mn0
    482	    03C9  A0 0025r			  mov	  al,CurDigit
    483	    03CC  A2 0004r			  mov	  PriceArr[0],al
    484	    03CF  C3				  ret
    485	    03D0			 SdvigPrice ENDP
    486
    487	    03D0			 InNextPrice	PROC  NEAR    ;//организация бегущей строки для	индикаторов цена
    488	    03D0  80 3E	0025r FF		  cmp	CurDigit,0ffh
    489	    03D5  74 21				  je	mn1
    490	    03D7  8A 0E	0025r			  mov	  cl,CurDigit
    491	    03DB  80 F9	0A			  cmp	  cl,10
    492	    03DE  72 10				  jb	  mn2
    493	    03E0  B0 00				  mov	  al,0
    494	    03E2  A2 0025r			  mov	  CurDigit,al
    495	    03E5  80 F9	0A			  cmp	  cl,10
    496	    03E8  74 03				  je	  mn3
    497	    03EA  E8 FFCB			  call	  SdvigPrice
    498	    03ED  E8 FFC8		      mn3:call	  SdvigPrice
    499	    03F0  E8 FFC5		      mn2:call	  SdvigPrice
    500	    03F3  B0 FF				  mov	al,0ffh
    501	    03F5  A2 0025r			  mov	CurDigit,al
    502	    03F8  C3				mn1:ret
    503	    03F9			 InNextPrice	ENDP
    504
    505	    03F9			 CtrlAction PROC  NEAR
    506	    03F9  8A 16	0028r			    mov	  dl,CurSys
    507	    03FD  8A C2				    mov	  al,dl
    508	    03FF  24 01				    and	  al,1
    509	    0401  74 03				    jz	  mct0
    510	    0403  E8 0059			    call  SetPrice
    511	    0406  8A C2				mct0:mov   al,dl
    512	    0408  24 02				    and	  al,10b
    513	    040A  74 03				    jz	  mct1
Turbo Assembler	 Version 3.1	    24/05/04 21:43:14	    Page 10
Kursovik.asm



    514	    040C  E8 0027			    call  SetWeight
    515	    040F  8A C2				mct1:mov   al,dl
    516	    0411  24 08				    and	  al,1000b
    517	    0413  74 03				    jz	  mct2
    518	    0415  E8 FC30			    call  MulCost
    519	    0418  8A C2				mct2:mov   al,dl
    520					  ;	     and   al,100b
    521					   ;	     jz	   mct3
    522					    ;	     call  SumSum
    523	    041A  8A C2			       mct3: mov   al,dl
    524	    041C  24 10				    and	  al,10000b
    525	    041E  74 03				    jz	  mct4
    526	    0420  E8 0054			    call  OutSum
    527
    528	    0423  8A C2			       mct4:mov	  al,dl
    529	    0425  24 20				    and	  al,100000b
    530	    0427  74 03				    jz	  mct5
    531	    0429  E8 00A4			    call  OutWeightErr
    532	    042C  8A C2			       mct5:mov	  al,dl
    533	    042E  24 40				    and	  al,1000000b
    534	    0430  74 03				    jz	  mct6
    535	    0432  E8 00C3			    call  OutKbdErr
    536	    0435  C3			       mct6:ret
    537	    0436			 CtrlAction ENDP
    538
    539	    0436			 SetWeight  PROC NEAR
    540	    0436  60				    pusha
    541	    0437  B0 00				    mov	  al,0
    542	    0439  A2 0009r			    mov	  WeightArr[0],al
    543	    043C  A2 000Ar			    mov	  WeightArr[1],al
    544	    043F  A2 000Br			    mov	  WeightArr[2],al
    545	    0442  A2 000Cr			    mov	  WeightArr[3],al
    546	    0445  A2 000Dr			    mov	  WeightArr[4],al
    547	    0448  B0 FD				    mov	  al,11111101b
    548	    044A  20 06	0028r			    and	  CurSys,al
    549
    550	    044E  A1 0002r			    mov	  ax,RealADC
    551	    0451  A3 0000r			    mov	  BaseW,ax
    552	    0454  B8 0000			    mov	  ax,0
    553	    0457  A3 0026r			    mov	  Weight,ax
    554	    045A  A3 0026r			    mov	  Weight,ax
    555	    045D  61				    popa
    556	    045E  C3				    ret
    557	    045F			 SetWeight  ENDP
    558
    559	    045F			 SetPrice   PROC  NEAR
    560	    045F  B0 00				    mov	  al,0
    561	    0461  A2 0004r			    mov	  PriceArr[0],al
    562	    0464  A2 0005r			    mov	  PriceArr[1],al
    563	    0467  A2 0006r			    mov	  PriceArr[2],al
    564	    046A  A2 0007r			    mov	  PriceArr[3],al
    565	    046D  A2 0008r			    mov	  PriceArr[4],al
    566	    0470  B0 FE				    mov	  al,11111110b
    567	    0472  20 06	0028r			    and	  CurSys,al
    568	    0476  C3				    ret
    569	    0477			 SetPrice   ENDP
    570
Turbo Assembler	 Version 3.1	    24/05/04 21:43:14	    Page 11
Kursovik.asm



    571	    0477			 OutSum	    PROC  NEAR
    572	    0477  60				    pusha
    573	    0478  B0 00				    mov	  al,0
    574	    047A  A2 002Ar			    mov	  NullFlag,al
    575	    047D  A2 000Er			    mov	  CostArr[0],al
    576	    0480  A2 000Fr			    mov	  CostArr[1],al
    577	    0483  A2 0010r			    mov	  CostArr[2],al
    578	    0486  A2 0011r			    mov	  CostArr[3],al
    579	    0489  A2 0012r			    mov	  CostArr[4],al
    580	    048C  A2 0013r			    mov	  CostArr[5],al
    581	    048F  A2 0014r			    mov	  CostArr[6],al
    582	    0492  A2 0015r			    mov	  CostArr[7],al
    583	    0495  A2 0016r			    mov	  CostArr[8],al
    584	    0498  A2 0017r			    mov	  CostArr[9],al
    585	    049B  A2 0018r			    mov	  CostArr[10],al
    586	    049E  BE 0000			    mov	  si,0
    587	    04A1  8A 84	0019r		       mst0:mov	  al,SumArr[si]
    588	    04A5  88 84	0011r			    mov	  CostArr[si+3],al
    589	    04A9  46				    inc	  si
    590	    04AA  83 FE	06			    cmp	  si,6
    591	    04AD  75 F2				    jne	  mst0
    592	    04AF  80 26	0028r EB		    and	  CurSys,11101011b
    593	    04B4  B0 00				    mov	  al,0
    594	    04B6  A2 0019r			    mov	  SumArr[0],al
    595	    04B9  A2 001Ar			    mov	  SumArr[1],al
    596	    04BC  A2 001Br			    mov	  SumArr[2],al
    597	    04BF  A2 001Cr			    mov	  SumArr[3],al
    598	    04C2  A2 001Dr			    mov	  SumArr[4],al
    599	    04C5  A2 001Er			    mov	  SumArr[5],al
    600	    04C8  A2 001Fr			    mov	  SumArr[6],al
    601	    04CB  A2 0020r			    mov	  SumArr[7],al
    602	    04CE  61				    popa
    603	    04CF  C3				    ret
    604	    04D0			 OutSum	    ENDP
    605
    606	    04D0			 OutWeightErr	  PROC	      NEAR
    607	    04D0  60				    pusha
    608	    04D1  BA 0004			    mov	  dx,PricePortArr    ;вывод на индикаторы надписи Err01-ошибка перевеса
    609	    04D4  B1 00				    mov	  cl,0
    610	    04D6  BE 0010r			    lea	  si,ErrorW
    611	    04D9  2E: 8A 04		       mwr0:mov	  al,cs:[si]
    612	    04DC  EE				    out	  dx,al
    613	    04DD  42				    inc	  dx
    614	    04DE  46				    inc	  si
    615	    04DF  FE C1				    inc	  cl
    616	    04E1  80 F9	05			    cmp	  cl,5
    617	    04E4  75 F3				    jne	  mwr0
    618						    ;/////////блокируем	индикаторы стоимости
    619	    04E6  BA 000E			    mov	  dx,CostPortArr
    620	    04E9  B1 00				    mov	  cl,0
    621	    04EB  B0 40				    mov	  al,01000000b
    622	    04ED  EE			       mwr1:out	  dx,al
    623	    04EE  42				    inc	  dx
    624	    04EF  FE C1				    inc	  cl
    625	    04F1  80 F9	07			    cmp	  cl,7
    626	    04F4  75 F7				    jne	 mwr1
    627	    04F6  61				    popa
Turbo Assembler	 Version 3.1	    24/05/04 21:43:14	    Page 12
Kursovik.asm



    628	    04F7  C3				    ret
    629	    04F8			 OutWeightErr	  ENDP
    630
    631	    04F8			 OutKbdErr  PROC  NEAR
    632	    04F8  60				    pusha
    633	    04F9  BA 0004			    mov	  dx,PricePortArr
    634	    04FC  B1 00				    mov	  cl,0
    635	    04FE  BE 0015r			    lea	  si,ErrorK
    636	    0501  2E: 8A 04		       mkr0:mov	 al,cs:[si]
    637	    0504  EE				    out	  dx,al
    638	    0505  42				    inc	  dx
    639	    0506  46				    inc	 si
    640	    0507  FE C1				    inc	 cl
    641	    0509  80 F9	05			    cmp	  cl,5
    642	    050C  75 F3				    jne	 mkr0
    643						    ;/////////блокируем	индикаторы стоимости
    644	    050E  BA 000E			    mov	  dx,CostPortArr
    645	    0511  B1 00				    mov	  cl,0
    646	    0513  B0 40				    mov	  al,01000000b
    647	    0515  EE			       mkr1:out	  dx,al
    648	    0516  42				    inc	  dx
    649	    0517  FE C1				    inc	 cl
    650	    0519  80 F9	07			    cmp	  cl,7
    651	    051C  75 F7				    jne	 mkr1
    652	    051E  61				    popa
    653	    051F  C3				    ret
    654	    0520			 OutKbdErr  ENDP
    655
    656	    0520			 OutData    PROC  NEAR
    657	    0520  A0 0028r			    mov	  al,CurSys
    658	    0523  C0 E8	05			    shr	  al,5
    659	    0526  3C 00				    cmp	  al,0
    660	    0528  75 09				    jne	  mgp0
    661	    052A  E8 FD93			    call  OutPrice    ;вывод цены
    662	    052D  E8 FDB6			    call  OutWeight   ;вывод веса
    663	    0530  E8 FDD9			    call  OutCost     ;вывод стоимости
    664	    0533  C3			       mgp0:ret
    665	    0534			 OutData    ENDP
    666
    667					 ;//////////////////подпрограммы
    668
    669					 ;В следующей строке необходимо	указать	смещение стартовой точки
    670						    org	  RomSize-16
    671						    ASSUME cs:NOTHING
    672	    0FF0  EA 0000001Asr			    jmp	  Far Ptr Start
    673	    0FF5			 Code	    ENDS
    674					 END
Turbo Assembler	 Version 3.1	    24/05/04 21:43:14	    Page 13
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "24/05/04"
??FILENAME			  Text	 "Kursovik"
??TIME				  Text	 "21:43:14"
??VERSION			  Number 030A
@CPU				  Text	 0F0FH
@CURSEG				  Text	 CODE
@FILENAME			  Text	 KURSOVIK
@WORDSIZE			  Text	 2
ADCPORTDATA1			  Number 0015
ADCPORTDATA2			  Number 0016
ADCPORTIN			  Number 0017
ADCPORTOUT			  Number 0014
BASEW				  Word	 DATA:0000
BUFPORT				  Number 0030
COSTARR				  Byte	 DATA:000E
COSTPORTARR			  Number 000E
CTRLACTION			  Near	 CODE:03F9
CURDIGIT			  Byte	 DATA:0025
CURSYS				  Byte	 DATA:0028
DREBEZG				  Near	 CODE:0144
ERRORK				  Byte	 CODE:0015
ERRORW				  Byte	 CODE:0010
INADCDATA			  Near	 CODE:01C5
INCHISLO			  Near	 CODE:017E
INCONTROL			  Near	 CODE:022C
INNEXTPRICE			  Near	 CODE:03D0
INPORTCONTROL			  Number 0003
KBDIMAGE			  Byte	 DATA:0021
KBDINPORT			  Number 0000
KBDINPUT			  Near	 CODE:0157
KBDOUTPORT			  Number 0000
M0				  Near	 CODE:006F
M1				  Near	 CODE:0073
M3				  Near	 CODE:00DD
M6				  Near	 CODE:00AE
M7				  Near	 CODE:009E
M8				  Near	 CODE:011B
M9				  Near	 CODE:012B
MA0				  Near	 CODE:01FF
MA2				  Near	 CODE:0222
MA4				  Near	 CODE:0221
MAXDREB				  Number 0032
MAXWEIGHT			  Number 2710
MC0				  Near	 CODE:0317
MC1				  Near	 CODE:0329
MCH0				  Near	 CODE:0188
MCH1				  Near	 CODE:01BE
MCH2				  Near	 CODE:01A9
MCH3				  Near	 CODE:01A1
MCH4				  Near	 CODE:01C4
MCN1				  Near	 CODE:02B5
MCN3				  Near	 CODE:0285
MCN4				  Near	 CODE:02AE
MCT0				  Near	 CODE:0406
Turbo Assembler	 Version 3.1	    24/05/04 21:43:14	    Page 14
Symbol Table



MCT1				  Near	 CODE:040F
MCT2				  Near	 CODE:0418
MCT3				  Near	 CODE:041A
MCT4				  Near	 CODE:0423
MCT5				  Near	 CODE:042C
MCT6				  Near	 CODE:0435
MD1				  Near	 CODE:0144
MD2				  Near	 CODE:0148
MGP0				  Near	 CODE:0533
MIC0				  Near	 CODE:023B
MKR0				  Near	 CODE:0501
MKR1				  Near	 CODE:0515
MN0				  Near	 CODE:03BB
MN1				  Near	 CODE:03F8
MN2				  Near	 CODE:03F0
MN3				  Near	 CODE:03ED
MP0				  Near	 CODE:02CB
MP1				  Near	 CODE:02DD
MP2				  Near	 CODE:016C
MP3				  Near	 CODE:0173
MP4				  Near	 CODE:0175
MP8				  Near	 CODE:015F
MST0				  Near	 CODE:04A1
MULCOST				  Near	 CODE:0048
MW0				  Near	 CODE:02F1
MW1				  Near	 CODE:0303
MWR0				  Near	 CODE:04D9
MWR1				  Near	 CODE:04ED
NULLFLAG			  Byte	 DATA:002A
OBRAZ				  Byte	 CODE:0000
OUTCOST				  Near	 CODE:030C
OUTDATA				  Near	 CODE:0520
OUTKBDERR			  Near	 CODE:04F8
OUTPRICE			  Near	 CODE:02C0
OUTSUM				  Near	 CODE:0477
OUTWEIGHT			  Near	 CODE:02E6
OUTWEIGHTERR			  Near	 CODE:04D0
PODGOTOVKA			  Near	 CODE:0332
PRESUM				  Byte	 DATA:0029
PRICEARR			  Byte	 DATA:0004
PRICEPORTARR			  Number 0004
REALADC				  Word	 DATA:0002
ROMSIZE				  Number 1000
SDVIGPRICE			  Near	 CODE:03B8
SETPRICE			  Near	 CODE:045F
SETWEIGHT			  Near	 CODE:0436
ST1				  Near	 CODE:002C
START				  Near	 CODE:001A
STKTOP				  Word	 STK:00C8
SUMARR				  Byte	 DATA:0019
SUMSUM				  Near	 CODE:00DF
WAITRDY				  Near	 CODE:01DC
WEIGHT				  Word	 DATA:0026
WEIGHTARR			  Byte	 DATA:0009
WEIGHTPORTARR			  Number 0009
Turbo Assembler	 Version 3.1	    24/05/04 21:43:14	    Page 15
Symbol Table




Groups & Segments		  Bit Size Align  Combine Class

CODE				  16  0FF5 Para	  none
DATA				  16  002B  AT 0040
INITDATA			  16  0000 Para	  none
INTTABLE			  16  0000  AT 0000
STK				  16  00C8  AT 0200
