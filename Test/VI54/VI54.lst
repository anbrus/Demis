Microsoft (R) Macro Assembler Version 6.14.8444		    03/27/23 08:37:22
VI54.asm						     Page 1 - 1


				.386
				;Задайте объём ПЗУ в байтах
 = 4000				RomSize    EQU   16384

 0000				IntTable   SEGMENT use16 AT 0
				;Здесь размещаются адреса обработчиков прерываний
				           org   20h*4        ; По этому смещению находится адрес обработчика прерывания 20h
 0080 0000			Int32HandlerPtrOffs dw ?
 0082 0000			Int32HandlerPtrSeg  dw ?
 0084				IntTable   ENDS

 0000				Data       SEGMENT use16 AT 40h
				;Здесь размещаются описания переменных
 0000 0000			IntCounter dw ?
 0002				Data       ENDS

				;Задайте необходимый адрес стека
 0000				Stk        SEGMENT use16 AT 100h
				;Задайте необходимый размер стека
 0000  0100 [			           dw    100h dup (?)
        0000
       ]
 0200				StkTop     Label Word
 0200				Stk        ENDS

 0000				InitData   SEGMENT use16
 0000				InitDataStart:
				;Здесь размещается описание неизменяемых данных, которые будут храниться в ПЗУ
 0000				InitDataEnd:
 0000				InitData   ENDS

 0000				Code       SEGMENT use16
				;Здесь размещается описание неизменяемых данных

				           ASSUME cs:Code, ds:Data, es:Data, ss: Stk

				include    utils.asm
 0000			      C SetGateHi  PROC  NEAR
 0000  B0 80		      C            mov   al, 80h
 0002  E6 00		      C            out   0, al
 0004  C3		      C            ret
 0005			      C SetGateHi  ENDP
			      C 
 0005			      C SetGateLow PROC  NEAR
 0005  B0 00		      C            mov   al, 0h
 0007  E6 00		      C            out   0, al
 0009  C3		      C            ret
 000A			      C SetGateLow ENDP
			      C 
 000A			      C SetClkHi   PROC  NEAR
 000A  B0 01		      C            mov   al, 1h
 000C  E6 01		      C            out   1, al
 000E  C3		      C            ret
 000F			      C SetClkHi   ENDP
			      C 
 000F			      C SetClkLow  PROC  NEAR
 000F  B0 00		      C            mov   al, 0h
 0011  E6 01		      C            out   1, al
 0013  C3		      C            ret
 0014			      C SetClkLow  ENDP
			      C 
 0014			      C GetOut     PROC  NEAR
 0014  32 E4		      C            xor   ah, ah
 0016  E4 00		      C            in    al, 0
 0018  C3		      C            ret
 0019			      C GetOut     ENDP
			      C 
 0019			      C GetCeByte  PROC  NEAR
 0019  E4 40		      C            in    al, 40h
 001B  32 E4		      C            xor   ah, ah
 001D  C3		      C            ret
 001E			      C GetCeByte  ENDP
			      C 
 001E			      C WriteCw    PROC  NEAR
 001E  E6 43		      C            out   43h, al
 0020  C3		      C            ret
 0021			      C WriteCw    ENDP
			      C 
 0021			      C WriteCountByte   PROC  NEAR
 0021  E6 40		      C            out   40h, al
 0023  C3		      C            ret
 0024			      C WriteCountByte   ENDP
			      C 
 0024			      C WriteCountWord   PROC  NEAR
 0024  E6 40		      C            out   40h, al
 0026  86 C4		      C            xchg  al, ah
 0028  E6 40		      C            out   40h, al
 002A  C3		      C            ret
 002B			      C WriteCountWord   ENDP
			      C 
			      C AssertOutHi      MACRO
			      C            LOCAL AssertOutHiOk
			      C            
			      C            in    al, 0
			      C            or    al, al
			      C            jnz   AssertOutHiOk
			      C            xor   ax, ax
			      C            ret
			      C AssertOutHiOk:
			      C            ENDM
			      C 
			      C AssertOutLow     MACRO
			      C            LOCAL AssertOutLowOk
			      C 
			      C            in    al, 0
			      C            or    al, al
			      C            jz    AssertOutLowOk
			      C            xor   ax, ax
			      C            ret
			      C AssertOutLowOk:           
			      C            ENDM
			      C 
			      C AssertByteEq     MACRO value: REQ
			      C            LOCAL AssertEqOk
			      C            
			      C            cmp   al, value
			      C            jz    AssertEqOk
			      C            xor   ax, ax
			      C            ret
			      C AssertEqOk:
			      C            ENDM
			      C            
			      C AssertByteCeEq   MACRO value: REQ
			      C            LOCAL AssertByteCeEqOk
			      C            
			      C            in    al, 40h
			      C            cmp   al, value
			      C            jz    AssertByteCeEqOk
			      C            xor   ax, ax
			      C            ret
			      C AssertByteCeEqOk:
			      C            ENDM
			      C            
			      C AssertWordCeEq   MACRO value: REQ
			      C            LOCAL AssertWordCeEqOk
			      C            
			      C            in    al, 40h
			      C            xchg  al, ah
			      C            in    al, 40h
			      C            xchg  al, ah
			      C            cmp   ax, value
			      C            jz    AssertWordCeEqOk
			      C            xor   ax, ax
			      C            ret
			      C AssertWordCeEqOk:
			      C            ENDM
			      C 
				include    mode0.asm
 002B			      C TestMode0  PROC NEAR
 002B  51		      C            push  cx
 002C  B9 0000		      C            mov   cx, 0
 002F  E8 0024		      C            call  Mode0_Datasheet1
 0032  C1 E0 00		      C            shl   ax, 0
 0035  0B C8		      C            or    cx, ax
 0037  8A C1		      C            mov   al, cl
 0039  E6 10		      C            out   10h, al
			      C 
 003B  E8 0161		      C            call  Mode0_Datasheet2
 003E  D1 E0		      C            shl   ax, 1
 0040  0B C8		      C            or    cx, ax
 0042  8A C1		      C            mov   al, cl
 0044  E6 10		      C            out   10h, al
			      C 
 0046  E8 028D		      C            call  Mode0_Datasheet3
 0049  C1 E0 02		      C            shl   ax, 2
 004C  0B C8		      C            or    cx, ax
 004E  8A C1		      C            mov   al, cl
 0050  E6 10		      C            out   10h, al
			      C 
 0052  8B C1		      C            mov   ax, cx
 0054  59		      C            pop   cx
 0055  C3		      C            ret
 0056			      C TestMode0  ENDP
			      C 
 0056			      C Mode0_Datasheet1 PROC NEAR
 0056  E8 FFA7		      C            call  SetGateHi
 0059  E8 FFAE		      C            call  SetClkHi
 005C  B0 10		      C            mov   al, 10h
 005E  E8 FFBD		      C            call  WriteCw
			      C            AssertOutLow
 0061  E4 00		     1C            in    al, 0
 0063  0A C0		     1C            or    al, al
 0065  74 03		     1C            jz    ??0000
 0067  33 C0		     1C            xor   ax, ax
 0069  C3		     1C            ret
 006A			     1C ??0000:           
 006A  E8 FFA2		      C            call  SetClkLow
			      C            AssertOutLow
 006D  E4 00		     1C            in    al, 0
 006F  0A C0		     1C            or    al, al
 0071  74 03		     1C            jz    ??0001
 0073  33 C0		     1C            xor   ax, ax
 0075  C3		     1C            ret
 0076			     1C ??0001:           
 0076  E8 FF91		      C            call  SetClkHi
			      C            AssertOutLow
 0079  E4 00		     1C            in    al, 0
 007B  0A C0		     1C            or    al, al
 007D  74 03		     1C            jz    ??0002
 007F  33 C0		     1C            xor   ax, ax
 0081  C3		     1C            ret
 0082			     1C ??0002:           
 0082  E8 FF8A		      C            call  SetClkLow
			      C            AssertOutLow
 0085  E4 00		     1C            in    al, 0
 0087  0A C0		     1C            or    al, al
 0089  74 03		     1C            jz    ??0003
 008B  33 C0		     1C            xor   ax, ax
 008D  C3		     1C            ret
 008E			     1C ??0003:           
 008E  B0 04		      C            mov   al, 4
 0090  E8 FF8E		      C            call  WriteCountByte ; cr = 4
			      C            AssertOutLow
 0093  E4 00		     1C            in    al, 0
 0095  0A C0		     1C            or    al, al
 0097  74 03		     1C            jz    ??0004
 0099  33 C0		     1C            xor   ax, ax
 009B  C3		     1C            ret
 009C			     1C ??0004:           
 009C  E8 FF6B		      C            call SetClkHi
			      C     
			      C            AssertOutLow
 009F  E4 00		     1C            in    al, 0
 00A1  0A C0		     1C            or    al, al
 00A3  74 03		     1C            jz    ??0005
 00A5  33 C0		     1C            xor   ax, ax
 00A7  C3		     1C            ret
 00A8			     1C ??0005:           
 00A8  E8 FF64		      C            call  SetClkLow; // ce = cr = 4
			      C            AssertByteCeEq 4
 00AB  E4 40		     1C            in    al, 40h
 00AD  3C 04		     1C            cmp   al, 4
 00AF  74 03		     1C            jz    ??0006
 00B1  33 C0		     1C            xor   ax, ax
 00B3  C3		     1C            ret
 00B4			     1C ??0006:
			      C            AssertOutLow
 00B4  E4 00		     1C            in    al, 0
 00B6  0A C0		     1C            or    al, al
 00B8  74 03		     1C            jz    ??0007
 00BA  33 C0		     1C            xor   ax, ax
 00BC  C3		     1C            ret
 00BD			     1C ??0007:           
 00BD  E8 FF4A		      C            call  SetClkHi;
			      C            AssertOutLow
 00C0  E4 00		     1C            in    al, 0
 00C2  0A C0		     1C            or    al, al
 00C4  74 03		     1C            jz    ??0008
 00C6  33 C0		     1C            xor   ax, ax
 00C8  C3		     1C            ret
 00C9			     1C ??0008:           
 00C9  E8 FF43		      C            call  SetClkLow; // ce = 3
			      C            AssertByteCeEq 3
 00CC  E4 40		     1C            in    al, 40h
 00CE  3C 03		     1C            cmp   al, 3
 00D0  74 03		     1C            jz    ??0009
 00D2  33 C0		     1C            xor   ax, ax
 00D4  C3		     1C            ret
 00D5			     1C ??0009:
			      C            AssertOutLow
 00D5  E4 00		     1C            in    al, 0
 00D7  0A C0		     1C            or    al, al
 00D9  74 03		     1C            jz    ??000A
 00DB  33 C0		     1C            xor   ax, ax
 00DD  C3		     1C            ret
 00DE			     1C ??000A:           
 00DE  E8 FF29		      C            call  SetClkHi;
			      C            AssertOutLow
 00E1  E4 00		     1C            in    al, 0
 00E3  0A C0		     1C            or    al, al
 00E5  74 03		     1C            jz    ??000B
 00E7  33 C0		     1C            xor   ax, ax
 00E9  C3		     1C            ret
 00EA			     1C ??000B:           
 00EA  E8 FF22		      C            call  SetClkLow; // ce = 2
			      C            AssertByteCeEq 2
 00ED  E4 40		     1C            in    al, 40h
 00EF  3C 02		     1C            cmp   al, 2
 00F1  74 03		     1C            jz    ??000C
 00F3  33 C0		     1C            xor   ax, ax
 00F5  C3		     1C            ret
 00F6			     1C ??000C:
			      C            AssertOutLow
 00F6  E4 00		     1C            in    al, 0
 00F8  0A C0		     1C            or    al, al
 00FA  74 03		     1C            jz    ??000D
 00FC  33 C0		     1C            xor   ax, ax
 00FE  C3		     1C            ret
 00FF			     1C ??000D:           
 00FF  E8 FF08		      C            call  SetClkHi;
			      C            AssertOutLow
 0102  E4 00		     1C            in    al, 0
 0104  0A C0		     1C            or    al, al
 0106  74 03		     1C            jz    ??000E
 0108  33 C0		     1C            xor   ax, ax
 010A  C3		     1C            ret
 010B			     1C ??000E:           
 010B  E8 FF01		      C            call  SetClkLow; // ce = 1
			      C            AssertByteCeEq 1
 010E  E4 40		     1C            in    al, 40h
 0110  3C 01		     1C            cmp   al, 1
 0112  74 03		     1C            jz    ??000F
 0114  33 C0		     1C            xor   ax, ax
 0116  C3		     1C            ret
 0117			     1C ??000F:
			      C            AssertOutLow
 0117  E4 00		     1C            in    al, 0
 0119  0A C0		     1C            or    al, al
 011B  74 03		     1C            jz    ??0010
 011D  33 C0		     1C            xor   ax, ax
 011F  C3		     1C            ret
 0120			     1C ??0010:           
 0120  E8 FEE7		      C            call  SetClkHi;
			      C            AssertOutLow
 0123  E4 00		     1C            in    al, 0
 0125  0A C0		     1C            or    al, al
 0127  74 03		     1C            jz    ??0011
 0129  33 C0		     1C            xor   ax, ax
 012B  C3		     1C            ret
 012C			     1C ??0011:           
 012C  E8 FEE0		      C            call  SetClkLow; // ce = 0
			      C            AssertByteCeEq 0
 012F  E4 40		     1C            in    al, 40h
 0131  3C 00		     1C            cmp   al, 0
 0133  74 03		     1C            jz    ??0012
 0135  33 C0		     1C            xor   ax, ax
 0137  C3		     1C            ret
 0138			     1C ??0012:
			      C            AssertOutHi
 0138  E4 00		     1C            in    al, 0
 013A  0A C0		     1C            or    al, al
 013C  75 03		     1C            jnz   ??0013
 013E  33 C0		     1C            xor   ax, ax
 0140  C3		     1C            ret
 0141			     1C ??0013:
 0141  E8 FEC6		      C            call  SetClkHi;
			      C            AssertOutHi
 0144  E4 00		     1C            in    al, 0
 0146  0A C0		     1C            or    al, al
 0148  75 03		     1C            jnz   ??0014
 014A  33 C0		     1C            xor   ax, ax
 014C  C3		     1C            ret
 014D			     1C ??0014:
 014D  E8 FEBF		      C            call  SetClkLow; // ce = 0xffff
			      C            AssertByteCeEq 0ffh
 0150  E4 40		     1C            in    al, 40h
 0152  3C FF		     1C            cmp   al, 0ffh
 0154  74 03		     1C            jz    ??0015
 0156  33 C0		     1C            xor   ax, ax
 0158  C3		     1C            ret
 0159			     1C ??0015:
			      C            AssertOutHi
 0159  E4 00		     1C            in    al, 0
 015B  0A C0		     1C            or    al, al
 015D  75 03		     1C            jnz   ??0016
 015F  33 C0		     1C            xor   ax, ax
 0161  C3		     1C            ret
 0162			     1C ??0016:
			      C 
 0162  33 C9		      C            xor   cx, cx
 0164			      C Mode0_Datasheet1_M1:
 0164  E8 FEA3		      C            call  SetClkHi;
			      C            AssertOutHi
 0167  E4 00		     1C            in    al, 0
 0169  0A C0		     1C            or    al, al
 016B  75 03		     1C            jnz   ??0017
 016D  33 C0		     1C            xor   ax, ax
 016F  C3		     1C            ret
 0170			     1C ??0017:
 0170  E8 FE9C		      C            call  SetClkLow;
			      C            AssertOutHi
 0173  E4 00		     1C            in    al, 0
 0175  0A C0		     1C            or    al, al
 0177  75 03		     1C            jnz   ??0018
 0179  33 C0		     1C            xor   ax, ax
 017B  C3		     1C            ret
 017C			     1C ??0018:
 017C  E2 E6		      C            loop  Mode0_Datasheet1_M1
			      C            
 017E  B9 0005		      C            mov   cx, 5
 0181			      C Mode0_Datasheet1_M2:
 0181  E8 FE86		      C            call  SetClkHi;
			      C            AssertOutHi
 0184  E4 00		     1C            in    al, 0
 0186  0A C0		     1C            or    al, al
 0188  75 03		     1C            jnz   ??0019
 018A  33 C0		     1C            xor   ax, ax
 018C  C3		     1C            ret
 018D			     1C ??0019:
 018D  E8 FE7F		      C            call  SetClkLow;
			      C            AssertOutHi
 0190  E4 00		     1C            in    al, 0
 0192  0A C0		     1C            or    al, al
 0194  75 03		     1C            jnz   ??001A
 0196  33 C0		     1C            xor   ax, ax
 0198  C3		     1C            ret
 0199			     1C ??001A:
 0199  E2 E6		      C            loop  Mode0_Datasheet1_M2
			      C 
 019B  B8 0001		      C            mov   ax, 1
 019E  C3		      C            ret
 019F			      C Mode0_Datasheet1 ENDP
			      C 
 019F			      C Mode0_Datasheet2 PROC NEAR
 019F  E8 FE5E		      C             call  SetGateHi
 01A2  E8 FE65		      C             call  SetClkHi
 01A5  B0 10		      C             mov   al, 10h
 01A7  E8 FE74		      C             call  WriteCw
			      C             AssertOutLow
 01AA  E4 00		     1C            in    al, 0
 01AC  0A C0		     1C            or    al, al
 01AE  74 03		     1C            jz    ??001B
 01B0  33 C0		     1C            xor   ax, ax
 01B2  C3		     1C            ret
 01B3			     1C ??001B:           
 01B3  E8 FE59		      C             call  SetClkLow
			      C             AssertOutLow
 01B6  E4 00		     1C            in    al, 0
 01B8  0A C0		     1C            or    al, al
 01BA  74 03		     1C            jz    ??001C
 01BC  33 C0		     1C            xor   ax, ax
 01BE  C3		     1C            ret
 01BF			     1C ??001C:           
 01BF  E8 FE48		      C             call  SetClkHi
			      C             AssertOutLow
 01C2  E4 00		     1C            in    al, 0
 01C4  0A C0		     1C            or    al, al
 01C6  74 03		     1C            jz    ??001D
 01C8  33 C0		     1C            xor   ax, ax
 01CA  C3		     1C            ret
 01CB			     1C ??001D:           
 01CB  E8 FE41		      C             call  SetClkLow
			      C             AssertOutLow
 01CE  E4 00		     1C            in    al, 0
 01D0  0A C0		     1C            or    al, al
 01D2  74 03		     1C            jz    ??001E
 01D4  33 C0		     1C            xor   ax, ax
 01D6  C3		     1C            ret
 01D7			     1C ??001E:           
 01D7  B0 03		      C             mov   al, 3
 01D9  E8 FE45		      C             call  WriteCountByte ; cr = 3
			      C             AssertOutLow
 01DC  E4 00		     1C            in    al, 0
 01DE  0A C0		     1C            or    al, al
 01E0  74 03		     1C            jz    ??001F
 01E2  33 C0		     1C            xor   ax, ax
 01E4  C3		     1C            ret
 01E5			     1C ??001F:           
 01E5  E8 FE22		      C             call  SetClkHi
			      C             AssertOutLow
 01E8  E4 00		     1C            in    al, 0
 01EA  0A C0		     1C            or    al, al
 01EC  74 03		     1C            jz    ??0020
 01EE  33 C0		     1C            xor   ax, ax
 01F0  C3		     1C            ret
 01F1			     1C ??0020:           
 01F1  E8 FE1B		      C             call  SetClkLow ; ce = cr = 3
			      C             AssertByteCeEq 3
 01F4  E4 40		     1C            in    al, 40h
 01F6  3C 03		     1C            cmp   al, 3
 01F8  74 03		     1C            jz    ??0021
 01FA  33 C0		     1C            xor   ax, ax
 01FC  C3		     1C            ret
 01FD			     1C ??0021:
			      C             AssertOutLow
 01FD  E4 00		     1C            in    al, 0
 01FF  0A C0		     1C            or    al, al
 0201  74 03		     1C            jz    ??0022
 0203  33 C0		     1C            xor   ax, ax
 0205  C3		     1C            ret
 0206			     1C ??0022:           
 0206  E8 FE01		      C             call  SetClkHi
 0209  E8 FDF9		      C             call  SetGateLow
			      C             AssertOutLow
 020C  E4 00		     1C            in    al, 0
 020E  0A C0		     1C            or    al, al
 0210  74 03		     1C            jz    ??0023
 0212  33 C0		     1C            xor   ax, ax
 0214  C3		     1C            ret
 0215			     1C ??0023:           
 0215  E8 FDF7		      C             call  SetClkLow ; ce = 2
			      C             AssertByteCeEq 2
 0218  E4 40		     1C            in    al, 40h
 021A  3C 02		     1C            cmp   al, 2
 021C  74 03		     1C            jz    ??0024
 021E  33 C0		     1C            xor   ax, ax
 0220  C3		     1C            ret
 0221			     1C ??0024:
			      C             AssertOutLow
 0221  E4 00		     1C            in    al, 0
 0223  0A C0		     1C            or    al, al
 0225  74 03		     1C            jz    ??0025
 0227  33 C0		     1C            xor   ax, ax
 0229  C3		     1C            ret
 022A			     1C ??0025:           
 022A  E8 FDDD		      C             call  SetClkHi
			      C             AssertOutLow
 022D  E4 00		     1C            in    al, 0
 022F  0A C0		     1C            or    al, al
 0231  74 03		     1C            jz    ??0026
 0233  33 C0		     1C            xor   ax, ax
 0235  C3		     1C            ret
 0236			     1C ??0026:           
 0236  E8 FDD6		      C             call  SetClkLow ; ce = 2
			      C             AssertByteCeEq 2
 0239  E4 40		     1C            in    al, 40h
 023B  3C 02		     1C            cmp   al, 2
 023D  74 03		     1C            jz    ??0027
 023F  33 C0		     1C            xor   ax, ax
 0241  C3		     1C            ret
 0242			     1C ??0027:
			      C             AssertOutLow
 0242  E4 00		     1C            in    al, 0
 0244  0A C0		     1C            or    al, al
 0246  74 03		     1C            jz    ??0028
 0248  33 C0		     1C            xor   ax, ax
 024A  C3		     1C            ret
 024B			     1C ??0028:           
 024B  E8 FDBC		      C             call  SetClkHi
			      C             AssertOutLow
 024E  E4 00		     1C            in    al, 0
 0250  0A C0		     1C            or    al, al
 0252  74 03		     1C            jz    ??0029
 0254  33 C0		     1C            xor   ax, ax
 0256  C3		     1C            ret
 0257			     1C ??0029:           
 0257  E8 FDB5		      C             call  SetClkLow ; ce = 2
			      C             AssertByteCeEq 2
 025A  E4 40		     1C            in    al, 40h
 025C  3C 02		     1C            cmp   al, 2
 025E  74 03		     1C            jz    ??002A
 0260  33 C0		     1C            xor   ax, ax
 0262  C3		     1C            ret
 0263			     1C ??002A:
			      C             AssertOutLow
 0263  E4 00		     1C            in    al, 0
 0265  0A C0		     1C            or    al, al
 0267  74 03		     1C            jz    ??002B
 0269  33 C0		     1C            xor   ax, ax
 026B  C3		     1C            ret
 026C			     1C ??002B:           
 026C  E8 FD91		      C             call  SetGateHi
 026F  E8 FD98		      C             call  SetClkHi
			      C             AssertOutLow
 0272  E4 00		     1C            in    al, 0
 0274  0A C0		     1C            or    al, al
 0276  74 03		     1C            jz    ??002C
 0278  33 C0		     1C            xor   ax, ax
 027A  C3		     1C            ret
 027B			     1C ??002C:           
 027B  E8 FD91		      C             call  SetClkLow ; ce = 1
			      C             AssertByteCeEq 1
 027E  E4 40		     1C            in    al, 40h
 0280  3C 01		     1C            cmp   al, 1
 0282  74 03		     1C            jz    ??002D
 0284  33 C0		     1C            xor   ax, ax
 0286  C3		     1C            ret
 0287			     1C ??002D:
			      C             AssertOutLow
 0287  E4 00		     1C            in    al, 0
 0289  0A C0		     1C            or    al, al
 028B  74 03		     1C            jz    ??002E
 028D  33 C0		     1C            xor   ax, ax
 028F  C3		     1C            ret
 0290			     1C ??002E:           
 0290  E8 FD77		      C             call  SetClkHi
			      C             AssertOutLow
 0293  E4 00		     1C            in    al, 0
 0295  0A C0		     1C            or    al, al
 0297  74 03		     1C            jz    ??002F
 0299  33 C0		     1C            xor   ax, ax
 029B  C3		     1C            ret
 029C			     1C ??002F:           
 029C  E8 FD70		      C             call  SetClkLow ; ce = 0
			      C             AssertByteCeEq 0
 029F  E4 40		     1C            in    al, 40h
 02A1  3C 00		     1C            cmp   al, 0
 02A3  74 03		     1C            jz    ??0030
 02A5  33 C0		     1C            xor   ax, ax
 02A7  C3		     1C            ret
 02A8			     1C ??0030:
			      C             AssertOutHi
 02A8  E4 00		     1C            in    al, 0
 02AA  0A C0		     1C            or    al, al
 02AC  75 03		     1C            jnz   ??0031
 02AE  33 C0		     1C            xor   ax, ax
 02B0  C3		     1C            ret
 02B1			     1C ??0031:
 02B1  E8 FD56		      C             call  SetClkHi
			      C             AssertOutHi
 02B4  E4 00		     1C            in    al, 0
 02B6  0A C0		     1C            or    al, al
 02B8  75 03		     1C            jnz   ??0032
 02BA  33 C0		     1C            xor   ax, ax
 02BC  C3		     1C            ret
 02BD			     1C ??0032:
 02BD  E8 FD4F		      C             call  SetClkLow ; ce = 0ffffh
			      C             AssertByteCeEq 0ffh
 02C0  E4 40		     1C            in    al, 40h
 02C2  3C FF		     1C            cmp   al, 0ffh
 02C4  74 03		     1C            jz    ??0033
 02C6  33 C0		     1C            xor   ax, ax
 02C8  C3		     1C            ret
 02C9			     1C ??0033:
			      C             AssertOutHi
 02C9  E4 00		     1C            in    al, 0
 02CB  0A C0		     1C            or    al, al
 02CD  75 03		     1C            jnz   ??0034
 02CF  33 C0		     1C            xor   ax, ax
 02D1  C3		     1C            ret
 02D2			     1C ??0034:
			      C             
 02D2  B8 0001		      C             mov   ax, 1
 02D5  C3		      C             ret
 02D6			      C Mode0_Datasheet2 ENDP
			      C 
 02D6			      C Mode0_Datasheet3 PROC NEAR
 02D6  E8 FD27		      C             call  SetGateHi
 02D9  E8 FD2E		      C             call  SetClkHi
 02DC  B0 10		      C             mov   al, 10h
 02DE  E8 FD3D		      C             call  WriteCw
			      C             AssertOutLow
 02E1  E4 00		     1C            in    al, 0
 02E3  0A C0		     1C            or    al, al
 02E5  74 03		     1C            jz    ??0035
 02E7  33 C0		     1C            xor   ax, ax
 02E9  C3		     1C            ret
 02EA			     1C ??0035:           
 02EA  E8 FD22		      C             call  SetClkLow
			      C             AssertOutLow
 02ED  E4 00		     1C            in    al, 0
 02EF  0A C0		     1C            or    al, al
 02F1  74 03		     1C            jz    ??0036
 02F3  33 C0		     1C            xor   ax, ax
 02F5  C3		     1C            ret
 02F6			     1C ??0036:           
 02F6  E8 FD11		      C             call  SetClkHi
			      C             AssertOutLow
 02F9  E4 00		     1C            in    al, 0
 02FB  0A C0		     1C            or    al, al
 02FD  74 03		     1C            jz    ??0037
 02FF  33 C0		     1C            xor   ax, ax
 0301  C3		     1C            ret
 0302			     1C ??0037:           
 0302  E8 FD0A		      C             call  SetClkLow
			      C             AssertOutLow
 0305  E4 00		     1C            in    al, 0
 0307  0A C0		     1C            or    al, al
 0309  74 03		     1C            jz    ??0038
 030B  33 C0		     1C            xor   ax, ax
 030D  C3		     1C            ret
 030E			     1C ??0038:           
 030E  B0 03		      C             mov   al, 3
 0310  E8 FD0E		      C             call  WriteCountByte ; cr = 3
			      C             AssertOutLow
 0313  E4 00		     1C            in    al, 0
 0315  0A C0		     1C            or    al, al
 0317  74 03		     1C            jz    ??0039
 0319  33 C0		     1C            xor   ax, ax
 031B  C3		     1C            ret
 031C			     1C ??0039:           
 031C  E8 FCEB		      C             call  SetClkHi
			      C             AssertOutLow
 031F  E4 00		     1C            in    al, 0
 0321  0A C0		     1C            or    al, al
 0323  74 03		     1C            jz    ??003A
 0325  33 C0		     1C            xor   ax, ax
 0327  C3		     1C            ret
 0328			     1C ??003A:           
 0328  E8 FCE4		      C             call  SetClkLow ; ce = cr = 3
			      C             AssertByteCeEq 3
 032B  E4 40		     1C            in    al, 40h
 032D  3C 03		     1C            cmp   al, 3
 032F  74 03		     1C            jz    ??003B
 0331  33 C0		     1C            xor   ax, ax
 0333  C3		     1C            ret
 0334			     1C ??003B:
			      C             AssertOutLow
 0334  E4 00		     1C            in    al, 0
 0336  0A C0		     1C            or    al, al
 0338  74 03		     1C            jz    ??003C
 033A  33 C0		     1C            xor   ax, ax
 033C  C3		     1C            ret
 033D			     1C ??003C:           
 033D  E8 FCCA		      C             call  SetClkHi
			      C             AssertOutLow
 0340  E4 00		     1C            in    al, 0
 0342  0A C0		     1C            or    al, al
 0344  74 03		     1C            jz    ??003D
 0346  33 C0		     1C            xor   ax, ax
 0348  C3		     1C            ret
 0349			     1C ??003D:           
 0349  E8 FCC3		      C             call  SetClkLow ; ce = 2
			      C             AssertByteCeEq 2
 034C  E4 40		     1C            in    al, 40h
 034E  3C 02		     1C            cmp   al, 2
 0350  74 03		     1C            jz    ??003E
 0352  33 C0		     1C            xor   ax, ax
 0354  C3		     1C            ret
 0355			     1C ??003E:
			      C             AssertOutLow
 0355  E4 00		     1C            in    al, 0
 0357  0A C0		     1C            or    al, al
 0359  74 03		     1C            jz    ??003F
 035B  33 C0		     1C            xor   ax, ax
 035D  C3		     1C            ret
 035E			     1C ??003F:           
 035E  E8 FCA9		      C             call  SetClkHi
			      C             AssertOutLow
 0361  E4 00		     1C            in    al, 0
 0363  0A C0		     1C            or    al, al
 0365  74 03		     1C            jz    ??0040
 0367  33 C0		     1C            xor   ax, ax
 0369  C3		     1C            ret
 036A			     1C ??0040:           
 036A  E8 FCA2		      C             call  SetClkLow ; ce = 1
			      C             AssertByteCeEq 1
 036D  E4 40		     1C            in    al, 40h
 036F  3C 01		     1C            cmp   al, 1
 0371  74 03		     1C            jz    ??0041
 0373  33 C0		     1C            xor   ax, ax
 0375  C3		     1C            ret
 0376			     1C ??0041:
			      C             AssertOutLow
 0376  E4 00		     1C            in    al, 0
 0378  0A C0		     1C            or    al, al
 037A  74 03		     1C            jz    ??0042
 037C  33 C0		     1C            xor   ax, ax
 037E  C3		     1C            ret
 037F			     1C ??0042:           
			      C 
 037F  B0 02		      C             mov    al, 2
 0381  E8 FC9D		      C             call  WriteCountByte ; cr = 2
 0384  E8 FC83		      C             call  SetClkHi
			      C             AssertOutLow
 0387  E4 00		     1C            in    al, 0
 0389  0A C0		     1C            or    al, al
 038B  74 03		     1C            jz    ??0043
 038D  33 C0		     1C            xor   ax, ax
 038F  C3		     1C            ret
 0390			     1C ??0043:           
 0390  E8 FC7C		      C             call  SetClkLow ; ce = cr = 2
			      C             AssertByteCeEq 2
 0393  E4 40		     1C            in    al, 40h
 0395  3C 02		     1C            cmp   al, 2
 0397  74 03		     1C            jz    ??0044
 0399  33 C0		     1C            xor   ax, ax
 039B  C3		     1C            ret
 039C			     1C ??0044:
			      C             AssertOutLow
 039C  E4 00		     1C            in    al, 0
 039E  0A C0		     1C            or    al, al
 03A0  74 03		     1C            jz    ??0045
 03A2  33 C0		     1C            xor   ax, ax
 03A4  C3		     1C            ret
 03A5			     1C ??0045:           
 03A5  E8 FC62		      C             call  SetClkHi
			      C             AssertOutLow
 03A8  E4 00		     1C            in    al, 0
 03AA  0A C0		     1C            or    al, al
 03AC  74 03		     1C            jz    ??0046
 03AE  33 C0		     1C            xor   ax, ax
 03B0  C3		     1C            ret
 03B1			     1C ??0046:           
 03B1  E8 FC5B		      C             call  SetClkLow ; ce = 1
			      C             AssertByteCeEq 1
 03B4  E4 40		     1C            in    al, 40h
 03B6  3C 01		     1C            cmp   al, 1
 03B8  74 03		     1C            jz    ??0047
 03BA  33 C0		     1C            xor   ax, ax
 03BC  C3		     1C            ret
 03BD			     1C ??0047:
			      C             AssertOutLow
 03BD  E4 00		     1C            in    al, 0
 03BF  0A C0		     1C            or    al, al
 03C1  74 03		     1C            jz    ??0048
 03C3  33 C0		     1C            xor   ax, ax
 03C5  C3		     1C            ret
 03C6			     1C ??0048:           
 03C6  E8 FC41		      C             call  SetClkHi
			      C             AssertOutLow
 03C9  E4 00		     1C            in    al, 0
 03CB  0A C0		     1C            or    al, al
 03CD  74 03		     1C            jz    ??0049
 03CF  33 C0		     1C            xor   ax, ax
 03D1  C3		     1C            ret
 03D2			     1C ??0049:           
 03D2  E8 FC3A		      C             call  SetClkLow ; ce = 0
			      C             AssertByteCeEq 0
 03D5  E4 40		     1C            in    al, 40h
 03D7  3C 00		     1C            cmp   al, 0
 03D9  74 03		     1C            jz    ??004A
 03DB  33 C0		     1C            xor   ax, ax
 03DD  C3		     1C            ret
 03DE			     1C ??004A:
			      C             AssertOutHi
 03DE  E4 00		     1C            in    al, 0
 03E0  0A C0		     1C            or    al, al
 03E2  75 03		     1C            jnz   ??004B
 03E4  33 C0		     1C            xor   ax, ax
 03E6  C3		     1C            ret
 03E7			     1C ??004B:
 03E7  E8 FC20		      C             call  SetClkHi
			      C             AssertOutHi
 03EA  E4 00		     1C            in    al, 0
 03EC  0A C0		     1C            or    al, al
 03EE  75 03		     1C            jnz   ??004C
 03F0  33 C0		     1C            xor   ax, ax
 03F2  C3		     1C            ret
 03F3			     1C ??004C:
 03F3  E8 FC19		      C             call  SetClkLow ; ce = 0ffffh
			      C             AssertOutHi
 03F6  E4 00		     1C            in    al, 0
 03F8  0A C0		     1C            or    al, al
 03FA  75 03		     1C            jnz   ??004D
 03FC  33 C0		     1C            xor   ax, ax
 03FE  C3		     1C            ret
 03FF			     1C ??004D:
			      C             AssertByteCeEq 0ffh
 03FF  E4 40		     1C            in    al, 40h
 0401  3C FF		     1C            cmp   al, 0ffh
 0403  74 03		     1C            jz    ??004E
 0405  33 C0		     1C            xor   ax, ax
 0407  C3		     1C            ret
 0408			     1C ??004E:
			      C 
 0408  B8 0001		      C             mov   ax, 1
 040B  C3		      C             ret
 040C			      C Mode0_Datasheet3 ENDP
			      C 
				include    mode1.asm
 040C			      C TestMode1  PROC NEAR
 040C  51		      C            push  cx
 040D  B9 0000		      C            mov   cx, 0
 0410  E8 0048		      C            call  Mode1_Datasheet1GateLow
 0413  C1 E0 00		      C            shl   ax, 0
 0416  0B C8		      C            or    cx, ax
 0418  8A C1		      C            mov   al, cl
 041A  E6 11		      C            out   11h, al
			      C 
 041C  E8 019D		      C            call  Mode1_Datasheet1GateHi
 041F  D1 E0		      C            shl   ax, 1
 0421  0B C8		      C            or    cx, ax
 0423  8A C1		      C            mov   al, cl
 0425  E6 11		      C            out   11h, al
			      C 
 0427  E8 02ED		      C            call  Mode1_Datasheet2GateLow
 042A  C1 E0 02		      C            shl   ax, 2
 042D  0B C8		      C            or    cx, ax
 042F  8A C1		      C            mov   al, cl
 0431  E6 11		      C            out   11h, al
			      C 
 0433  E8 0448		      C            call  Mode1_Datasheet2GateHi
 0436  C1 E0 03		      C            shl   ax, 3
 0439  0B C8		      C            or    cx, ax
 043B  8A C1		      C            mov   al, cl
 043D  E6 11		      C            out   11h, al
			      C 
 043F  E8 05BB		      C            call  Mode1_Datasheet3GateLow
 0442  C1 E0 04		      C            shl   ax, 4
 0445  0B C8		      C            or    cx, ax
 0447  8A C1		      C            mov   al, cl
 0449  E6 11		      C            out   11h, al
			      C 
 044B  E8 0709		      C            call  Mode1_Datasheet3GateHi
 044E  C1 E0 05		      C            shl   ax, 5
 0451  0B C8		      C            or    cx, ax
 0453  8A C1		      C            mov   al, cl
 0455  E6 11		      C            out   11h, al
			      C 
 0457  8B C1		      C            mov   ax, cx
 0459  59		      C            pop   cx
 045A  C3		      C            ret
 045B			      C TestMode1  ENDP
			      C 
 045B			      C Mode1_Datasheet1GateLow PROC NEAR
 045B  E8 FBA7		      C             call  SetGateLow
			      C 
 045E  E8 FBA9		      C             call  SetClkHi
 0461  B0 12		      C             mov   al, 12h
 0463  E8 FBB8		      C             call  WriteCw
			      C             AssertOutHi
 0466  E4 00		     1C            in    al, 0
 0468  0A C0		     1C            or    al, al
 046A  75 03		     1C            jnz   ??004F
 046C  33 C0		     1C            xor   ax, ax
 046E  C3		     1C            ret
 046F			     1C ??004F:
 046F  E8 FB9D		      C             call  SetClkLow
			      C             AssertOutHi
 0472  E4 00		     1C            in    al, 0
 0474  0A C0		     1C            or    al, al
 0476  75 03		     1C            jnz   ??0050
 0478  33 C0		     1C            xor   ax, ax
 047A  C3		     1C            ret
 047B			     1C ??0050:
 047B  E8 FB8C		      C             call  SetClkHi
			      C             AssertOutHi
 047E  E4 00		     1C            in    al, 0
 0480  0A C0		     1C            or    al, al
 0482  75 03		     1C            jnz   ??0051
 0484  33 C0		     1C            xor   ax, ax
 0486  C3		     1C            ret
 0487			     1C ??0051:
 0487  B0 03		      C             mov   al, 3
 0489  E8 FB95		      C             call  WriteCountByte
 048C  E8 FB80		      C             call  SetClkLow
			      C             AssertOutHi
 048F  E4 00		     1C            in    al, 0
 0491  0A C0		     1C            or    al, al
 0493  75 03		     1C            jnz   ??0052
 0495  33 C0		     1C            xor   ax, ax
 0497  C3		     1C            ret
 0498			     1C ??0052:
 0498  E8 FB6F		      C             call  SetClkHi
			      C             AssertOutHi
 049B  E4 00		     1C            in    al, 0
 049D  0A C0		     1C            or    al, al
 049F  75 03		     1C            jnz   ??0053
 04A1  33 C0		     1C            xor   ax, ax
 04A3  C3		     1C            ret
 04A4			     1C ??0053:
 04A4  E8 FB59		      C             call  SetGateHi
 04A7  E8 FB65		      C             call  SetClkLow
			      C             AssertOutHi
 04AA  E4 00		     1C            in    al, 0
 04AC  0A C0		     1C            or    al, al
 04AE  75 03		     1C            jnz   ??0054
 04B0  33 C0		     1C            xor   ax, ax
 04B2  C3		     1C            ret
 04B3			     1C ??0054:
 04B3  E8 FB4F		      C             call  SetGateLow
 04B6  E8 FB51		      C             call  SetClkHi
			      C             AssertOutHi
 04B9  E4 00		     1C            in    al, 0
 04BB  0A C0		     1C            or    al, al
 04BD  75 03		     1C            jnz   ??0055
 04BF  33 C0		     1C            xor   ax, ax
 04C1  C3		     1C            ret
 04C2			     1C ??0055:
 04C2  E8 FB4A		      C             call  SetClkLow ; ce = cr = 3
			      C             AssertByteCeEq 3
 04C5  E4 40		     1C            in    al, 40h
 04C7  3C 03		     1C            cmp   al, 3
 04C9  74 03		     1C            jz    ??0056
 04CB  33 C0		     1C            xor   ax, ax
 04CD  C3		     1C            ret
 04CE			     1C ??0056:
			      C             AssertOutLow
 04CE  E4 00		     1C            in    al, 0
 04D0  0A C0		     1C            or    al, al
 04D2  74 03		     1C            jz    ??0057
 04D4  33 C0		     1C            xor   ax, ax
 04D6  C3		     1C            ret
 04D7			     1C ??0057:           
 04D7  E8 FB30		      C             call  SetClkHi
			      C             AssertOutLow
 04DA  E4 00		     1C            in    al, 0
 04DC  0A C0		     1C            or    al, al
 04DE  74 03		     1C            jz    ??0058
 04E0  33 C0		     1C            xor   ax, ax
 04E2  C3		     1C            ret
 04E3			     1C ??0058:           
 04E3  E8 FB29		      C             call  SetClkLow ; ce = 2
			      C             AssertByteCeEq 2
 04E6  E4 40		     1C            in    al, 40h
 04E8  3C 02		     1C            cmp   al, 2
 04EA  74 03		     1C            jz    ??0059
 04EC  33 C0		     1C            xor   ax, ax
 04EE  C3		     1C            ret
 04EF			     1C ??0059:
			      C             AssertOutLow
 04EF  E4 00		     1C            in    al, 0
 04F1  0A C0		     1C            or    al, al
 04F3  74 03		     1C            jz    ??005A
 04F5  33 C0		     1C            xor   ax, ax
 04F7  C3		     1C            ret
 04F8			     1C ??005A:           
 04F8  E8 FB0F		      C             call  SetClkHi
			      C             AssertOutLow
 04FB  E4 00		     1C            in    al, 0
 04FD  0A C0		     1C            or    al, al
 04FF  74 03		     1C            jz    ??005B
 0501  33 C0		     1C            xor   ax, ax
 0503  C3		     1C            ret
 0504			     1C ??005B:           
 0504  E8 FB08		      C             call  SetClkLow ; ce = 1
			      C             AssertByteCeEq 1
 0507  E4 40		     1C            in    al, 40h
 0509  3C 01		     1C            cmp   al, 1
 050B  74 03		     1C            jz    ??005C
 050D  33 C0		     1C            xor   ax, ax
 050F  C3		     1C            ret
 0510			     1C ??005C:
			      C             AssertOutLow
 0510  E4 00		     1C            in    al, 0
 0512  0A C0		     1C            or    al, al
 0514  74 03		     1C            jz    ??005D
 0516  33 C0		     1C            xor   ax, ax
 0518  C3		     1C            ret
 0519			     1C ??005D:           
 0519  E8 FAEE		      C             call  SetClkHi
			      C             AssertOutLow
 051C  E4 00		     1C            in    al, 0
 051E  0A C0		     1C            or    al, al
 0520  74 03		     1C            jz    ??005E
 0522  33 C0		     1C            xor   ax, ax
 0524  C3		     1C            ret
 0525			     1C ??005E:           
 0525  E8 FAE7		      C             call  SetClkLow ; ce = 0
			      C             AssertByteCeEq 0
 0528  E4 40		     1C            in    al, 40h
 052A  3C 00		     1C            cmp   al, 0
 052C  74 03		     1C            jz    ??005F
 052E  33 C0		     1C            xor   ax, ax
 0530  C3		     1C            ret
 0531			     1C ??005F:
			      C             AssertOutHi
 0531  E4 00		     1C            in    al, 0
 0533  0A C0		     1C            or    al, al
 0535  75 03		     1C            jnz   ??0060
 0537  33 C0		     1C            xor   ax, ax
 0539  C3		     1C            ret
 053A			     1C ??0060:
 053A  E8 FACD		      C             call  SetClkHi
			      C             AssertOutHi
 053D  E4 00		     1C            in    al, 0
 053F  0A C0		     1C            or    al, al
 0541  75 03		     1C            jnz   ??0061
 0543  33 C0		     1C            xor   ax, ax
 0545  C3		     1C            ret
 0546			     1C ??0061:
 0546  E8 FAC6		      C             call  SetClkLow ; ce = 0ffffh
			      C             AssertByteCeEq 0ffh
 0549  E4 40		     1C            in    al, 40h
 054B  3C FF		     1C            cmp   al, 0ffh
 054D  74 03		     1C            jz    ??0062
 054F  33 C0		     1C            xor   ax, ax
 0551  C3		     1C            ret
 0552			     1C ??0062:
			      C             AssertOutHi
 0552  E4 00		     1C            in    al, 0
 0554  0A C0		     1C            or    al, al
 0556  75 03		     1C            jnz   ??0063
 0558  33 C0		     1C            xor   ax, ax
 055A  C3		     1C            ret
 055B			     1C ??0063:
 055B  E8 FAA2		      C             call  SetGateHi
 055E  E8 FAA9		      C             call  SetClkHi
			      C             AssertOutHi
 0561  E4 00		     1C            in    al, 0
 0563  0A C0		     1C            or    al, al
 0565  75 03		     1C            jnz   ??0064
 0567  33 C0		     1C            xor   ax, ax
 0569  C3		     1C            ret
 056A			     1C ??0064:
 056A  E8 FA98		      C             call  SetGateLow
			      C             AssertOutHi
 056D  E4 00		     1C            in    al, 0
 056F  0A C0		     1C            or    al, al
 0571  75 03		     1C            jnz   ??0065
 0573  33 C0		     1C            xor   ax, ax
 0575  C3		     1C            ret
 0576			     1C ??0065:
 0576  E8 FA96		      C             call  SetClkLow ; ce = cr = 3
			      C             AssertByteCeEq 3
 0579  E4 40		     1C            in    al, 40h
 057B  3C 03		     1C            cmp   al, 3
 057D  74 03		     1C            jz    ??0066
 057F  33 C0		     1C            xor   ax, ax
 0581  C3		     1C            ret
 0582			     1C ??0066:
			      C             AssertOutLow
 0582  E4 00		     1C            in    al, 0
 0584  0A C0		     1C            or    al, al
 0586  74 03		     1C            jz    ??0067
 0588  33 C0		     1C            xor   ax, ax
 058A  C3		     1C            ret
 058B			     1C ??0067:           
 058B  E8 FA7C		      C             call  SetClkHi
			      C             AssertOutLow
 058E  E4 00		     1C            in    al, 0
 0590  0A C0		     1C            or    al, al
 0592  74 03		     1C            jz    ??0068
 0594  33 C0		     1C            xor   ax, ax
 0596  C3		     1C            ret
 0597			     1C ??0068:           
 0597  E8 FA75		      C             call  SetClkLow ; ce = 2
			      C             AssertByteCeEq 2
 059A  E4 40		     1C            in    al, 40h
 059C  3C 02		     1C            cmp   al, 2
 059E  74 03		     1C            jz    ??0069
 05A0  33 C0		     1C            xor   ax, ax
 05A2  C3		     1C            ret
 05A3			     1C ??0069:
			      C             AssertOutLow
 05A3  E4 00		     1C            in    al, 0
 05A5  0A C0		     1C            or    al, al
 05A7  74 03		     1C            jz    ??006A
 05A9  33 C0		     1C            xor   ax, ax
 05AB  C3		     1C            ret
 05AC			     1C ??006A:           
 05AC  E8 FA5B		      C             call  SetClkHi
			      C             AssertOutLow
 05AF  E4 00		     1C            in    al, 0
 05B1  0A C0		     1C            or    al, al
 05B3  74 03		     1C            jz    ??006B
 05B5  33 C0		     1C            xor   ax, ax
 05B7  C3		     1C            ret
 05B8			     1C ??006B:           
			      C 
 05B8  B8 0001		      C             mov   ax, 1
 05BB  C3		      C             ret
 05BC			      C Mode1_Datasheet1GateLow ENDP
			      C 
 05BC			      C Mode1_Datasheet1GateHi PROC NEAR
 05BC  E8 FA41		      C             call  SetGateHi
			      C 
 05BF  E8 FA48		      C             call  SetClkHi
 05C2  B0 12		      C             mov   al, 12h
 05C4  E8 FA57		      C             call WriteCw
			      C             AssertOutHi
 05C7  E4 00		     1C            in    al, 0
 05C9  0A C0		     1C            or    al, al
 05CB  75 03		     1C            jnz   ??006C
 05CD  33 C0		     1C            xor   ax, ax
 05CF  C3		     1C            ret
 05D0			     1C ??006C:
 05D0  E8 FA3C		      C             call  SetClkLow
			      C             AssertOutHi
 05D3  E4 00		     1C            in    al, 0
 05D5  0A C0		     1C            or    al, al
 05D7  75 03		     1C            jnz   ??006D
 05D9  33 C0		     1C            xor   ax, ax
 05DB  C3		     1C            ret
 05DC			     1C ??006D:
 05DC  E8 FA2B		      C             call  SetClkHi
			      C             AssertOutHi
 05DF  E4 00		     1C            in    al, 0
 05E1  0A C0		     1C            or    al, al
 05E3  75 03		     1C            jnz   ??006E
 05E5  33 C0		     1C            xor   ax, ax
 05E7  C3		     1C            ret
 05E8			     1C ??006E:
 05E8  B0 03		      C             mov   al, 3
 05EA  E8 FA34		      C             call  WriteCountByte
 05ED  E8 FA1F		      C             call  SetClkLow
			      C             AssertOutHi
 05F0  E4 00		     1C            in    al, 0
 05F2  0A C0		     1C            or    al, al
 05F4  75 03		     1C            jnz   ??006F
 05F6  33 C0		     1C            xor   ax, ax
 05F8  C3		     1C            ret
 05F9			     1C ??006F:
 05F9  E8 FA0E		      C             call  SetClkHi
 05FC  E8 FA06		      C             call  SetGateLow
			      C             AssertOutHi
 05FF  E4 00		     1C            in    al, 0
 0601  0A C0		     1C            or    al, al
 0603  75 03		     1C            jnz   ??0070
 0605  33 C0		     1C            xor   ax, ax
 0607  C3		     1C            ret
 0608			     1C ??0070:
 0608  E8 F9F5		      C             call  SetGateHi
 060B  E8 FA01		      C             call  SetClkLow
			      C             AssertOutHi
 060E  E4 00		     1C            in    al, 0
 0610  0A C0		     1C            or    al, al
 0612  75 03		     1C            jnz   ??0071
 0614  33 C0		     1C            xor   ax, ax
 0616  C3		     1C            ret
 0617			     1C ??0071:
 0617  E8 F9F0		      C             call  SetClkHi
			      C             AssertOutHi
 061A  E4 00		     1C            in    al, 0
 061C  0A C0		     1C            or    al, al
 061E  75 03		     1C            jnz   ??0072
 0620  33 C0		     1C            xor   ax, ax
 0622  C3		     1C            ret
 0623			     1C ??0072:
 0623  E8 F9E9		      C             call  SetClkLow ; ce = cr = 3
			      C             AssertByteCeEq 3
 0626  E4 40		     1C            in    al, 40h
 0628  3C 03		     1C            cmp   al, 3
 062A  74 03		     1C            jz    ??0073
 062C  33 C0		     1C            xor   ax, ax
 062E  C3		     1C            ret
 062F			     1C ??0073:
			      C             AssertOutLow
 062F  E4 00		     1C            in    al, 0
 0631  0A C0		     1C            or    al, al
 0633  74 03		     1C            jz    ??0074
 0635  33 C0		     1C            xor   ax, ax
 0637  C3		     1C            ret
 0638			     1C ??0074:           
 0638  E8 F9CF		      C             call  SetClkHi
			      C             AssertOutLow
 063B  E4 00		     1C            in    al, 0
 063D  0A C0		     1C            or    al, al
 063F  74 03		     1C            jz    ??0075
 0641  33 C0		     1C            xor   ax, ax
 0643  C3		     1C            ret
 0644			     1C ??0075:           
 0644  E8 F9C8		      C             call  SetClkLow ; ce = 2
			      C             AssertByteCeEq 2
 0647  E4 40		     1C            in    al, 40h
 0649  3C 02		     1C            cmp   al, 2
 064B  74 03		     1C            jz    ??0076
 064D  33 C0		     1C            xor   ax, ax
 064F  C3		     1C            ret
 0650			     1C ??0076:
			      C             AssertOutLow
 0650  E4 00		     1C            in    al, 0
 0652  0A C0		     1C            or    al, al
 0654  74 03		     1C            jz    ??0077
 0656  33 C0		     1C            xor   ax, ax
 0658  C3		     1C            ret
 0659			     1C ??0077:           
 0659  E8 F9AE		      C             call  SetClkHi
			      C             AssertOutLow
 065C  E4 00		     1C            in    al, 0
 065E  0A C0		     1C            or    al, al
 0660  74 03		     1C            jz    ??0078
 0662  33 C0		     1C            xor   ax, ax
 0664  C3		     1C            ret
 0665			     1C ??0078:           
 0665  E8 F9A7		      C             call  SetClkLow ; ce = 1
			      C             AssertByteCeEq 1
 0668  E4 40		     1C            in    al, 40h
 066A  3C 01		     1C            cmp   al, 1
 066C  74 03		     1C            jz    ??0079
 066E  33 C0		     1C            xor   ax, ax
 0670  C3		     1C            ret
 0671			     1C ??0079:
			      C             AssertOutLow
 0671  E4 00		     1C            in    al, 0
 0673  0A C0		     1C            or    al, al
 0675  74 03		     1C            jz    ??007A
 0677  33 C0		     1C            xor   ax, ax
 0679  C3		     1C            ret
 067A			     1C ??007A:           
 067A  E8 F98D		      C             call  SetClkHi
			      C             AssertOutLow
 067D  E4 00		     1C            in    al, 0
 067F  0A C0		     1C            or    al, al
 0681  74 03		     1C            jz    ??007B
 0683  33 C0		     1C            xor   ax, ax
 0685  C3		     1C            ret
 0686			     1C ??007B:           
 0686  E8 F986		      C             call  SetClkLow ; ce = 0
			      C             AssertByteCeEq 0
 0689  E4 40		     1C            in    al, 40h
 068B  3C 00		     1C            cmp   al, 0
 068D  74 03		     1C            jz    ??007C
 068F  33 C0		     1C            xor   ax, ax
 0691  C3		     1C            ret
 0692			     1C ??007C:
			      C             AssertOutHi
 0692  E4 00		     1C            in    al, 0
 0694  0A C0		     1C            or    al, al
 0696  75 03		     1C            jnz   ??007D
 0698  33 C0		     1C            xor   ax, ax
 069A  C3		     1C            ret
 069B			     1C ??007D:
 069B  E8 F96C		      C             call  SetClkHi
			      C             AssertOutHi
 069E  E4 00		     1C            in    al, 0
 06A0  0A C0		     1C            or    al, al
 06A2  75 03		     1C            jnz   ??007E
 06A4  33 C0		     1C            xor   ax, ax
 06A6  C3		     1C            ret
 06A7			     1C ??007E:
 06A7  E8 F95B		      C             call  SetGateLow
			      C             AssertOutHi
 06AA  E4 00		     1C            in    al, 0
 06AC  0A C0		     1C            or    al, al
 06AE  75 03		     1C            jnz   ??007F
 06B0  33 C0		     1C            xor   ax, ax
 06B2  C3		     1C            ret
 06B3			     1C ??007F:
 06B3  E8 F959		      C             call  SetClkLow ; ce = 0ffffh
			      C             AssertByteCeEq 0ffh
 06B6  E4 40		     1C            in    al, 40h
 06B8  3C FF		     1C            cmp   al, 0ffh
 06BA  74 03		     1C            jz    ??0080
 06BC  33 C0		     1C            xor   ax, ax
 06BE  C3		     1C            ret
 06BF			     1C ??0080:
			      C             AssertOutHi
 06BF  E4 00		     1C            in    al, 0
 06C1  0A C0		     1C            or    al, al
 06C3  75 03		     1C            jnz   ??0081
 06C5  33 C0		     1C            xor   ax, ax
 06C7  C3		     1C            ret
 06C8			     1C ??0081:
 06C8  E8 F935		      C             call  SetGateHi
 06CB  E8 F93C		      C             call  SetClkHi
			      C             AssertOutHi
 06CE  E4 00		     1C            in    al, 0
 06D0  0A C0		     1C            or    al, al
 06D2  75 03		     1C            jnz   ??0082
 06D4  33 C0		     1C            xor   ax, ax
 06D6  C3		     1C            ret
 06D7			     1C ??0082:
 06D7  E8 F92B		      C             call  SetGateLow
			      C             AssertOutHi
 06DA  E4 00		     1C            in    al, 0
 06DC  0A C0		     1C            or    al, al
 06DE  75 03		     1C            jnz   ??0083
 06E0  33 C0		     1C            xor   ax, ax
 06E2  C3		     1C            ret
 06E3			     1C ??0083:
 06E3  E8 F929		      C             call  SetClkLow ; ce = cr = 3
			      C             AssertOutLow
 06E6  E4 00		     1C            in    al, 0
 06E8  0A C0		     1C            or    al, al
 06EA  74 03		     1C            jz    ??0084
 06EC  33 C0		     1C            xor   ax, ax
 06EE  C3		     1C            ret
 06EF			     1C ??0084:           
 06EF  E8 F918		      C             call  SetClkHi
			      C             AssertOutLow
 06F2  E4 00		     1C            in    al, 0
 06F4  0A C0		     1C            or    al, al
 06F6  74 03		     1C            jz    ??0085
 06F8  33 C0		     1C            xor   ax, ax
 06FA  C3		     1C            ret
 06FB			     1C ??0085:           
 06FB  E8 F911		      C             call  SetClkLow ; ce = 2
			      C             AssertOutLow
 06FE  E4 00		     1C            in    al, 0
 0700  0A C0		     1C            or    al, al
 0702  74 03		     1C            jz    ??0086
 0704  33 C0		     1C            xor   ax, ax
 0706  C3		     1C            ret
 0707			     1C ??0086:           
 0707  E8 F900		      C             call  SetClkHi
			      C             AssertOutLow
 070A  E4 00		     1C            in    al, 0
 070C  0A C0		     1C            or    al, al
 070E  74 03		     1C            jz    ??0087
 0710  33 C0		     1C            xor   ax, ax
 0712  C3		     1C            ret
 0713			     1C ??0087:           
			      C 
 0713  B8 0001		      C             mov   ax, 1
 0716  C3		      C             ret
 0717			      C Mode1_Datasheet1GateHi ENDP
			      C 
 0717			      C Mode1_Datasheet2GateLow PROC NEAR
 0717  E8 F8EB		      C             call  SetGateLow
			      C 
 071A  E8 F8ED		      C             call  SetClkHi
 071D  B0 12		      C             mov   al, 12h
 071F  E8 F8FC		      C             call  WriteCw
			      C             AssertOutHi
 0722  E4 00		     1C            in    al, 0
 0724  0A C0		     1C            or    al, al
 0726  75 03		     1C            jnz   ??0088
 0728  33 C0		     1C            xor   ax, ax
 072A  C3		     1C            ret
 072B			     1C ??0088:
 072B  E8 F8E1		      C             call  SetClkLow
			      C             AssertOutHi
 072E  E4 00		     1C            in    al, 0
 0730  0A C0		     1C            or    al, al
 0732  75 03		     1C            jnz   ??0089
 0734  33 C0		     1C            xor   ax, ax
 0736  C3		     1C            ret
 0737			     1C ??0089:
 0737  E8 F8D0		      C             call  SetClkHi
			      C             AssertOutHi
 073A  E4 00		     1C            in    al, 0
 073C  0A C0		     1C            or    al, al
 073E  75 03		     1C            jnz   ??008A
 0740  33 C0		     1C            xor   ax, ax
 0742  C3		     1C            ret
 0743			     1C ??008A:
 0743  B0 03		      C             mov   al, 3
 0745  E8 F8D9		      C             call WriteCountByte
 0748  E8 F8C4		      C             call  SetClkLow
			      C             AssertOutHi
 074B  E4 00		     1C            in    al, 0
 074D  0A C0		     1C            or    al, al
 074F  75 03		     1C            jnz   ??008B
 0751  33 C0		     1C            xor   ax, ax
 0753  C3		     1C            ret
 0754			     1C ??008B:
 0754  E8 F8B3		      C             call  SetClkHi
			      C             AssertOutHi
 0757  E4 00		     1C            in    al, 0
 0759  0A C0		     1C            or    al, al
 075B  75 03		     1C            jnz   ??008C
 075D  33 C0		     1C            xor   ax, ax
 075F  C3		     1C            ret
 0760			     1C ??008C:
 0760  E8 F89D		      C             call  SetGateHi
 0763  E8 F8A9		      C             call  SetClkLow
			      C             AssertOutHi
 0766  E4 00		     1C            in    al, 0
 0768  0A C0		     1C            or    al, al
 076A  75 03		     1C            jnz   ??008D
 076C  33 C0		     1C            xor   ax, ax
 076E  C3		     1C            ret
 076F			     1C ??008D:
 076F  E8 F893		      C             call  SetGateLow
 0772  E8 F895		      C             call  SetClkHi
			      C             AssertOutHi
 0775  E4 00		     1C            in    al, 0
 0777  0A C0		     1C            or    al, al
 0779  75 03		     1C            jnz   ??008E
 077B  33 C0		     1C            xor   ax, ax
 077D  C3		     1C            ret
 077E			     1C ??008E:
 077E  E8 F88E		      C             call  SetClkLow ; ce = cr = 3
			      C             AssertByteCeEq 3
 0781  E4 40		     1C            in    al, 40h
 0783  3C 03		     1C            cmp   al, 3
 0785  74 03		     1C            jz    ??008F
 0787  33 C0		     1C            xor   ax, ax
 0789  C3		     1C            ret
 078A			     1C ??008F:
			      C             AssertOutLow
 078A  E4 00		     1C            in    al, 0
 078C  0A C0		     1C            or    al, al
 078E  74 03		     1C            jz    ??0090
 0790  33 C0		     1C            xor   ax, ax
 0792  C3		     1C            ret
 0793			     1C ??0090:           
 0793  E8 F874		      C             call  SetClkHi
			      C             AssertOutLow
 0796  E4 00		     1C            in    al, 0
 0798  0A C0		     1C            or    al, al
 079A  74 03		     1C            jz    ??0091
 079C  33 C0		     1C            xor   ax, ax
 079E  C3		     1C            ret
 079F			     1C ??0091:           
 079F  E8 F86D		      C             call  SetClkLow ; ce = 2
			      C             AssertByteCeEq 2
 07A2  E4 40		     1C            in    al, 40h
 07A4  3C 02		     1C            cmp   al, 2
 07A6  74 03		     1C            jz    ??0092
 07A8  33 C0		     1C            xor   ax, ax
 07AA  C3		     1C            ret
 07AB			     1C ??0092:
			      C             AssertOutLow
 07AB  E4 00		     1C            in    al, 0
 07AD  0A C0		     1C            or    al, al
 07AF  74 03		     1C            jz    ??0093
 07B1  33 C0		     1C            xor   ax, ax
 07B3  C3		     1C            ret
 07B4			     1C ??0093:           
 07B4  E8 F853		      C             call  SetClkHi
			      C             AssertOutLow
 07B7  E4 00		     1C            in    al, 0
 07B9  0A C0		     1C            or    al, al
 07BB  74 03		     1C            jz    ??0094
 07BD  33 C0		     1C            xor   ax, ax
 07BF  C3		     1C            ret
 07C0			     1C ??0094:           
 07C0  E8 F83D		      C             call  SetGateHi
			      C             AssertOutLow
 07C3  E4 00		     1C            in    al, 0
 07C5  0A C0		     1C            or    al, al
 07C7  74 03		     1C            jz    ??0095
 07C9  33 C0		     1C            xor   ax, ax
 07CB  C3		     1C            ret
 07CC			     1C ??0095:           
 07CC  E8 F840		      C             call  SetClkLow ; ce = 1
			      C             AssertByteCeEq 1
 07CF  E4 40		     1C            in    al, 40h
 07D1  3C 01		     1C            cmp   al, 1
 07D3  74 03		     1C            jz    ??0096
 07D5  33 C0		     1C            xor   ax, ax
 07D7  C3		     1C            ret
 07D8			     1C ??0096:
			      C             AssertOutLow
 07D8  E4 00		     1C            in    al, 0
 07DA  0A C0		     1C            or    al, al
 07DC  74 03		     1C            jz    ??0097
 07DE  33 C0		     1C            xor   ax, ax
 07E0  C3		     1C            ret
 07E1			     1C ??0097:           
 07E1  E8 F821		      C             call  SetGateLow
			      C             AssertOutLow
 07E4  E4 00		     1C            in    al, 0
 07E6  0A C0		     1C            or    al, al
 07E8  74 03		     1C            jz    ??0098
 07EA  33 C0		     1C            xor   ax, ax
 07EC  C3		     1C            ret
 07ED			     1C ??0098:           
			      C             AssertByteCeEq 1
 07ED  E4 40		     1C            in    al, 40h
 07EF  3C 01		     1C            cmp   al, 1
 07F1  74 03		     1C            jz    ??0099
 07F3  33 C0		     1C            xor   ax, ax
 07F5  C3		     1C            ret
 07F6			     1C ??0099:
 07F6  E8 F811		      C             call  SetClkHi
			      C             AssertOutLow
 07F9  E4 00		     1C            in    al, 0
 07FB  0A C0		     1C            or    al, al
 07FD  74 03		     1C            jz    ??009A
 07FF  33 C0		     1C            xor   ax, ax
 0801  C3		     1C            ret
 0802			     1C ??009A:           
 0802  E8 F80A		      C             call  SetClkLow ; ce = cr = 3
			      C             AssertOutLow
 0805  E4 00		     1C            in    al, 0
 0807  0A C0		     1C            or    al, al
 0809  74 03		     1C            jz    ??009B
 080B  33 C0		     1C            xor   ax, ax
 080D  C3		     1C            ret
 080E			     1C ??009B:           
			      C             AssertByteCeEq 3
 080E  E4 40		     1C            in    al, 40h
 0810  3C 03		     1C            cmp   al, 3
 0812  74 03		     1C            jz    ??009C
 0814  33 C0		     1C            xor   ax, ax
 0816  C3		     1C            ret
 0817			     1C ??009C:
 0817  E8 F7F0		      C             call  SetClkHi
			      C             AssertOutLow
 081A  E4 00		     1C            in    al, 0
 081C  0A C0		     1C            or    al, al
 081E  74 03		     1C            jz    ??009D
 0820  33 C0		     1C            xor   ax, ax
 0822  C3		     1C            ret
 0823			     1C ??009D:           
 0823  E8 F7E9		      C             call  SetClkLow ; ce = 2
			      C             AssertByteCeEq 2
 0826  E4 40		     1C            in    al, 40h
 0828  3C 02		     1C            cmp   al, 2
 082A  74 03		     1C            jz    ??009E
 082C  33 C0		     1C            xor   ax, ax
 082E  C3		     1C            ret
 082F			     1C ??009E:
			      C             AssertOutLow
 082F  E4 00		     1C            in    al, 0
 0831  0A C0		     1C            or    al, al
 0833  74 03		     1C            jz    ??009F
 0835  33 C0		     1C            xor   ax, ax
 0837  C3		     1C            ret
 0838			     1C ??009F:           
 0838  E8 F7CF		      C             call  SetClkHi
			      C             AssertOutLow
 083B  E4 00		     1C            in    al, 0
 083D  0A C0		     1C            or    al, al
 083F  74 03		     1C            jz    ??00A0
 0841  33 C0		     1C            xor   ax, ax
 0843  C3		     1C            ret
 0844			     1C ??00A0:           
 0844  E8 F7C8		      C             call  SetClkLow ; ce = 1
			      C             AssertByteCeEq 1
 0847  E4 40		     1C            in    al, 40h
 0849  3C 01		     1C            cmp   al, 1
 084B  74 03		     1C            jz    ??00A1
 084D  33 C0		     1C            xor   ax, ax
 084F  C3		     1C            ret
 0850			     1C ??00A1:
			      C             AssertOutLow
 0850  E4 00		     1C            in    al, 0
 0852  0A C0		     1C            or    al, al
 0854  74 03		     1C            jz    ??00A2
 0856  33 C0		     1C            xor   ax, ax
 0858  C3		     1C            ret
 0859			     1C ??00A2:           
 0859  E8 F7AE		      C             call  SetClkHi
			      C             AssertOutLow
 085C  E4 00		     1C            in    al, 0
 085E  0A C0		     1C            or    al, al
 0860  74 03		     1C            jz    ??00A3
 0862  33 C0		     1C            xor   ax, ax
 0864  C3		     1C            ret
 0865			     1C ??00A3:           
 0865  E8 F7A7		      C             call  SetClkLow ; ce = 0
			      C             AssertByteCeEq 0
 0868  E4 40		     1C            in    al, 40h
 086A  3C 00		     1C            cmp   al, 0
 086C  74 03		     1C            jz    ??00A4
 086E  33 C0		     1C            xor   ax, ax
 0870  C3		     1C            ret
 0871			     1C ??00A4:
			      C             AssertOutHi
 0871  E4 00		     1C            in    al, 0
 0873  0A C0		     1C            or    al, al
 0875  75 03		     1C            jnz   ??00A5
 0877  33 C0		     1C            xor   ax, ax
 0879  C3		     1C            ret
 087A			     1C ??00A5:
			      C 
 087A  B8 0001		      C             mov   ax, 1
 087D  C3		      C             ret
 087E			      C Mode1_Datasheet2GateLow ENDP
			      C 
 087E			      C Mode1_Datasheet2GateHi PROC NEAR
 087E  E8 F77F		      C             call  SetGateHi
			      C 
 0881  E8 F786		      C             call  SetClkHi
 0884  B0 12		      C             mov   al, 12h
 0886  E8 F795		      C             call  WriteCw
			      C             AssertOutHi
 0889  E4 00		     1C            in    al, 0
 088B  0A C0		     1C            or    al, al
 088D  75 03		     1C            jnz   ??00A6
 088F  33 C0		     1C            xor   ax, ax
 0891  C3		     1C            ret
 0892			     1C ??00A6:
 0892  E8 F77A		      C             call  SetClkLow
			      C             AssertOutHi
 0895  E4 00		     1C            in    al, 0
 0897  0A C0		     1C            or    al, al
 0899  75 03		     1C            jnz   ??00A7
 089B  33 C0		     1C            xor   ax, ax
 089D  C3		     1C            ret
 089E			     1C ??00A7:
 089E  E8 F769		      C             call  SetClkHi
			      C             AssertOutHi
 08A1  E4 00		     1C            in    al, 0
 08A3  0A C0		     1C            or    al, al
 08A5  75 03		     1C            jnz   ??00A8
 08A7  33 C0		     1C            xor   ax, ax
 08A9  C3		     1C            ret
 08AA			     1C ??00A8:
 08AA  B0 03		      C             mov   al, 3
 08AC  E8 F772		      C             call  WriteCountByte
 08AF  E8 F75D		      C             call  SetClkLow
			      C             AssertOutHi
 08B2  E4 00		     1C            in    al, 0
 08B4  0A C0		     1C            or    al, al
 08B6  75 03		     1C            jnz   ??00A9
 08B8  33 C0		     1C            xor   ax, ax
 08BA  C3		     1C            ret
 08BB			     1C ??00A9:
 08BB  E8 F74C		      C             call  SetClkHi
			      C             AssertOutHi
 08BE  E4 00		     1C            in    al, 0
 08C0  0A C0		     1C            or    al, al
 08C2  75 03		     1C            jnz   ??00AA
 08C4  33 C0		     1C            xor   ax, ax
 08C6  C3		     1C            ret
 08C7			     1C ??00AA:
 08C7  E8 F73B		      C             call  SetGateLow
			      C             AssertOutHi
 08CA  E4 00		     1C            in    al, 0
 08CC  0A C0		     1C            or    al, al
 08CE  75 03		     1C            jnz   ??00AB
 08D0  33 C0		     1C            xor   ax, ax
 08D2  C3		     1C            ret
 08D3			     1C ??00AB:
 08D3  E8 F72A		      C             call  SetGateHi
 08D6  E8 F736		      C             call  SetClkLow
			      C             AssertOutHi
 08D9  E4 00		     1C            in    al, 0
 08DB  0A C0		     1C            or    al, al
 08DD  75 03		     1C            jnz   ??00AC
 08DF  33 C0		     1C            xor   ax, ax
 08E1  C3		     1C            ret
 08E2			     1C ??00AC:
 08E2  E8 F720		      C             call  SetGateLow
 08E5  E8 F722		      C             call  SetClkHi
			      C             AssertOutHi
 08E8  E4 00		     1C            in    al, 0
 08EA  0A C0		     1C            or    al, al
 08EC  75 03		     1C            jnz   ??00AD
 08EE  33 C0		     1C            xor   ax, ax
 08F0  C3		     1C            ret
 08F1			     1C ??00AD:
 08F1  E8 F71B		      C             call  SetClkLow ; ce = cr = 3
			      C             AssertByteCeEq 3
 08F4  E4 40		     1C            in    al, 40h
 08F6  3C 03		     1C            cmp   al, 3
 08F8  74 03		     1C            jz    ??00AE
 08FA  33 C0		     1C            xor   ax, ax
 08FC  C3		     1C            ret
 08FD			     1C ??00AE:
			      C             AssertOutLow
 08FD  E4 00		     1C            in    al, 0
 08FF  0A C0		     1C            or    al, al
 0901  74 03		     1C            jz    ??00AF
 0903  33 C0		     1C            xor   ax, ax
 0905  C3		     1C            ret
 0906			     1C ??00AF:           
 0906  E8 F701		      C             call  SetClkHi
			      C             AssertOutLow
 0909  E4 00		     1C            in    al, 0
 090B  0A C0		     1C            or    al, al
 090D  74 03		     1C            jz    ??00B0
 090F  33 C0		     1C            xor   ax, ax
 0911  C3		     1C            ret
 0912			     1C ??00B0:           
 0912  E8 F6FA		      C             call  SetClkLow ; ce = 2
			      C             AssertByteCeEq 2
 0915  E4 40		     1C            in    al, 40h
 0917  3C 02		     1C            cmp   al, 2
 0919  74 03		     1C            jz    ??00B1
 091B  33 C0		     1C            xor   ax, ax
 091D  C3		     1C            ret
 091E			     1C ??00B1:
			      C             AssertOutLow
 091E  E4 00		     1C            in    al, 0
 0920  0A C0		     1C            or    al, al
 0922  74 03		     1C            jz    ??00B2
 0924  33 C0		     1C            xor   ax, ax
 0926  C3		     1C            ret
 0927			     1C ??00B2:           
 0927  E8 F6DB		      C             call  SetGateLow
			      C             AssertOutLow
 092A  E4 00		     1C            in    al, 0
 092C  0A C0		     1C            or    al, al
 092E  74 03		     1C            jz    ??00B3
 0930  33 C0		     1C            xor   ax, ax
 0932  C3		     1C            ret
 0933			     1C ??00B3:           
 0933  E8 F6D4		      C             call  SetClkHi
			      C             AssertOutLow
 0936  E4 00		     1C            in    al, 0
 0938  0A C0		     1C            or    al, al
 093A  74 03		     1C            jz    ??00B4
 093C  33 C0		     1C            xor   ax, ax
 093E  C3		     1C            ret
 093F			     1C ??00B4:           
 093F  E8 F6BE		      C             call  SetGateHi
			      C             AssertOutLow
 0942  E4 00		     1C            in    al, 0
 0944  0A C0		     1C            or    al, al
 0946  74 03		     1C            jz    ??00B5
 0948  33 C0		     1C            xor   ax, ax
 094A  C3		     1C            ret
 094B			     1C ??00B5:           
 094B  E8 F6C1		      C             call  SetClkLow ; ce = 1
			      C             AssertByteCeEq 1
 094E  E4 40		     1C            in    al, 40h
 0950  3C 01		     1C            cmp   al, 1
 0952  74 03		     1C            jz    ??00B6
 0954  33 C0		     1C            xor   ax, ax
 0956  C3		     1C            ret
 0957			     1C ??00B6:
			      C             AssertOutLow
 0957  E4 00		     1C            in    al, 0
 0959  0A C0		     1C            or    al, al
 095B  74 03		     1C            jz    ??00B7
 095D  33 C0		     1C            xor   ax, ax
 095F  C3		     1C            ret
 0960			     1C ??00B7:           
 0960  E8 F6A2		      C             call  SetGateLow
			      C             AssertOutLow
 0963  E4 00		     1C            in    al, 0
 0965  0A C0		     1C            or    al, al
 0967  74 03		     1C            jz    ??00B8
 0969  33 C0		     1C            xor   ax, ax
 096B  C3		     1C            ret
 096C			     1C ??00B8:           
			      C             AssertByteCeEq 1
 096C  E4 40		     1C            in    al, 40h
 096E  3C 01		     1C            cmp   al, 1
 0970  74 03		     1C            jz    ??00B9
 0972  33 C0		     1C            xor   ax, ax
 0974  C3		     1C            ret
 0975			     1C ??00B9:
 0975  E8 F692		      C             call  SetClkHi
			      C             AssertOutLow
 0978  E4 00		     1C            in    al, 0
 097A  0A C0		     1C            or    al, al
 097C  74 03		     1C            jz    ??00BA
 097E  33 C0		     1C            xor   ax, ax
 0980  C3		     1C            ret
 0981			     1C ??00BA:           
 0981  E8 F68B		      C             call  SetClkLow ; ce = cr = 3
			      C             AssertOutLow
 0984  E4 00		     1C            in    al, 0
 0986  0A C0		     1C            or    al, al
 0988  74 03		     1C            jz    ??00BB
 098A  33 C0		     1C            xor   ax, ax
 098C  C3		     1C            ret
 098D			     1C ??00BB:           
			      C             AssertByteCeEq 3
 098D  E4 40		     1C            in    al, 40h
 098F  3C 03		     1C            cmp   al, 3
 0991  74 03		     1C            jz    ??00BC
 0993  33 C0		     1C            xor   ax, ax
 0995  C3		     1C            ret
 0996			     1C ??00BC:
 0996  E8 F671		      C             call  SetClkHi
			      C             AssertOutLow
 0999  E4 00		     1C            in    al, 0
 099B  0A C0		     1C            or    al, al
 099D  74 03		     1C            jz    ??00BD
 099F  33 C0		     1C            xor   ax, ax
 09A1  C3		     1C            ret
 09A2			     1C ??00BD:           
 09A2  E8 F66A		      C             call  SetClkLow ; ce = 2
			      C             AssertByteCeEq 2
 09A5  E4 40		     1C            in    al, 40h
 09A7  3C 02		     1C            cmp   al, 2
 09A9  74 03		     1C            jz    ??00BE
 09AB  33 C0		     1C            xor   ax, ax
 09AD  C3		     1C            ret
 09AE			     1C ??00BE:
			      C             AssertOutLow
 09AE  E4 00		     1C            in    al, 0
 09B0  0A C0		     1C            or    al, al
 09B2  74 03		     1C            jz    ??00BF
 09B4  33 C0		     1C            xor   ax, ax
 09B6  C3		     1C            ret
 09B7			     1C ??00BF:           
 09B7  E8 F650		      C             call  SetClkHi
			      C             AssertOutLow
 09BA  E4 00		     1C            in    al, 0
 09BC  0A C0		     1C            or    al, al
 09BE  74 03		     1C            jz    ??00C0
 09C0  33 C0		     1C            xor   ax, ax
 09C2  C3		     1C            ret
 09C3			     1C ??00C0:           
 09C3  E8 F649		      C             call  SetClkLow ; ce = 1
			      C             AssertByteCeEq 1
 09C6  E4 40		     1C            in    al, 40h
 09C8  3C 01		     1C            cmp   al, 1
 09CA  74 03		     1C            jz    ??00C1
 09CC  33 C0		     1C            xor   ax, ax
 09CE  C3		     1C            ret
 09CF			     1C ??00C1:
			      C             AssertOutLow
 09CF  E4 00		     1C            in    al, 0
 09D1  0A C0		     1C            or    al, al
 09D3  74 03		     1C            jz    ??00C2
 09D5  33 C0		     1C            xor   ax, ax
 09D7  C3		     1C            ret
 09D8			     1C ??00C2:           
 09D8  E8 F62F		      C             call  SetClkHi
			      C             AssertOutLow
 09DB  E4 00		     1C            in    al, 0
 09DD  0A C0		     1C            or    al, al
 09DF  74 03		     1C            jz    ??00C3
 09E1  33 C0		     1C            xor   ax, ax
 09E3  C3		     1C            ret
 09E4			     1C ??00C3:           
 09E4  E8 F628		      C             call  SetClkLow ; ce = 0
			      C             AssertByteCeEq 0
 09E7  E4 40		     1C            in    al, 40h
 09E9  3C 00		     1C            cmp   al, 0
 09EB  74 03		     1C            jz    ??00C4
 09ED  33 C0		     1C            xor   ax, ax
 09EF  C3		     1C            ret
 09F0			     1C ??00C4:
			      C             AssertOutHi
 09F0  E4 00		     1C            in    al, 0
 09F2  0A C0		     1C            or    al, al
 09F4  75 03		     1C            jnz   ??00C5
 09F6  33 C0		     1C            xor   ax, ax
 09F8  C3		     1C            ret
 09F9			     1C ??00C5:
			      C 
 09F9  B8 0001		      C             mov   ax, 1
 09FC  C3		      C             ret
 09FD			      C Mode1_Datasheet2GateHi ENDP
			      C 
 09FD			      C Mode1_Datasheet3GateLow PROC NEAR
 09FD  E8 F605		      C             call  SetGateLow
			      C 
 0A00  E8 F607		      C             call  SetClkHi
 0A03  B0 12		      C             mov   al, 12h
 0A05  E8 F616		      C             call  WriteCw
			      C             AssertOutHi
 0A08  E4 00		     1C            in    al, 0
 0A0A  0A C0		     1C            or    al, al
 0A0C  75 03		     1C            jnz   ??00C6
 0A0E  33 C0		     1C            xor   ax, ax
 0A10  C3		     1C            ret
 0A11			     1C ??00C6:
 0A11  E8 F5FB		      C             call  SetClkLow
			      C             AssertOutHi
 0A14  E4 00		     1C            in    al, 0
 0A16  0A C0		     1C            or    al, al
 0A18  75 03		     1C            jnz   ??00C7
 0A1A  33 C0		     1C            xor   ax, ax
 0A1C  C3		     1C            ret
 0A1D			     1C ??00C7:
 0A1D  E8 F5EA		      C             call  SetClkHi
			      C             AssertOutHi
 0A20  E4 00		     1C            in    al, 0
 0A22  0A C0		     1C            or    al, al
 0A24  75 03		     1C            jnz   ??00C8
 0A26  33 C0		     1C            xor   ax, ax
 0A28  C3		     1C            ret
 0A29			     1C ??00C8:
 0A29  B0 02		      C             mov   al, 2
 0A2B  E8 F5F3		      C             call  WriteCountByte
 0A2E  E8 F5DE		      C             call  SetClkLow
			      C             AssertOutHi
 0A31  E4 00		     1C            in    al, 0
 0A33  0A C0		     1C            or    al, al
 0A35  75 03		     1C            jnz   ??00C9
 0A37  33 C0		     1C            xor   ax, ax
 0A39  C3		     1C            ret
 0A3A			     1C ??00C9:
 0A3A  E8 F5CD		      C             call  SetClkHi
			      C             AssertOutHi
 0A3D  E4 00		     1C            in    al, 0
 0A3F  0A C0		     1C            or    al, al
 0A41  75 03		     1C            jnz   ??00CA
 0A43  33 C0		     1C            xor   ax, ax
 0A45  C3		     1C            ret
 0A46			     1C ??00CA:
 0A46  E8 F5B7		      C             call  SetGateHi
 0A49  E8 F5C3		      C             call  SetClkLow
			      C             AssertOutHi
 0A4C  E4 00		     1C            in    al, 0
 0A4E  0A C0		     1C            or    al, al
 0A50  75 03		     1C            jnz   ??00CB
 0A52  33 C0		     1C            xor   ax, ax
 0A54  C3		     1C            ret
 0A55			     1C ??00CB:
 0A55  E8 F5AD		      C             call  SetGateLow
 0A58  E8 F5AF		      C             call  SetClkHi
			      C             AssertOutHi
 0A5B  E4 00		     1C            in    al, 0
 0A5D  0A C0		     1C            or    al, al
 0A5F  75 03		     1C            jnz   ??00CC
 0A61  33 C0		     1C            xor   ax, ax
 0A63  C3		     1C            ret
 0A64			     1C ??00CC:
 0A64  E8 F5A8		      C             call  SetClkLow ; ce = cr = 2
			      C             AssertByteCeEq 2
 0A67  E4 40		     1C            in    al, 40h
 0A69  3C 02		     1C            cmp   al, 2
 0A6B  74 03		     1C            jz    ??00CD
 0A6D  33 C0		     1C            xor   ax, ax
 0A6F  C3		     1C            ret
 0A70			     1C ??00CD:
			      C             AssertOutLow
 0A70  E4 00		     1C            in    al, 0
 0A72  0A C0		     1C            or    al, al
 0A74  74 03		     1C            jz    ??00CE
 0A76  33 C0		     1C            xor   ax, ax
 0A78  C3		     1C            ret
 0A79			     1C ??00CE:           
 0A79  E8 F58E		      C             call  SetClkHi
 0A7C  B0 04		      C             mov   al, 4
 0A7E  E8 F5A0		      C             call  WriteCountByte
 0A81  E8 F58B		      C             call  SetClkLow ; ce = 1
			      C             AssertByteCeEq 1
 0A84  E4 40		     1C            in    al, 40h
 0A86  3C 01		     1C            cmp   al, 1
 0A88  74 03		     1C            jz    ??00CF
 0A8A  33 C0		     1C            xor   ax, ax
 0A8C  C3		     1C            ret
 0A8D			     1C ??00CF:
			      C             AssertOutLow
 0A8D  E4 00		     1C            in    al, 0
 0A8F  0A C0		     1C            or    al, al
 0A91  74 03		     1C            jz    ??00D0
 0A93  33 C0		     1C            xor   ax, ax
 0A95  C3		     1C            ret
 0A96			     1C ??00D0:           
 0A96  E8 F571		      C             call  SetClkHi
			      C             AssertOutLow
 0A99  E4 00		     1C            in    al, 0
 0A9B  0A C0		     1C            or    al, al
 0A9D  74 03		     1C            jz    ??00D1
 0A9F  33 C0		     1C            xor   ax, ax
 0AA1  C3		     1C            ret
 0AA2			     1C ??00D1:           
 0AA2  E8 F56A		      C             call  SetClkLow ; ce = 0
			      C             AssertByteCeEq 0
 0AA5  E4 40		     1C            in    al, 40h
 0AA7  3C 00		     1C            cmp   al, 0
 0AA9  74 03		     1C            jz    ??00D2
 0AAB  33 C0		     1C            xor   ax, ax
 0AAD  C3		     1C            ret
 0AAE			     1C ??00D2:
			      C             AssertOutHi
 0AAE  E4 00		     1C            in    al, 0
 0AB0  0A C0		     1C            or    al, al
 0AB2  75 03		     1C            jnz   ??00D3
 0AB4  33 C0		     1C            xor   ax, ax
 0AB6  C3		     1C            ret
 0AB7			     1C ??00D3:
 0AB7  E8 F550		      C             call  SetClkHi
			      C             AssertOutHi
 0ABA  E4 00		     1C            in    al, 0
 0ABC  0A C0		     1C            or    al, al
 0ABE  75 03		     1C            jnz   ??00D4
 0AC0  33 C0		     1C            xor   ax, ax
 0AC2  C3		     1C            ret
 0AC3			     1C ??00D4:
 0AC3  E8 F549		      C             call  SetClkLow ; ce = 0ffffh
			      C             AssertByteCeEq 0ffh
 0AC6  E4 40		     1C            in    al, 40h
 0AC8  3C FF		     1C            cmp   al, 0ffh
 0ACA  74 03		     1C            jz    ??00D5
 0ACC  33 C0		     1C            xor   ax, ax
 0ACE  C3		     1C            ret
 0ACF			     1C ??00D5:
			      C             AssertOutHi
 0ACF  E4 00		     1C            in    al, 0
 0AD1  0A C0		     1C            or    al, al
 0AD3  75 03		     1C            jnz   ??00D6
 0AD5  33 C0		     1C            xor   ax, ax
 0AD7  C3		     1C            ret
 0AD8			     1C ??00D6:
 0AD8  E8 F52F		      C             call  SetClkHi
			      C             AssertOutHi
 0ADB  E4 00		     1C            in    al, 0
 0ADD  0A C0		     1C            or    al, al
 0ADF  75 03		     1C            jnz   ??00D7
 0AE1  33 C0		     1C            xor   ax, ax
 0AE3  C3		     1C            ret
 0AE4			     1C ??00D7:
 0AE4  E8 F528		      C             call  SetClkLow ; ce = 0fffeh
			      C             AssertOutHi
 0AE7  E4 00		     1C            in    al, 0
 0AE9  0A C0		     1C            or    al, al
 0AEB  75 03		     1C            jnz   ??00D8
 0AED  33 C0		     1C            xor   ax, ax
 0AEF  C3		     1C            ret
 0AF0			     1C ??00D8:
 0AF0  E8 F50D		      C             call  SetGateHi
			      C             AssertByteCeEq 0feh
 0AF3  E4 40		     1C            in    al, 40h
 0AF5  3C FE		     1C            cmp   al, 0feh
 0AF7  74 03		     1C            jz    ??00D9
 0AF9  33 C0		     1C            xor   ax, ax
 0AFB  C3		     1C            ret
 0AFC			     1C ??00D9:
			      C             AssertOutHi
 0AFC  E4 00		     1C            in    al, 0
 0AFE  0A C0		     1C            or    al, al
 0B00  75 03		     1C            jnz   ??00DA
 0B02  33 C0		     1C            xor   ax, ax
 0B04  C3		     1C            ret
 0B05			     1C ??00DA:
 0B05  E8 F502		      C             call  SetClkHi
			      C             AssertOutHi
 0B08  E4 00		     1C            in    al, 0
 0B0A  0A C0		     1C            or    al, al
 0B0C  75 03		     1C            jnz   ??00DB
 0B0E  33 C0		     1C            xor   ax, ax
 0B10  C3		     1C            ret
 0B11			     1C ??00DB:
 0B11  E8 F4F1		      C             call  SetGateLow
			      C             AssertOutHi
 0B14  E4 00		     1C            in    al, 0
 0B16  0A C0		     1C            or    al, al
 0B18  75 03		     1C            jnz   ??00DC
 0B1A  33 C0		     1C            xor   ax, ax
 0B1C  C3		     1C            ret
 0B1D			     1C ??00DC:
 0B1D  E8 F4EF		      C             call  SetClkLow ; ce = cr = 4
			      C             AssertOutLow
 0B20  E4 00		     1C            in    al, 0
 0B22  0A C0		     1C            or    al, al
 0B24  74 03		     1C            jz    ??00DD
 0B26  33 C0		     1C            xor   ax, ax
 0B28  C3		     1C            ret
 0B29			     1C ??00DD:           
			      C             AssertByteCeEq 4
 0B29  E4 40		     1C            in    al, 40h
 0B2B  3C 04		     1C            cmp   al, 4
 0B2D  74 03		     1C            jz    ??00DE
 0B2F  33 C0		     1C            xor   ax, ax
 0B31  C3		     1C            ret
 0B32			     1C ??00DE:
 0B32  E8 F4D5		      C             call  SetClkHi
			      C             AssertOutLow
 0B35  E4 00		     1C            in    al, 0
 0B37  0A C0		     1C            or    al, al
 0B39  74 03		     1C            jz    ??00DF
 0B3B  33 C0		     1C            xor   ax, ax
 0B3D  C3		     1C            ret
 0B3E			     1C ??00DF:           
 0B3E  E8 F4CE		      C             call  SetClkLow ; ce = 3
			      C             AssertOutLow
 0B41  E4 00		     1C            in    al, 0
 0B43  0A C0		     1C            or    al, al
 0B45  74 03		     1C            jz    ??00E0
 0B47  33 C0		     1C            xor   ax, ax
 0B49  C3		     1C            ret
 0B4A			     1C ??00E0:           
			      C             AssertByteCeEq 3
 0B4A  E4 40		     1C            in    al, 40h
 0B4C  3C 03		     1C            cmp   al, 3
 0B4E  74 03		     1C            jz    ??00E1
 0B50  33 C0		     1C            xor   ax, ax
 0B52  C3		     1C            ret
 0B53			     1C ??00E1:
			      C 
 0B53  B8 0001		      C             mov   ax, 1
 0B56  C3		      C             ret
 0B57			      C Mode1_Datasheet3GateLow ENDP
			      C 
 0B57			      C Mode1_Datasheet3GateHi PROC NEAR
 0B57  E8 F4A6		      C             call  SetGateHi
			      C 
 0B5A  E8 F4AD		      C             call  SetClkHi
 0B5D  B0 12		      C             mov   al, 12h
 0B5F  E8 F4BC		      C             call  WriteCw
			      C             AssertOutHi
 0B62  E4 00		     1C            in    al, 0
 0B64  0A C0		     1C            or    al, al
 0B66  75 03		     1C            jnz   ??00E2
 0B68  33 C0		     1C            xor   ax, ax
 0B6A  C3		     1C            ret
 0B6B			     1C ??00E2:
 0B6B  E8 F4A1		      C             call  SetClkLow
			      C             AssertOutHi
 0B6E  E4 00		     1C            in    al, 0
 0B70  0A C0		     1C            or    al, al
 0B72  75 03		     1C            jnz   ??00E3
 0B74  33 C0		     1C            xor   ax, ax
 0B76  C3		     1C            ret
 0B77			     1C ??00E3:
 0B77  E8 F490		      C             call  SetClkHi
			      C             AssertOutHi
 0B7A  E4 00		     1C            in    al, 0
 0B7C  0A C0		     1C            or    al, al
 0B7E  75 03		     1C            jnz   ??00E4
 0B80  33 C0		     1C            xor   ax, ax
 0B82  C3		     1C            ret
 0B83			     1C ??00E4:
 0B83  B0 02		      C             mov   al, 2
 0B85  E8 F499		      C             call  WriteCountByte
 0B88  E8 F484		      C             call  SetClkLow
			      C             AssertOutHi
 0B8B  E4 00		     1C            in    al, 0
 0B8D  0A C0		     1C            or    al, al
 0B8F  75 03		     1C            jnz   ??00E5
 0B91  33 C0		     1C            xor   ax, ax
 0B93  C3		     1C            ret
 0B94			     1C ??00E5:
 0B94  E8 F46E		      C             call  SetGateLow
 0B97  E8 F470		      C             call  SetClkHi
			      C             AssertOutHi
 0B9A  E4 00		     1C            in    al, 0
 0B9C  0A C0		     1C            or    al, al
 0B9E  75 03		     1C            jnz   ??00E6
 0BA0  33 C0		     1C            xor   ax, ax
 0BA2  C3		     1C            ret
 0BA3			     1C ??00E6:
 0BA3  E8 F45A		      C             call  SetGateHi
 0BA6  E8 F466		      C             call  SetClkLow
			      C             AssertOutHi
 0BA9  E4 00		     1C            in    al, 0
 0BAB  0A C0		     1C            or    al, al
 0BAD  75 03		     1C            jnz   ??00E7
 0BAF  33 C0		     1C            xor   ax, ax
 0BB1  C3		     1C            ret
 0BB2			     1C ??00E7:
 0BB2  E8 F455		      C             call  SetClkHi
			      C             AssertOutHi
 0BB5  E4 00		     1C            in    al, 0
 0BB7  0A C0		     1C            or    al, al
 0BB9  75 03		     1C            jnz   ??00E8
 0BBB  33 C0		     1C            xor   ax, ax
 0BBD  C3		     1C            ret
 0BBE			     1C ??00E8:
 0BBE  E8 F44E		      C             call  SetClkLow ; ce = cr = 2
			      C             AssertByteCeEq 2
 0BC1  E4 40		     1C            in    al, 40h
 0BC3  3C 02		     1C            cmp   al, 2
 0BC5  74 03		     1C            jz    ??00E9
 0BC7  33 C0		     1C            xor   ax, ax
 0BC9  C3		     1C            ret
 0BCA			     1C ??00E9:
			      C             AssertOutLow
 0BCA  E4 00		     1C            in    al, 0
 0BCC  0A C0		     1C            or    al, al
 0BCE  74 03		     1C            jz    ??00EA
 0BD0  33 C0		     1C            xor   ax, ax
 0BD2  C3		     1C            ret
 0BD3			     1C ??00EA:           
 0BD3  E8 F434		      C             call  SetClkHi
 0BD6  B0 04		      C             mov   al, 4
 0BD8  E8 F446		      C             call  WriteCountByte
 0BDB  E8 F431		      C             call  SetClkLow ; ce = 1
			      C             AssertByteCeEq 1
 0BDE  E4 40		     1C            in    al, 40h
 0BE0  3C 01		     1C            cmp   al, 1
 0BE2  74 03		     1C            jz    ??00EB
 0BE4  33 C0		     1C            xor   ax, ax
 0BE6  C3		     1C            ret
 0BE7			     1C ??00EB:
			      C             AssertOutLow
 0BE7  E4 00		     1C            in    al, 0
 0BE9  0A C0		     1C            or    al, al
 0BEB  74 03		     1C            jz    ??00EC
 0BED  33 C0		     1C            xor   ax, ax
 0BEF  C3		     1C            ret
 0BF0			     1C ??00EC:           
 0BF0  E8 F417		      C             call  SetClkHi
			      C             AssertOutLow
 0BF3  E4 00		     1C            in    al, 0
 0BF5  0A C0		     1C            or    al, al
 0BF7  74 03		     1C            jz    ??00ED
 0BF9  33 C0		     1C            xor   ax, ax
 0BFB  C3		     1C            ret
 0BFC			     1C ??00ED:           
 0BFC  E8 F410		      C             call  SetClkLow ; ce = 0
			      C             AssertByteCeEq 0
 0BFF  E4 40		     1C            in    al, 40h
 0C01  3C 00		     1C            cmp   al, 0
 0C03  74 03		     1C            jz    ??00EE
 0C05  33 C0		     1C            xor   ax, ax
 0C07  C3		     1C            ret
 0C08			     1C ??00EE:
			      C             AssertOutHi
 0C08  E4 00		     1C            in    al, 0
 0C0A  0A C0		     1C            or    al, al
 0C0C  75 03		     1C            jnz   ??00EF
 0C0E  33 C0		     1C            xor   ax, ax
 0C10  C3		     1C            ret
 0C11			     1C ??00EF:
 0C11  E8 F3F6		      C             call  SetClkHi
			      C             AssertOutHi
 0C14  E4 00		     1C            in    al, 0
 0C16  0A C0		     1C            or    al, al
 0C18  75 03		     1C            jnz   ??00F0
 0C1A  33 C0		     1C            xor   ax, ax
 0C1C  C3		     1C            ret
 0C1D			     1C ??00F0:
 0C1D  E8 F3EF		      C             call  SetClkLow ; ce = 0ffffh
			      C             AssertByteCeEq 0ffh
 0C20  E4 40		     1C            in    al, 40h
 0C22  3C FF		     1C            cmp   al, 0ffh
 0C24  74 03		     1C            jz    ??00F1
 0C26  33 C0		     1C            xor   ax, ax
 0C28  C3		     1C            ret
 0C29			     1C ??00F1:
			      C             AssertOutHi
 0C29  E4 00		     1C            in    al, 0
 0C2B  0A C0		     1C            or    al, al
 0C2D  75 03		     1C            jnz   ??00F2
 0C2F  33 C0		     1C            xor   ax, ax
 0C31  C3		     1C            ret
 0C32			     1C ??00F2:
 0C32  E8 F3D5		      C             call  SetClkHi
			      C             AssertOutHi
 0C35  E4 00		     1C            in    al, 0
 0C37  0A C0		     1C            or    al, al
 0C39  75 03		     1C            jnz   ??00F3
 0C3B  33 C0		     1C            xor   ax, ax
 0C3D  C3		     1C            ret
 0C3E			     1C ??00F3:
 0C3E  E8 F3CE		      C             call  SetClkLow ; ce = 0fffeh
 0C41  E8 F3C1		      C             call  SetGateLow
			      C             AssertOutHi
 0C44  E4 00		     1C            in    al, 0
 0C46  0A C0		     1C            or    al, al
 0C48  75 03		     1C            jnz   ??00F4
 0C4A  33 C0		     1C            xor   ax, ax
 0C4C  C3		     1C            ret
 0C4D			     1C ??00F4:
 0C4D  E8 F3B0		      C             call  SetGateHi
			      C             AssertByteCeEq 0feh
 0C50  E4 40		     1C            in    al, 40h
 0C52  3C FE		     1C            cmp   al, 0feh
 0C54  74 03		     1C            jz    ??00F5
 0C56  33 C0		     1C            xor   ax, ax
 0C58  C3		     1C            ret
 0C59			     1C ??00F5:
			      C             AssertOutHi
 0C59  E4 00		     1C            in    al, 0
 0C5B  0A C0		     1C            or    al, al
 0C5D  75 03		     1C            jnz   ??00F6
 0C5F  33 C0		     1C            xor   ax, ax
 0C61  C3		     1C            ret
 0C62			     1C ??00F6:
 0C62  E8 F3A5		      C             call  SetClkHi
			      C             AssertOutHi
 0C65  E4 00		     1C            in    al, 0
 0C67  0A C0		     1C            or    al, al
 0C69  75 03		     1C            jnz   ??00F7
 0C6B  33 C0		     1C            xor   ax, ax
 0C6D  C3		     1C            ret
 0C6E			     1C ??00F7:
 0C6E  E8 F39E		      C             call  SetClkLow ; ce = cr = 4
			      C             AssertOutLow
 0C71  E4 00		     1C            in    al, 0
 0C73  0A C0		     1C            or    al, al
 0C75  74 03		     1C            jz    ??00F8
 0C77  33 C0		     1C            xor   ax, ax
 0C79  C3		     1C            ret
 0C7A			     1C ??00F8:           
			      C             AssertByteCeEq 4
 0C7A  E4 40		     1C            in    al, 40h
 0C7C  3C 04		     1C            cmp   al, 4
 0C7E  74 03		     1C            jz    ??00F9
 0C80  33 C0		     1C            xor   ax, ax
 0C82  C3		     1C            ret
 0C83			     1C ??00F9:
 0C83  E8 F384		      C             call  SetClkHi
			      C             AssertOutLow
 0C86  E4 00		     1C            in    al, 0
 0C88  0A C0		     1C            or    al, al
 0C8A  74 03		     1C            jz    ??00FA
 0C8C  33 C0		     1C            xor   ax, ax
 0C8E  C3		     1C            ret
 0C8F			     1C ??00FA:           
 0C8F  E8 F37D		      C             call  SetClkLow ; ce = 3
			      C             AssertOutLow
 0C92  E4 00		     1C            in    al, 0
 0C94  0A C0		     1C            or    al, al
 0C96  74 03		     1C            jz    ??00FB
 0C98  33 C0		     1C            xor   ax, ax
 0C9A  C3		     1C            ret
 0C9B			     1C ??00FB:           
			      C             AssertByteCeEq 3
 0C9B  E4 40		     1C            in    al, 40h
 0C9D  3C 03		     1C            cmp   al, 3
 0C9F  74 03		     1C            jz    ??00FC
 0CA1  33 C0		     1C            xor   ax, ax
 0CA3  C3		     1C            ret
 0CA4			     1C ??00FC:
			      C 
 0CA4  B8 0001		      C             mov   ax, 1
 0CA7  C3		      C             ret
 0CA8			      C Mode1_Datasheet3GateHi ENDP
			      C 
				include    mode2.asm
 0CA8			      C TestMode2  PROC NEAR
 0CA8  51		      C            push  cx
 0CA9  B9 0000		      C            mov   cx, 0
 0CAC  E8 0024		      C            call  Mode2_Datasheet1
 0CAF  C1 E0 00		      C            shl   ax, 0
 0CB2  0B C8		      C            or    cx, ax
 0CB4  8A C1		      C            mov   al, cl
 0CB6  E6 12		      C            out   12h, al
			      C 
 0CB8  E8 0149		      C            call  Mode2_Datasheet2
 0CBB  D1 E0		      C            shl   ax, 1
 0CBD  0B C8		      C            or    cx, ax
 0CBF  8A C1		      C            mov   al, cl
 0CC1  E6 12		      C            out   12h, al
			      C 
 0CC3  E8 0293		      C            call  Mode2_Datasheet3
 0CC6  C1 E0 02		      C            shl   ax, 2
 0CC9  0B C8		      C            or    cx, ax
 0CCB  8A C1		      C            mov   al, cl
 0CCD  E6 12		      C            out   12h, al
			      C 
 0CCF  8B C1		      C            mov   ax, cx
 0CD1  59		      C            pop   cx
 0CD2  C3		      C            ret
 0CD3			      C TestMode2  ENDP
			      C 
 0CD3			      C Mode2_Datasheet1 PROC NEAR
 0CD3  E8 F32A		      C             call  SetGateHi
			      C 
 0CD6  E8 F331		      C             call  SetClkHi
 0CD9  B0 14		      C             mov   al, 14h
 0CDB  E8 F340		      C             call  WriteCw
			      C             AssertOutHi
 0CDE  E4 00		     1C            in    al, 0
 0CE0  0A C0		     1C            or    al, al
 0CE2  75 03		     1C            jnz   ??00FD
 0CE4  33 C0		     1C            xor   ax, ax
 0CE6  C3		     1C            ret
 0CE7			     1C ??00FD:
 0CE7  E8 F325		      C             call  SetClkLow
			      C             AssertOutHi
 0CEA  E4 00		     1C            in    al, 0
 0CEC  0A C0		     1C            or    al, al
 0CEE  75 03		     1C            jnz   ??00FE
 0CF0  33 C0		     1C            xor   ax, ax
 0CF2  C3		     1C            ret
 0CF3			     1C ??00FE:
 0CF3  E8 F314		      C             call  SetClkHi
			      C             AssertOutHi
 0CF6  E4 00		     1C            in    al, 0
 0CF8  0A C0		     1C            or    al, al
 0CFA  75 03		     1C            jnz   ??00FF
 0CFC  33 C0		     1C            xor   ax, ax
 0CFE  C3		     1C            ret
 0CFF			     1C ??00FF:
 0CFF  E8 F30D		      C             call  SetClkLow
			      C             AssertOutHi
 0D02  E4 00		     1C            in    al, 0
 0D04  0A C0		     1C            or    al, al
 0D06  75 03		     1C            jnz   ??0100
 0D08  33 C0		     1C            xor   ax, ax
 0D0A  C3		     1C            ret
 0D0B			     1C ??0100:
 0D0B  B0 03		      C             mov   al, 3
 0D0D  E8 F311		      C             call WriteCountByte
			      C             AssertOutHi
 0D10  E4 00		     1C            in    al, 0
 0D12  0A C0		     1C            or    al, al
 0D14  75 03		     1C            jnz   ??0101
 0D16  33 C0		     1C            xor   ax, ax
 0D18  C3		     1C            ret
 0D19			     1C ??0101:
 0D19  E8 F2EE		      C             call  SetClkHi
			      C             AssertOutHi
 0D1C  E4 00		     1C            in    al, 0
 0D1E  0A C0		     1C            or    al, al
 0D20  75 03		     1C            jnz   ??0102
 0D22  33 C0		     1C            xor   ax, ax
 0D24  C3		     1C            ret
 0D25			     1C ??0102:
 0D25  E8 F2E7		      C             call  SetClkLow ; ce = cr = 3
			      C             AssertOutHi
 0D28  E4 00		     1C            in    al, 0
 0D2A  0A C0		     1C            or    al, al
 0D2C  75 03		     1C            jnz   ??0103
 0D2E  33 C0		     1C            xor   ax, ax
 0D30  C3		     1C            ret
 0D31			     1C ??0103:
			      C             AssertByteCeEq 3
 0D31  E4 40		     1C            in    al, 40h
 0D33  3C 03		     1C            cmp   al, 3
 0D35  74 03		     1C            jz    ??0104
 0D37  33 C0		     1C            xor   ax, ax
 0D39  C3		     1C            ret
 0D3A			     1C ??0104:
 0D3A  E8 F2CD		      C             call  SetClkHi
			      C             AssertOutHi
 0D3D  E4 00		     1C            in    al, 0
 0D3F  0A C0		     1C            or    al, al
 0D41  75 03		     1C            jnz   ??0105
 0D43  33 C0		     1C            xor   ax, ax
 0D45  C3		     1C            ret
 0D46			     1C ??0105:
 0D46  E8 F2C6		      C             call  SetClkLow ; ce = 2
			      C             AssertOutHi
 0D49  E4 00		     1C            in    al, 0
 0D4B  0A C0		     1C            or    al, al
 0D4D  75 03		     1C            jnz   ??0106
 0D4F  33 C0		     1C            xor   ax, ax
 0D51  C3		     1C            ret
 0D52			     1C ??0106:
			      C             AssertByteCeEq 2
 0D52  E4 40		     1C            in    al, 40h
 0D54  3C 02		     1C            cmp   al, 2
 0D56  74 03		     1C            jz    ??0107
 0D58  33 C0		     1C            xor   ax, ax
 0D5A  C3		     1C            ret
 0D5B			     1C ??0107:
 0D5B  E8 F2AC		      C             call  SetClkHi
			      C             AssertOutHi
 0D5E  E4 00		     1C            in    al, 0
 0D60  0A C0		     1C            or    al, al
 0D62  75 03		     1C            jnz   ??0108
 0D64  33 C0		     1C            xor   ax, ax
 0D66  C3		     1C            ret
 0D67			     1C ??0108:
 0D67  E8 F2A5		      C             call  SetClkLow ; ce = 1
			      C             AssertByteCeEq 1
 0D6A  E4 40		     1C            in    al, 40h
 0D6C  3C 01		     1C            cmp   al, 1
 0D6E  74 03		     1C            jz    ??0109
 0D70  33 C0		     1C            xor   ax, ax
 0D72  C3		     1C            ret
 0D73			     1C ??0109:
			      C             AssertOutLow
 0D73  E4 00		     1C            in    al, 0
 0D75  0A C0		     1C            or    al, al
 0D77  74 03		     1C            jz    ??010A
 0D79  33 C0		     1C            xor   ax, ax
 0D7B  C3		     1C            ret
 0D7C			     1C ??010A:           
 0D7C  E8 F28B		      C             call  SetClkHi
			      C             AssertOutLow
 0D7F  E4 00		     1C            in    al, 0
 0D81  0A C0		     1C            or    al, al
 0D83  74 03		     1C            jz    ??010B
 0D85  33 C0		     1C            xor   ax, ax
 0D87  C3		     1C            ret
 0D88			     1C ??010B:           
 0D88  E8 F284		      C             call  SetClkLow ; ce = cr = 3
			      C             AssertOutHi
 0D8B  E4 00		     1C            in    al, 0
 0D8D  0A C0		     1C            or    al, al
 0D8F  75 03		     1C            jnz   ??010C
 0D91  33 C0		     1C            xor   ax, ax
 0D93  C3		     1C            ret
 0D94			     1C ??010C:
			      C             AssertByteCeEq 3
 0D94  E4 40		     1C            in    al, 40h
 0D96  3C 03		     1C            cmp   al, 3
 0D98  74 03		     1C            jz    ??010D
 0D9A  33 C0		     1C            xor   ax, ax
 0D9C  C3		     1C            ret
 0D9D			     1C ??010D:
 0D9D  E8 F26A		      C             call  SetClkHi
			      C             AssertOutHi
 0DA0  E4 00		     1C            in    al, 0
 0DA2  0A C0		     1C            or    al, al
 0DA4  75 03		     1C            jnz   ??010E
 0DA6  33 C0		     1C            xor   ax, ax
 0DA8  C3		     1C            ret
 0DA9			     1C ??010E:
 0DA9  E8 F263		      C             call  SetClkLow ; ce = 2
			      C             AssertOutHi
 0DAC  E4 00		     1C            in    al, 0
 0DAE  0A C0		     1C            or    al, al
 0DB0  75 03		     1C            jnz   ??010F
 0DB2  33 C0		     1C            xor   ax, ax
 0DB4  C3		     1C            ret
 0DB5			     1C ??010F:
			      C             AssertByteCeEq 2
 0DB5  E4 40		     1C            in    al, 40h
 0DB7  3C 02		     1C            cmp   al, 2
 0DB9  74 03		     1C            jz    ??0110
 0DBB  33 C0		     1C            xor   ax, ax
 0DBD  C3		     1C            ret
 0DBE			     1C ??0110:
 0DBE  E8 F249		      C             call  SetClkHi
			      C             AssertOutHi
 0DC1  E4 00		     1C            in    al, 0
 0DC3  0A C0		     1C            or    al, al
 0DC5  75 03		     1C            jnz   ??0111
 0DC7  33 C0		     1C            xor   ax, ax
 0DC9  C3		     1C            ret
 0DCA			     1C ??0111:
 0DCA  E8 F242		      C             call  SetClkLow ; ce = 1
			      C             AssertByteCeEq 1
 0DCD  E4 40		     1C            in    al, 40h
 0DCF  3C 01		     1C            cmp   al, 1
 0DD1  74 03		     1C            jz    ??0112
 0DD3  33 C0		     1C            xor   ax, ax
 0DD5  C3		     1C            ret
 0DD6			     1C ??0112:
			      C             AssertOutLow
 0DD6  E4 00		     1C            in    al, 0
 0DD8  0A C0		     1C            or    al, al
 0DDA  74 03		     1C            jz    ??0113
 0DDC  33 C0		     1C            xor   ax, ax
 0DDE  C3		     1C            ret
 0DDF			     1C ??0113:           
 0DDF  E8 F228		      C             call  SetClkHi
			      C             AssertOutLow
 0DE2  E4 00		     1C            in    al, 0
 0DE4  0A C0		     1C            or    al, al
 0DE6  74 03		     1C            jz    ??0114
 0DE8  33 C0		     1C            xor   ax, ax
 0DEA  C3		     1C            ret
 0DEB			     1C ??0114:           
 0DEB  E8 F221		      C             call  SetClkLow ; ce = cr = 3
			      C             AssertOutHi
 0DEE  E4 00		     1C            in    al, 0
 0DF0  0A C0		     1C            or    al, al
 0DF2  75 03		     1C            jnz   ??0115
 0DF4  33 C0		     1C            xor   ax, ax
 0DF6  C3		     1C            ret
 0DF7			     1C ??0115:
			      C             AssertByteCeEq 3
 0DF7  E4 40		     1C            in    al, 40h
 0DF9  3C 03		     1C            cmp   al, 3
 0DFB  74 03		     1C            jz    ??0116
 0DFD  33 C0		     1C            xor   ax, ax
 0DFF  C3		     1C            ret
 0E00			     1C ??0116:
			      C 
 0E00  B8 0001		      C             mov   ax, 1
 0E03  C3		      C             ret
 0E04			      C Mode2_Datasheet1 ENDP
			      C 
 0E04			      C Mode2_Datasheet2 PROC NEAR
 0E04  E8 F1F9		      C             call  SetGateHi
			      C 
 0E07  E8 F200		      C             call  SetClkHi
 0E0A  B0 14		      C             mov   al, 14h
 0E0C  E8 F20F		      C             call  WriteCw
			      C             AssertOutHi
 0E0F  E4 00		     1C            in    al, 0
 0E11  0A C0		     1C            or    al, al
 0E13  75 03		     1C            jnz   ??0117
 0E15  33 C0		     1C            xor   ax, ax
 0E17  C3		     1C            ret
 0E18			     1C ??0117:
 0E18  E8 F1F4		      C             call  SetClkLow
			      C             AssertOutHi
 0E1B  E4 00		     1C            in    al, 0
 0E1D  0A C0		     1C            or    al, al
 0E1F  75 03		     1C            jnz   ??0118
 0E21  33 C0		     1C            xor   ax, ax
 0E23  C3		     1C            ret
 0E24			     1C ??0118:
 0E24  E8 F1E3		      C             call  SetClkHi
			      C             AssertOutHi
 0E27  E4 00		     1C            in    al, 0
 0E29  0A C0		     1C            or    al, al
 0E2B  75 03		     1C            jnz   ??0119
 0E2D  33 C0		     1C            xor   ax, ax
 0E2F  C3		     1C            ret
 0E30			     1C ??0119:
 0E30  E8 F1DC		      C             call  SetClkLow
			      C             AssertOutHi
 0E33  E4 00		     1C            in    al, 0
 0E35  0A C0		     1C            or    al, al
 0E37  75 03		     1C            jnz   ??011A
 0E39  33 C0		     1C            xor   ax, ax
 0E3B  C3		     1C            ret
 0E3C			     1C ??011A:
 0E3C  B0 03		      C             mov   al, 3
 0E3E  E8 F1E0		      C             call  WriteCountByte
			      C             AssertOutHi
 0E41  E4 00		     1C            in    al, 0
 0E43  0A C0		     1C            or    al, al
 0E45  75 03		     1C            jnz   ??011B
 0E47  33 C0		     1C            xor   ax, ax
 0E49  C3		     1C            ret
 0E4A			     1C ??011B:
 0E4A  E8 F1BD		      C             call  SetClkHi
			      C             AssertOutHi
 0E4D  E4 00		     1C            in    al, 0
 0E4F  0A C0		     1C            or    al, al
 0E51  75 03		     1C            jnz   ??011C
 0E53  33 C0		     1C            xor   ax, ax
 0E55  C3		     1C            ret
 0E56			     1C ??011C:
 0E56  E8 F1B6		      C             call  SetClkLow ; ce = cr = 3
			      C             AssertOutHi
 0E59  E4 00		     1C            in    al, 0
 0E5B  0A C0		     1C            or    al, al
 0E5D  75 03		     1C            jnz   ??011D
 0E5F  33 C0		     1C            xor   ax, ax
 0E61  C3		     1C            ret
 0E62			     1C ??011D:
			      C             AssertByteCeEq 3
 0E62  E4 40		     1C            in    al, 40h
 0E64  3C 03		     1C            cmp   al, 3
 0E66  74 03		     1C            jz    ??011E
 0E68  33 C0		     1C            xor   ax, ax
 0E6A  C3		     1C            ret
 0E6B			     1C ??011E:
 0E6B  E8 F19C		      C             call  SetClkHi
			      C             AssertOutHi
 0E6E  E4 00		     1C            in    al, 0
 0E70  0A C0		     1C            or    al, al
 0E72  75 03		     1C            jnz   ??011F
 0E74  33 C0		     1C            xor   ax, ax
 0E76  C3		     1C            ret
 0E77			     1C ??011F:
 0E77  E8 F18B		      C             call  SetGateLow
			      C             AssertOutHi
 0E7A  E4 00		     1C            in    al, 0
 0E7C  0A C0		     1C            or    al, al
 0E7E  75 03		     1C            jnz   ??0120
 0E80  33 C0		     1C            xor   ax, ax
 0E82  C3		     1C            ret
 0E83			     1C ??0120:
 0E83  E8 F189		      C             call  SetClkLow ; ce = 2
			      C             AssertOutHi
 0E86  E4 00		     1C            in    al, 0
 0E88  0A C0		     1C            or    al, al
 0E8A  75 03		     1C            jnz   ??0121
 0E8C  33 C0		     1C            xor   ax, ax
 0E8E  C3		     1C            ret
 0E8F			     1C ??0121:
			      C             AssertByteCeEq 2
 0E8F  E4 40		     1C            in    al, 40h
 0E91  3C 02		     1C            cmp   al, 2
 0E93  74 03		     1C            jz    ??0122
 0E95  33 C0		     1C            xor   ax, ax
 0E97  C3		     1C            ret
 0E98			     1C ??0122:
 0E98  E8 F16F		      C             call  SetClkHi
			      C             AssertOutHi
 0E9B  E4 00		     1C            in    al, 0
 0E9D  0A C0		     1C            or    al, al
 0E9F  75 03		     1C            jnz   ??0123
 0EA1  33 C0		     1C            xor   ax, ax
 0EA3  C3		     1C            ret
 0EA4			     1C ??0123:
 0EA4  E8 F168		      C             call  SetClkLow ; ce = 2
			      C             AssertOutHi
 0EA7  E4 00		     1C            in    al, 0
 0EA9  0A C0		     1C            or    al, al
 0EAB  75 03		     1C            jnz   ??0124
 0EAD  33 C0		     1C            xor   ax, ax
 0EAF  C3		     1C            ret
 0EB0			     1C ??0124:
			      C             AssertByteCeEq 2
 0EB0  E4 40		     1C            in    al, 40h
 0EB2  3C 02		     1C            cmp   al, 2
 0EB4  74 03		     1C            jz    ??0125
 0EB6  33 C0		     1C            xor   ax, ax
 0EB8  C3		     1C            ret
 0EB9			     1C ??0125:
 0EB9  E8 F144		      C             call  SetGateHi
			      C             AssertOutHi
 0EBC  E4 00		     1C            in    al, 0
 0EBE  0A C0		     1C            or    al, al
 0EC0  75 03		     1C            jnz   ??0126
 0EC2  33 C0		     1C            xor   ax, ax
 0EC4  C3		     1C            ret
 0EC5			     1C ??0126:
 0EC5  E8 F142		      C             call  SetClkHi
			      C             AssertOutHi
 0EC8  E4 00		     1C            in    al, 0
 0ECA  0A C0		     1C            or    al, al
 0ECC  75 03		     1C            jnz   ??0127
 0ECE  33 C0		     1C            xor   ax, ax
 0ED0  C3		     1C            ret
 0ED1			     1C ??0127:
 0ED1  E8 F13B		      C             call  SetClkLow ; ce = cr = 3
			      C             AssertOutHi
 0ED4  E4 00		     1C            in    al, 0
 0ED6  0A C0		     1C            or    al, al
 0ED8  75 03		     1C            jnz   ??0128
 0EDA  33 C0		     1C            xor   ax, ax
 0EDC  C3		     1C            ret
 0EDD			     1C ??0128:
			      C             AssertByteCeEq 3
 0EDD  E4 40		     1C            in    al, 40h
 0EDF  3C 03		     1C            cmp   al, 3
 0EE1  74 03		     1C            jz    ??0129
 0EE3  33 C0		     1C            xor   ax, ax
 0EE5  C3		     1C            ret
 0EE6			     1C ??0129:
 0EE6  E8 F121		      C             call  SetClkHi
			      C             AssertOutHi
 0EE9  E4 00		     1C            in    al, 0
 0EEB  0A C0		     1C            or    al, al
 0EED  75 03		     1C            jnz   ??012A
 0EEF  33 C0		     1C            xor   ax, ax
 0EF1  C3		     1C            ret
 0EF2			     1C ??012A:
 0EF2  E8 F11A		      C             call  SetClkLow ; ce = 2
			      C             AssertOutHi
 0EF5  E4 00		     1C            in    al, 0
 0EF7  0A C0		     1C            or    al, al
 0EF9  75 03		     1C            jnz   ??012B
 0EFB  33 C0		     1C            xor   ax, ax
 0EFD  C3		     1C            ret
 0EFE			     1C ??012B:
			      C             AssertByteCeEq 2
 0EFE  E4 40		     1C            in    al, 40h
 0F00  3C 02		     1C            cmp   al, 2
 0F02  74 03		     1C            jz    ??012C
 0F04  33 C0		     1C            xor   ax, ax
 0F06  C3		     1C            ret
 0F07			     1C ??012C:
 0F07  E8 F100		      C             call  SetClkHi
			      C             AssertOutHi
 0F0A  E4 00		     1C            in    al, 0
 0F0C  0A C0		     1C            or    al, al
 0F0E  75 03		     1C            jnz   ??012D
 0F10  33 C0		     1C            xor   ax, ax
 0F12  C3		     1C            ret
 0F13			     1C ??012D:
 0F13  E8 F0F9		      C             call  SetClkLow ; ce = 1
			      C             AssertOutLow
 0F16  E4 00		     1C            in    al, 0
 0F18  0A C0		     1C            or    al, al
 0F1A  74 03		     1C            jz    ??012E
 0F1C  33 C0		     1C            xor   ax, ax
 0F1E  C3		     1C            ret
 0F1F			     1C ??012E:           
			      C             AssertByteCeEq 1
 0F1F  E4 40		     1C            in    al, 40h
 0F21  3C 01		     1C            cmp   al, 1
 0F23  74 03		     1C            jz    ??012F
 0F25  33 C0		     1C            xor   ax, ax
 0F27  C3		     1C            ret
 0F28			     1C ??012F:
 0F28  E8 F0DF		      C             call  SetClkHi
			      C             AssertOutLow
 0F2B  E4 00		     1C            in    al, 0
 0F2D  0A C0		     1C            or    al, al
 0F2F  74 03		     1C            jz    ??0130
 0F31  33 C0		     1C            xor   ax, ax
 0F33  C3		     1C            ret
 0F34			     1C ??0130:           
 0F34  E8 F0D8		      C             call  SetClkLow ; ce = cr = 3
			      C             AssertOutHi
 0F37  E4 00		     1C            in    al, 0
 0F39  0A C0		     1C            or    al, al
 0F3B  75 03		     1C            jnz   ??0131
 0F3D  33 C0		     1C            xor   ax, ax
 0F3F  C3		     1C            ret
 0F40			     1C ??0131:
			      C             AssertByteCeEq 3
 0F40  E4 40		     1C            in    al, 40h
 0F42  3C 03		     1C            cmp   al, 3
 0F44  74 03		     1C            jz    ??0132
 0F46  33 C0		     1C            xor   ax, ax
 0F48  C3		     1C            ret
 0F49			     1C ??0132:
 0F49  E8 F0BE		      C             call  SetClkHi
			      C             AssertOutHi
 0F4C  E4 00		     1C            in    al, 0
 0F4E  0A C0		     1C            or    al, al
 0F50  75 03		     1C            jnz   ??0133
 0F52  33 C0		     1C            xor   ax, ax
 0F54  C3		     1C            ret
 0F55			     1C ??0133:
			      C 
 0F55  B8 0001		      C             mov   ax, 1
 0F58  C3		      C             ret
 0F59			      C Mode2_Datasheet2 ENDP
			      C 
 0F59			      C Mode2_Datasheet3 PROC NEAR
 0F59  E8 F0A4		      C             call  SetGateHi
			      C 
 0F5C  E8 F0AB		      C             call  SetClkHi
 0F5F  B0 14		      C             mov   al, 14h
 0F61  E8 F0BA		      C             call  WriteCw
			      C             AssertOutHi
 0F64  E4 00		     1C            in    al, 0
 0F66  0A C0		     1C            or    al, al
 0F68  75 03		     1C            jnz   ??0134
 0F6A  33 C0		     1C            xor   ax, ax
 0F6C  C3		     1C            ret
 0F6D			     1C ??0134:
 0F6D  E8 F09F		      C             call  SetClkLow
			      C             AssertOutHi
 0F70  E4 00		     1C            in    al, 0
 0F72  0A C0		     1C            or    al, al
 0F74  75 03		     1C            jnz   ??0135
 0F76  33 C0		     1C            xor   ax, ax
 0F78  C3		     1C            ret
 0F79			     1C ??0135:
 0F79  E8 F08E		      C             call  SetClkHi
			      C             AssertOutHi
 0F7C  E4 00		     1C            in    al, 0
 0F7E  0A C0		     1C            or    al, al
 0F80  75 03		     1C            jnz   ??0136
 0F82  33 C0		     1C            xor   ax, ax
 0F84  C3		     1C            ret
 0F85			     1C ??0136:
 0F85  E8 F087		      C             call  SetClkLow
			      C             AssertOutHi
 0F88  E4 00		     1C            in    al, 0
 0F8A  0A C0		     1C            or    al, al
 0F8C  75 03		     1C            jnz   ??0137
 0F8E  33 C0		     1C            xor   ax, ax
 0F90  C3		     1C            ret
 0F91			     1C ??0137:
 0F91  B0 04		      C             mov   al, 4
 0F93  E8 F08B		      C             call  WriteCountByte
			      C             AssertOutHi
 0F96  E4 00		     1C            in    al, 0
 0F98  0A C0		     1C            or    al, al
 0F9A  75 03		     1C            jnz   ??0138
 0F9C  33 C0		     1C            xor   ax, ax
 0F9E  C3		     1C            ret
 0F9F			     1C ??0138:
 0F9F  E8 F068		      C             call  SetClkHi
			      C             AssertOutHi
 0FA2  E4 00		     1C            in    al, 0
 0FA4  0A C0		     1C            or    al, al
 0FA6  75 03		     1C            jnz   ??0139
 0FA8  33 C0		     1C            xor   ax, ax
 0FAA  C3		     1C            ret
 0FAB			     1C ??0139:
 0FAB  E8 F061		      C             call  SetClkLow ; ce = cr = 4
			      C             AssertOutHi
 0FAE  E4 00		     1C            in    al, 0
 0FB0  0A C0		     1C            or    al, al
 0FB2  75 03		     1C            jnz   ??013A
 0FB4  33 C0		     1C            xor   ax, ax
 0FB6  C3		     1C            ret
 0FB7			     1C ??013A:
			      C             AssertByteCeEq 4
 0FB7  E4 40		     1C            in    al, 40h
 0FB9  3C 04		     1C            cmp   al, 4
 0FBB  74 03		     1C            jz    ??013B
 0FBD  33 C0		     1C            xor   ax, ax
 0FBF  C3		     1C            ret
 0FC0			     1C ??013B:
 0FC0  E8 F047		      C             call  SetClkHi
			      C             AssertOutHi
 0FC3  E4 00		     1C            in    al, 0
 0FC5  0A C0		     1C            or    al, al
 0FC7  75 03		     1C            jnz   ??013C
 0FC9  33 C0		     1C            xor   ax, ax
 0FCB  C3		     1C            ret
 0FCC			     1C ??013C:
 0FCC  E8 F040		      C             call  SetClkLow ; ce = 3
			      C             AssertOutHi
 0FCF  E4 00		     1C            in    al, 0
 0FD1  0A C0		     1C            or    al, al
 0FD3  75 03		     1C            jnz   ??013D
 0FD5  33 C0		     1C            xor   ax, ax
 0FD7  C3		     1C            ret
 0FD8			     1C ??013D:
			      C             AssertByteCeEq 3
 0FD8  E4 40		     1C            in    al, 40h
 0FDA  3C 03		     1C            cmp   al, 3
 0FDC  74 03		     1C            jz    ??013E
 0FDE  33 C0		     1C            xor   ax, ax
 0FE0  C3		     1C            ret
 0FE1			     1C ??013E:
 0FE1  B0 05		      C             mov   al, 5
 0FE3  E8 F03B		      C             call  WriteCountByte
			      C             AssertOutHi

 0FE6  E4 00		     1C            in    al, 0
 0FE8  0A C0		     1C            or    al, al
 0FEA  75 03		     1C            jnz   ??013F
 0FEC  33 C0		     1C            xor   ax, ax
 0FEE  C3		     1C            ret
 0FEF			     1C ??013F:
			      C             AssertByteCeEq 3
 0FEF  E4 40		     1C            in    al, 40h
 0FF1  3C 03		     1C            cmp   al, 3
 0FF3  74 03		     1C            jz    ??0140
 0FF5  33 C0		     1C            xor   ax, ax
 0FF7  C3		     1C            ret
 0FF8			     1C ??0140:
 0FF8  E8 F00F		      C             call  SetClkHi
			      C             AssertOutHi
 0FFB  E4 00		     1C            in    al, 0
 0FFD  0A C0		     1C            or    al, al
 0FFF  75 03		     1C            jnz   ??0141
 1001  33 C0		     1C            xor   ax, ax
 1003  C3		     1C            ret
 1004			     1C ??0141:
 1004  E8 F008		      C             call  SetClkLow ; ce = 2
			      C             AssertOutHi
 1007  E4 00		     1C            in    al, 0
 1009  0A C0		     1C            or    al, al
 100B  75 03		     1C            jnz   ??0142
 100D  33 C0		     1C            xor   ax, ax
 100F  C3		     1C            ret
 1010			     1C ??0142:
			      C             AssertByteCeEq 2
 1010  E4 40		     1C            in    al, 40h
 1012  3C 02		     1C            cmp   al, 2
 1014  74 03		     1C            jz    ??0143
 1016  33 C0		     1C            xor   ax, ax
 1018  C3		     1C            ret
 1019			     1C ??0143:
 1019  E8 EFEE		      C             call  SetClkHi
			      C             AssertOutHi
 101C  E4 00		     1C            in    al, 0
 101E  0A C0		     1C            or    al, al
 1020  75 03		     1C            jnz   ??0144
 1022  33 C0		     1C            xor   ax, ax
 1024  C3		     1C            ret
 1025			     1C ??0144:
 1025  E8 EFE7		      C             call  SetClkLow ; ce = 1
			      C             AssertOutLow
 1028  E4 00		     1C            in    al, 0
 102A  0A C0		     1C            or    al, al
 102C  74 03		     1C            jz    ??0145
 102E  33 C0		     1C            xor   ax, ax
 1030  C3		     1C            ret
 1031			     1C ??0145:           
			      C             AssertByteCeEq 1
 1031  E4 40		     1C            in    al, 40h
 1033  3C 01		     1C            cmp   al, 1
 1035  74 03		     1C            jz    ??0146
 1037  33 C0		     1C            xor   ax, ax
 1039  C3		     1C            ret
 103A			     1C ??0146:
 103A  E8 EFCD		      C             call  SetClkHi
			      C             AssertOutLow
 103D  E4 00		     1C            in    al, 0
 103F  0A C0		     1C            or    al, al
 1041  74 03		     1C            jz    ??0147
 1043  33 C0		     1C            xor   ax, ax
 1045  C3		     1C            ret
 1046			     1C ??0147:           
 1046  E8 EFC6		      C             call  SetClkLow ; ce = cr = 5
			      C             AssertOutHi
 1049  E4 00		     1C            in    al, 0
 104B  0A C0		     1C            or    al, al
 104D  75 03		     1C            jnz   ??0148
 104F  33 C0		     1C            xor   ax, ax
 1051  C3		     1C            ret
 1052			     1C ??0148:
			      C             AssertByteCeEq 5
 1052  E4 40		     1C            in    al, 40h
 1054  3C 05		     1C            cmp   al, 5
 1056  74 03		     1C            jz    ??0149
 1058  33 C0		     1C            xor   ax, ax
 105A  C3		     1C            ret
 105B			     1C ??0149:
 105B  E8 EFAC		      C             call  SetClkHi
			      C             AssertOutHi
 105E  E4 00		     1C            in    al, 0
 1060  0A C0		     1C            or    al, al
 1062  75 03		     1C            jnz   ??014A
 1064  33 C0		     1C            xor   ax, ax
 1066  C3		     1C            ret
 1067			     1C ??014A:
 1067  E8 EFA5		      C             call  SetClkLow ; ce = 4
			      C             AssertOutHi
 106A  E4 00		     1C            in    al, 0
 106C  0A C0		     1C            or    al, al
 106E  75 03		     1C            jnz   ??014B
 1070  33 C0		     1C            xor   ax, ax
 1072  C3		     1C            ret
 1073			     1C ??014B:
			      C             AssertByteCeEq 4
 1073  E4 40		     1C            in    al, 40h
 1075  3C 04		     1C            cmp   al, 4
 1077  74 03		     1C            jz    ??014C
 1079  33 C0		     1C            xor   ax, ax
 107B  C3		     1C            ret
 107C			     1C ??014C:
 107C  E8 EF8B		      C             call  SetClkHi
			      C             AssertOutHi
 107F  E4 00		     1C            in    al, 0
 1081  0A C0		     1C            or    al, al
 1083  75 03		     1C            jnz   ??014D
 1085  33 C0		     1C            xor   ax, ax
 1087  C3		     1C            ret
 1088			     1C ??014D:
 1088  E8 EF84		      C             call  SetClkLow ; ce = 3
			      C             AssertOutHi
 108B  E4 00		     1C            in    al, 0
 108D  0A C0		     1C            or    al, al
 108F  75 03		     1C            jnz   ??014E
 1091  33 C0		     1C            xor   ax, ax
 1093  C3		     1C            ret
 1094			     1C ??014E:
			      C             AssertByteCeEq 3
 1094  E4 40		     1C            in    al, 40h
 1096  3C 03		     1C            cmp   al, 3
 1098  74 03		     1C            jz    ??014F
 109A  33 C0		     1C            xor   ax, ax
 109C  C3		     1C            ret
 109D			     1C ??014F:
			      C 
 109D  B8 0001		      C             mov   ax, 1
 10A0  C3		      C             ret
 10A1			      C Mode2_Datasheet3 ENDP
			      C 
				include    mode3.asm
 10A1			      C TestMode3  PROC NEAR
 10A1  51		      C            push  cx
 10A2  B9 0000		      C            mov   cx, 0
 10A5  E8 0024		      C            call  Mode3_Datasheet1
 10A8  C1 E0 00		      C            shl   ax, 0
 10AB  0B C8		      C            or    cx, ax
 10AD  8A C1		      C            mov   al, cl
 10AF  E6 13		      C            out   13h, al
			      C 
 10B1  E8 0107		      C            call  Mode3_Datasheet2
 10B4  D1 E0		      C            shl   ax, 1
 10B6  0B C8		      C            or    cx, ax
 10B8  8A C1		      C            mov   al, cl
 10BA  E6 13		      C            out   13h, al
			      C 
 10BC  E8 026F		      C            call  Mode3_Datasheet3
 10BF  C1 E0 02		      C            shl   ax, 2
 10C2  0B C8		      C            or    cx, ax
 10C4  8A C1		      C            mov   al, cl
 10C6  E6 13		      C            out   13h, al
			      C 
 10C8  8B C1		      C            mov   ax, cx
 10CA  59		      C            pop   cx
 10CB  C3		      C            ret
 10CC			      C TestMode3  ENDP
			      C 
 10CC			      C Mode3_Datasheet1 PROC NEAR
 10CC  E8 EF31		      C             call  SetGateHi
			      C 
 10CF  E8 EF38		      C             call  SetClkHi
 10D2  B0 16		      C             mov   al, 16h
 10D4  E8 EF47		      C             call  WriteCw
			      C             AssertOutHi
 10D7  E4 00		     1C            in    al, 0
 10D9  0A C0		     1C            or    al, al
 10DB  75 03		     1C            jnz   ??0150
 10DD  33 C0		     1C            xor   ax, ax
 10DF  C3		     1C            ret
 10E0			     1C ??0150:
 10E0  E8 EF2C		      C             call  SetClkLow
			      C             AssertOutHi
 10E3  E4 00		     1C            in    al, 0
 10E5  0A C0		     1C            or    al, al
 10E7  75 03		     1C            jnz   ??0151
 10E9  33 C0		     1C            xor   ax, ax
 10EB  C3		     1C            ret
 10EC			     1C ??0151:
 10EC  E8 EF1B		      C             call  SetClkHi
			      C             AssertOutHi
 10EF  E4 00		     1C            in    al, 0
 10F1  0A C0		     1C            or    al, al
 10F3  75 03		     1C            jnz   ??0152
 10F5  33 C0		     1C            xor   ax, ax
 10F7  C3		     1C            ret
 10F8			     1C ??0152:
 10F8  E8 EF14		      C             call  SetClkLow
			      C             AssertOutHi
 10FB  E4 00		     1C            in    al, 0
 10FD  0A C0		     1C            or    al, al
 10FF  75 03		     1C            jnz   ??0153
 1101  33 C0		     1C            xor   ax, ax
 1103  C3		     1C            ret
 1104			     1C ??0153:
 1104  B0 04		      C             mov   al, 4
 1106  E8 EF18		      C             call  WriteCountByte
			      C             AssertOutHi
 1109  E4 00		     1C            in    al, 0
 110B  0A C0		     1C            or    al, al
 110D  75 03		     1C            jnz   ??0154
 110F  33 C0		     1C            xor   ax, ax
 1111  C3		     1C            ret
 1112			     1C ??0154:
 1112  E8 EEF5		      C             call  SetClkHi
			      C             AssertOutHi
 1115  E4 00		     1C            in    al, 0
 1117  0A C0		     1C            or    al, al
 1119  75 03		     1C            jnz   ??0155
 111B  33 C0		     1C            xor   ax, ax
 111D  C3		     1C            ret
 111E			     1C ??0155:
 111E  E8 EEEE		      C             call  SetClkLow ; ce = cr = 4
			      C             AssertOutHi
 1121  E4 00		     1C            in    al, 0
 1123  0A C0		     1C            or    al, al
 1125  75 03		     1C            jnz   ??0156
 1127  33 C0		     1C            xor   ax, ax
 1129  C3		     1C            ret
 112A			     1C ??0156:
			      C             AssertByteCeEq 4
 112A  E4 40		     1C            in    al, 40h
 112C  3C 04		     1C            cmp   al, 4
 112E  74 03		     1C            jz    ??0157
 1130  33 C0		     1C            xor   ax, ax
 1132  C3		     1C            ret
 1133			     1C ??0157:
 1133  E8 EED4		      C             call  SetClkHi
			      C             AssertOutHi
 1136  E4 00		     1C            in    al, 0
 1138  0A C0		     1C            or    al, al
 113A  75 03		     1C            jnz   ??0158
 113C  33 C0		     1C            xor   ax, ax
 113E  C3		     1C            ret
 113F			     1C ??0158:
 113F  E8 EECD		      C             call  SetClkLow ; ce = 2
			      C             AssertOutHi
 1142  E4 00		     1C            in    al, 0
 1144  0A C0		     1C            or    al, al
 1146  75 03		     1C            jnz   ??0159
 1148  33 C0		     1C            xor   ax, ax
 114A  C3		     1C            ret
 114B			     1C ??0159:
			      C             AssertByteCeEq 2
 114B  E4 40		     1C            in    al, 40h
 114D  3C 02		     1C            cmp   al, 2
 114F  74 03		     1C            jz    ??015A
 1151  33 C0		     1C            xor   ax, ax
 1153  C3		     1C            ret
 1154			     1C ??015A:
 1154  E8 EEB3		      C             call  SetClkHi
			      C             AssertOutHi
 1157  E4 00		     1C            in    al, 0
 1159  0A C0		     1C            or    al, al
 115B  75 03		     1C            jnz   ??015B
 115D  33 C0		     1C            xor   ax, ax
 115F  C3		     1C            ret
 1160			     1C ??015B:
 1160  E8 EEAC		      C             call  SetClkLow ; ce = cr = 4
			      C             AssertOutLow
 1163  E4 00		     1C            in    al, 0
 1165  0A C0		     1C            or    al, al
 1167  74 03		     1C            jz    ??015C
 1169  33 C0		     1C            xor   ax, ax
 116B  C3		     1C            ret
 116C			     1C ??015C:           
			      C             AssertByteCeEq 4
 116C  E4 40		     1C            in    al, 40h
 116E  3C 04		     1C            cmp   al, 4
 1170  74 03		     1C            jz    ??015D
 1172  33 C0		     1C            xor   ax, ax
 1174  C3		     1C            ret
 1175			     1C ??015D:
 1175  E8 EE92		      C             call  SetClkHi
			      C             AssertOutLow
 1178  E4 00		     1C            in    al, 0
 117A  0A C0		     1C            or    al, al
 117C  74 03		     1C            jz    ??015E
 117E  33 C0		     1C            xor   ax, ax
 1180  C3		     1C            ret
 1181			     1C ??015E:           
 1181  E8 EE8B		      C             call  SetClkLow ; ce = 2
			      C             AssertOutLow
 1184  E4 00		     1C            in    al, 0
 1186  0A C0		     1C            or    al, al
 1188  74 03		     1C            jz    ??015F
 118A  33 C0		     1C            xor   ax, ax
 118C  C3		     1C            ret
 118D			     1C ??015F:           
			      C             AssertByteCeEq 2
 118D  E4 40		     1C            in    al, 40h
 118F  3C 02		     1C            cmp   al, 2
 1191  74 03		     1C            jz    ??0160
 1193  33 C0		     1C            xor   ax, ax
 1195  C3		     1C            ret
 1196			     1C ??0160:
 1196  E8 EE71		      C             call  SetClkHi
			      C             AssertOutLow
 1199  E4 00		     1C            in    al, 0
 119B  0A C0		     1C            or    al, al
 119D  74 03		     1C            jz    ??0161
 119F  33 C0		     1C            xor   ax, ax
 11A1  C3		     1C            ret
 11A2			     1C ??0161:           
 11A2  E8 EE6A		      C             call  SetClkLow ; ce = cr = 4
			      C             AssertOutHi
 11A5  E4 00		     1C            in    al, 0
 11A7  0A C0		     1C            or    al, al
 11A9  75 03		     1C            jnz   ??0162
 11AB  33 C0		     1C            xor   ax, ax
 11AD  C3		     1C            ret
 11AE			     1C ??0162:
			      C             AssertByteCeEq 4
 11AE  E4 40		     1C            in    al, 40h
 11B0  3C 04		     1C            cmp   al, 4
 11B2  74 03		     1C            jz    ??0163
 11B4  33 C0		     1C            xor   ax, ax
 11B6  C3		     1C            ret
 11B7			     1C ??0163:
			      C             
 11B7  B8 0001		      C             mov  ax, 1
 11BA  C3		      C             ret
 11BB			      C Mode3_Datasheet1 ENDP
			      C 
 11BB			      C Mode3_Datasheet2 PROC NEAR
 11BB  E8 EE42		      C             call  SetGateHi
			      C 
 11BE  E8 EE49		      C             call  SetClkHi
 11C1  B0 16		      C             mov   al, 16h
 11C3  E8 EE58		      C             call  WriteCw
			      C             AssertOutHi
 11C6  E4 00		     1C            in    al, 0
 11C8  0A C0		     1C            or    al, al
 11CA  75 03		     1C            jnz   ??0164
 11CC  33 C0		     1C            xor   ax, ax
 11CE  C3		     1C            ret
 11CF			     1C ??0164:
 11CF  E8 EE3D		      C             call  SetClkLow
			      C             AssertOutHi
 11D2  E4 00		     1C            in    al, 0
 11D4  0A C0		     1C            or    al, al
 11D6  75 03		     1C            jnz   ??0165
 11D8  33 C0		     1C            xor   ax, ax
 11DA  C3		     1C            ret
 11DB			     1C ??0165:
 11DB  E8 EE2C		      C             call  SetClkHi
			      C             AssertOutHi
 11DE  E4 00		     1C            in    al, 0
 11E0  0A C0		     1C            or    al, al
 11E2  75 03		     1C            jnz   ??0166
 11E4  33 C0		     1C            xor   ax, ax
 11E6  C3		     1C            ret
 11E7			     1C ??0166:
 11E7  E8 EE25		      C             call  SetClkLow
			      C             AssertOutHi
 11EA  E4 00		     1C            in    al, 0
 11EC  0A C0		     1C            or    al, al
 11EE  75 03		     1C            jnz   ??0167
 11F0  33 C0		     1C            xor   ax, ax
 11F2  C3		     1C            ret
 11F3			     1C ??0167:
 11F3  B0 05		      C             mov   al, 5
 11F5  E8 EE29		      C             call WriteCountByte
			      C             AssertOutHi
 11F8  E4 00		     1C            in    al, 0
 11FA  0A C0		     1C            or    al, al
 11FC  75 03		     1C            jnz   ??0168
 11FE  33 C0		     1C            xor   ax, ax
 1200  C3		     1C            ret
 1201			     1C ??0168:
 1201  E8 EE06		      C             call  SetClkHi
			      C             AssertOutHi
 1204  E4 00		     1C            in    al, 0
 1206  0A C0		     1C            or    al, al
 1208  75 03		     1C            jnz   ??0169
 120A  33 C0		     1C            xor   ax, ax
 120C  C3		     1C            ret
 120D			     1C ??0169:
 120D  E8 EDFF		      C             call  SetClkLow ; ce = cr = 4
			      C             AssertOutHi
 1210  E4 00		     1C            in    al, 0
 1212  0A C0		     1C            or    al, al
 1214  75 03		     1C            jnz   ??016A
 1216  33 C0		     1C            xor   ax, ax
 1218  C3		     1C            ret
 1219			     1C ??016A:
			      C             AssertByteCeEq 4
 1219  E4 40		     1C            in    al, 40h
 121B  3C 04		     1C            cmp   al, 4
 121D  74 03		     1C            jz    ??016B
 121F  33 C0		     1C            xor   ax, ax
 1221  C3		     1C            ret
 1222			     1C ??016B:
 1222  E8 EDE5		      C             call  SetClkHi
			      C             AssertOutHi
 1225  E4 00		     1C            in    al, 0
 1227  0A C0		     1C            or    al, al
 1229  75 03		     1C            jnz   ??016C
 122B  33 C0		     1C            xor   ax, ax
 122D  C3		     1C            ret
 122E			     1C ??016C:
 122E  E8 EDDE		      C             call  SetClkLow ; ce = 2
			      C             AssertOutHi
 1231  E4 00		     1C            in    al, 0
 1233  0A C0		     1C            or    al, al
 1235  75 03		     1C            jnz   ??016D
 1237  33 C0		     1C            xor   ax, ax
 1239  C3		     1C            ret
 123A			     1C ??016D:
			      C             AssertByteCeEq 2
 123A  E4 40		     1C            in    al, 40h
 123C  3C 02		     1C            cmp   al, 2
 123E  74 03		     1C            jz    ??016E
 1240  33 C0		     1C            xor   ax, ax
 1242  C3		     1C            ret
 1243			     1C ??016E:
 1243  E8 EDC4		      C             call  SetClkHi
			      C             AssertOutHi
 1246  E4 00		     1C            in    al, 0
 1248  0A C0		     1C            or    al, al
 124A  75 03		     1C            jnz   ??016F
 124C  33 C0		     1C            xor   ax, ax
 124E  C3		     1C            ret
 124F			     1C ??016F:
 124F  E8 EDBD		      C             call  SetClkLow ; ce = 0
			      C             AssertOutHi
 1252  E4 00		     1C            in    al, 0
 1254  0A C0		     1C            or    al, al
 1256  75 03		     1C            jnz   ??0170
 1258  33 C0		     1C            xor   ax, ax
 125A  C3		     1C            ret
 125B			     1C ??0170:
			      C             AssertByteCeEq 0
 125B  E4 40		     1C            in    al, 40h
 125D  3C 00		     1C            cmp   al, 0
 125F  74 03		     1C            jz    ??0171
 1261  33 C0		     1C            xor   ax, ax
 1263  C3		     1C            ret
 1264			     1C ??0171:
 1264  E8 EDA3		      C             call  SetClkHi
			      C             AssertOutHi
 1267  E4 00		     1C            in    al, 0
 1269  0A C0		     1C            or    al, al
 126B  75 03		     1C            jnz   ??0172
 126D  33 C0		     1C            xor   ax, ax
 126F  C3		     1C            ret
 1270			     1C ??0172:
 1270  E8 ED9C		      C             call  SetClkLow ; ce = cr = 4
			      C             AssertOutLow
 1273  E4 00		     1C            in    al, 0
 1275  0A C0		     1C            or    al, al
 1277  74 03		     1C            jz    ??0173
 1279  33 C0		     1C            xor   ax, ax
 127B  C3		     1C            ret
 127C			     1C ??0173:           
			      C             AssertByteCeEq 4
 127C  E4 40		     1C            in    al, 40h
 127E  3C 04		     1C            cmp   al, 4
 1280  74 03		     1C            jz    ??0174
 1282  33 C0		     1C            xor   ax, ax
 1284  C3		     1C            ret
 1285			     1C ??0174:
 1285  E8 ED82		      C             call  SetClkHi
			      C             AssertOutLow
 1288  E4 00		     1C            in    al, 0
 128A  0A C0		     1C            or    al, al
 128C  74 03		     1C            jz    ??0175
 128E  33 C0		     1C            xor   ax, ax
 1290  C3		     1C            ret
 1291			     1C ??0175:           
 1291  E8 ED7B		      C             call  SetClkLow ; ce = 2
			      C             AssertOutLow
 1294  E4 00		     1C            in    al, 0
 1296  0A C0		     1C            or    al, al
 1298  74 03		     1C            jz    ??0176
 129A  33 C0		     1C            xor   ax, ax
 129C  C3		     1C            ret
 129D			     1C ??0176:           
			      C             AssertByteCeEq 2
 129D  E4 40		     1C            in    al, 40h
 129F  3C 02		     1C            cmp   al, 2
 12A1  74 03		     1C            jz    ??0177
 12A3  33 C0		     1C            xor   ax, ax
 12A5  C3		     1C            ret
 12A6			     1C ??0177:
 12A6  E8 ED61		      C             call  SetClkHi
			      C             AssertOutLow
 12A9  E4 00		     1C            in    al, 0
 12AB  0A C0		     1C            or    al, al
 12AD  74 03		     1C            jz    ??0178
 12AF  33 C0		     1C            xor   ax, ax
 12B1  C3		     1C            ret
 12B2			     1C ??0178:           
 12B2  E8 ED5A		      C             call  SetClkLow ; ce = cr = 4
			      C             AssertOutHi
 12B5  E4 00		     1C            in    al, 0
 12B7  0A C0		     1C            or    al, al
 12B9  75 03		     1C            jnz   ??0179
 12BB  33 C0		     1C            xor   ax, ax
 12BD  C3		     1C            ret
 12BE			     1C ??0179:
			      C             AssertByteCeEq 4
 12BE  E4 40		     1C            in    al, 40h
 12C0  3C 04		     1C            cmp   al, 4
 12C2  74 03		     1C            jz    ??017A
 12C4  33 C0		     1C            xor   ax, ax
 12C6  C3		     1C            ret
 12C7			     1C ??017A:
 12C7  E8 ED40		      C             call  SetClkHi
			      C             AssertOutHi
 12CA  E4 00		     1C            in    al, 0
 12CC  0A C0		     1C            or    al, al
 12CE  75 03		     1C            jnz   ??017B
 12D0  33 C0		     1C            xor   ax, ax
 12D2  C3		     1C            ret
 12D3			     1C ??017B:
 12D3  E8 ED39		      C             call  SetClkLow ; ce = 2
			      C             AssertOutHi
 12D6  E4 00		     1C            in    al, 0
 12D8  0A C0		     1C            or    al, al
 12DA  75 03		     1C            jnz   ??017C
 12DC  33 C0		     1C            xor   ax, ax
 12DE  C3		     1C            ret
 12DF			     1C ??017C:
			      C             AssertByteCeEq 2
 12DF  E4 40		     1C            in    al, 40h
 12E1  3C 02		     1C            cmp   al, 2
 12E3  74 03		     1C            jz    ??017D
 12E5  33 C0		     1C            xor   ax, ax
 12E7  C3		     1C            ret
 12E8			     1C ??017D:
 12E8  E8 ED1F		      C             call  SetClkHi
			      C             AssertOutHi
 12EB  E4 00		     1C            in    al, 0
 12ED  0A C0		     1C            or    al, al
 12EF  75 03		     1C            jnz   ??017E
 12F1  33 C0		     1C            xor   ax, ax
 12F3  C3		     1C            ret
 12F4			     1C ??017E:
 12F4  E8 ED18		      C             call  SetClkLow ; ce = 0
			      C             AssertOutHi
 12F7  E4 00		     1C            in    al, 0
 12F9  0A C0		     1C            or    al, al
 12FB  75 03		     1C            jnz   ??017F
 12FD  33 C0		     1C            xor   ax, ax
 12FF  C3		     1C            ret
 1300			     1C ??017F:
			      C             AssertByteCeEq 0
 1300  E4 40		     1C            in    al, 40h
 1302  3C 00		     1C            cmp   al, 0
 1304  74 03		     1C            jz    ??0180
 1306  33 C0		     1C            xor   ax, ax
 1308  C3		     1C            ret
 1309			     1C ??0180:
 1309  E8 ECFE		      C             call  SetClkHi
			      C             AssertOutHi
 130C  E4 00		     1C            in    al, 0
 130E  0A C0		     1C            or    al, al
 1310  75 03		     1C            jnz   ??0181
 1312  33 C0		     1C            xor   ax, ax
 1314  C3		     1C            ret
 1315			     1C ??0181:
 1315  E8 ECF7		      C             call  SetClkLow ; ce = cr = 4
			      C             AssertOutLow
 1318  E4 00		     1C            in    al, 0
 131A  0A C0		     1C            or    al, al
 131C  74 03		     1C            jz    ??0182
 131E  33 C0		     1C            xor   ax, ax
 1320  C3		     1C            ret
 1321			     1C ??0182:           
			      C             AssertByteCeEq 4
 1321  E4 40		     1C            in    al, 40h
 1323  3C 04		     1C            cmp   al, 4
 1325  74 03		     1C            jz    ??0183
 1327  33 C0		     1C            xor   ax, ax
 1329  C3		     1C            ret
 132A			     1C ??0183:
			      C             
 132A  B8 0001		      C             mov  ax, 1
 132D  C3		      C             ret
 132E			      C Mode3_Datasheet2 ENDP
			      C 
 132E			      C Mode3_Datasheet3 PROC NEAR
 132E  E8 ECCF		      C             call  SetGateHi
			      C 
 1331  E8 ECD6		      C             call  SetClkHi
 1334  B0 16		      C             mov   al, 16h
 1336  E8 ECE5		      C             call  WriteCw
			      C             AssertOutHi
 1339  E4 00		     1C            in    al, 0
 133B  0A C0		     1C            or    al, al
 133D  75 03		     1C            jnz   ??0184
 133F  33 C0		     1C            xor   ax, ax
 1341  C3		     1C            ret
 1342			     1C ??0184:
 1342  E8 ECCA		      C             call  SetClkLow
			      C             AssertOutHi
 1345  E4 00		     1C            in    al, 0
 1347  0A C0		     1C            or    al, al
 1349  75 03		     1C            jnz   ??0185
 134B  33 C0		     1C            xor   ax, ax
 134D  C3		     1C            ret
 134E			     1C ??0185:
 134E  E8 ECB9		      C             call  SetClkHi
			      C             AssertOutHi
 1351  E4 00		     1C            in    al, 0
 1353  0A C0		     1C            or    al, al
 1355  75 03		     1C            jnz   ??0186
 1357  33 C0		     1C            xor   ax, ax
 1359  C3		     1C            ret
 135A			     1C ??0186:
 135A  E8 ECB2		      C             call  SetClkLow
			      C             AssertOutHi
 135D  E4 00		     1C            in    al, 0
 135F  0A C0		     1C            or    al, al
 1361  75 03		     1C            jnz   ??0187
 1363  33 C0		     1C            xor   ax, ax
 1365  C3		     1C            ret
 1366			     1C ??0187:
 1366  B0 04		      C             mov   al, 4
 1368  E8 ECB6		      C             call  WriteCountByte
			      C             AssertOutHi
 136B  E4 00		     1C            in    al, 0
 136D  0A C0		     1C            or    al, al
 136F  75 03		     1C            jnz   ??0188
 1371  33 C0		     1C            xor   ax, ax
 1373  C3		     1C            ret
 1374			     1C ??0188:
 1374  E8 EC93		      C             call  SetClkHi
			      C             AssertOutHi
 1377  E4 00		     1C            in    al, 0
 1379  0A C0		     1C            or    al, al
 137B  75 03		     1C            jnz   ??0189
 137D  33 C0		     1C            xor   ax, ax
 137F  C3		     1C            ret
 1380			     1C ??0189:
 1380  E8 EC8C		      C             call  SetClkLow ; ce = cr = 4
			      C             AssertOutHi
 1383  E4 00		     1C            in    al, 0
 1385  0A C0		     1C            or    al, al
 1387  75 03		     1C            jnz   ??018A
 1389  33 C0		     1C            xor   ax, ax
 138B  C3		     1C            ret
 138C			     1C ??018A:
			      C             AssertByteCeEq 4
 138C  E4 40		     1C            in    al, 40h
 138E  3C 04		     1C            cmp   al, 4
 1390  74 03		     1C            jz    ??018B
 1392  33 C0		     1C            xor   ax, ax
 1394  C3		     1C            ret
 1395			     1C ??018B:
 1395  E8 EC72		      C             call  SetClkHi
			      C             AssertOutHi
 1398  E4 00		     1C            in    al, 0
 139A  0A C0		     1C            or    al, al
 139C  75 03		     1C            jnz   ??018C
 139E  33 C0		     1C            xor   ax, ax
 13A0  C3		     1C            ret
 13A1			     1C ??018C:
 13A1  E8 EC6B		      C             call  SetClkLow ; ce = 2
			      C             AssertOutHi
 13A4  E4 00		     1C            in    al, 0
 13A6  0A C0		     1C            or    al, al
 13A8  75 03		     1C            jnz   ??018D
 13AA  33 C0		     1C            xor   ax, ax
 13AC  C3		     1C            ret
 13AD			     1C ??018D:
			      C             AssertByteCeEq 2
 13AD  E4 40		     1C            in    al, 40h
 13AF  3C 02		     1C            cmp   al, 2
 13B1  74 03		     1C            jz    ??018E
 13B3  33 C0		     1C            xor   ax, ax
 13B5  C3		     1C            ret
 13B6			     1C ??018E:
 13B6  E8 EC51		      C             call  SetClkHi
			      C             AssertOutHi
 13B9  E4 00		     1C            in    al, 0
 13BB  0A C0		     1C            or    al, al
 13BD  75 03		     1C            jnz   ??018F
 13BF  33 C0		     1C            xor   ax, ax
 13C1  C3		     1C            ret
 13C2			     1C ??018F:
 13C2  E8 EC4A		      C             call  SetClkLow ; ce = cr = 4
			      C             AssertOutLow
 13C5  E4 00		     1C            in    al, 0
 13C7  0A C0		     1C            or    al, al
 13C9  74 03		     1C            jz    ??0190
 13CB  33 C0		     1C            xor   ax, ax
 13CD  C3		     1C            ret
 13CE			     1C ??0190:           
			      C             AssertByteCeEq 4
 13CE  E4 40		     1C            in    al, 40h
 13D0  3C 04		     1C            cmp   al, 4
 13D2  74 03		     1C            jz    ??0191
 13D4  33 C0		     1C            xor   ax, ax
 13D6  C3		     1C            ret
 13D7			     1C ??0191:
 13D7  E8 EC30		      C             call  SetClkHi
			      C             AssertOutLow
 13DA  E4 00		     1C            in    al, 0
 13DC  0A C0		     1C            or    al, al
 13DE  74 03		     1C            jz    ??0192
 13E0  33 C0		     1C            xor   ax, ax
 13E2  C3		     1C            ret
 13E3			     1C ??0192:           
 13E3  E8 EC29		      C             call  SetClkLow ; ce = 2
			      C             AssertOutLow
 13E6  E4 00		     1C            in    al, 0
 13E8  0A C0		     1C            or    al, al
 13EA  74 03		     1C            jz    ??0193
 13EC  33 C0		     1C            xor   ax, ax
 13EE  C3		     1C            ret
 13EF			     1C ??0193:           
			      C             AssertByteCeEq 2
 13EF  E4 40		     1C            in    al, 40h
 13F1  3C 02		     1C            cmp   al, 2
 13F3  74 03		     1C            jz    ??0194
 13F5  33 C0		     1C            xor   ax, ax
 13F7  C3		     1C            ret
 13F8			     1C ??0194:
 13F8  E8 EC0A		      C             call  SetGateLow
			      C             AssertOutHi
 13FB  E4 00		     1C            in    al, 0
 13FD  0A C0		     1C            or    al, al
 13FF  75 03		     1C            jnz   ??0195
 1401  33 C0		     1C            xor   ax, ax
 1403  C3		     1C            ret
 1404			     1C ??0195:
 1404  E8 EC03		      C             call  SetClkHi
			      C             AssertOutHi
 1407  E4 00		     1C            in    al, 0
 1409  0A C0		     1C            or    al, al
 140B  75 03		     1C            jnz   ??0196
 140D  33 C0		     1C            xor   ax, ax
 140F  C3		     1C            ret
 1410			     1C ??0196:
 1410  E8 EBFC		      C             call  SetClkLow
			      C             AssertOutHi
 1413  E4 00		     1C            in    al, 0
 1415  0A C0		     1C            or    al, al
 1417  75 03		     1C            jnz   ??0197
 1419  33 C0		     1C            xor   ax, ax
 141B  C3		     1C            ret
 141C			     1C ??0197:
			      C             AssertByteCeEq 2
 141C  E4 40		     1C            in    al, 40h
 141E  3C 02		     1C            cmp   al, 2
 1420  74 03		     1C            jz    ??0198
 1422  33 C0		     1C            xor   ax, ax
 1424  C3		     1C            ret
 1425			     1C ??0198:
 1425  E8 EBE2		      C             call  SetClkHi
			      C             AssertOutHi
 1428  E4 00		     1C            in    al, 0
 142A  0A C0		     1C            or    al, al
 142C  75 03		     1C            jnz   ??0199
 142E  33 C0		     1C            xor   ax, ax
 1430  C3		     1C            ret
 1431			     1C ??0199:
 1431  E8 EBDB		      C             call  SetClkLow
			      C             AssertOutHi
 1434  E4 00		     1C            in    al, 0
 1436  0A C0		     1C            or    al, al
 1438  75 03		     1C            jnz   ??019A
 143A  33 C0		     1C            xor   ax, ax
 143C  C3		     1C            ret
 143D			     1C ??019A:
			      C             AssertByteCeEq 2
 143D  E4 40		     1C            in    al, 40h
 143F  3C 02		     1C            cmp   al, 2
 1441  74 03		     1C            jz    ??019B
 1443  33 C0		     1C            xor   ax, ax
 1445  C3		     1C            ret
 1446			     1C ??019B:
 1446  E8 EBB7		      C             call  SetGateHi
			      C             AssertOutHi
 1449  E4 00		     1C            in    al, 0
 144B  0A C0		     1C            or    al, al
 144D  75 03		     1C            jnz   ??019C
 144F  33 C0		     1C            xor   ax, ax
 1451  C3		     1C            ret
 1452			     1C ??019C:
 1452  E8 EBB5		      C             call  SetClkHi
			      C             AssertOutHi
 1455  E4 00		     1C            in    al, 0
 1457  0A C0		     1C            or    al, al
 1459  75 03		     1C            jnz   ??019D
 145B  33 C0		     1C            xor   ax, ax
 145D  C3		     1C            ret
 145E			     1C ??019D:
 145E  E8 EBAE		      C             call  SetClkLow ; ce = cr = 4
			      C             AssertOutHi
 1461  E4 00		     1C            in    al, 0
 1463  0A C0		     1C            or    al, al
 1465  75 03		     1C            jnz   ??019E
 1467  33 C0		     1C            xor   ax, ax
 1469  C3		     1C            ret
 146A			     1C ??019E:
			      C             AssertByteCeEq 4
 146A  E4 40		     1C            in    al, 40h
 146C  3C 04		     1C            cmp   al, 4
 146E  74 03		     1C            jz    ??019F
 1470  33 C0		     1C            xor   ax, ax
 1472  C3		     1C            ret
 1473			     1C ??019F:
 1473  E8 EB94		      C             call  SetClkHi
			      C             AssertOutHi
 1476  E4 00		     1C            in    al, 0
 1478  0A C0		     1C            or    al, al
 147A  75 03		     1C            jnz   ??01A0
 147C  33 C0		     1C            xor   ax, ax
 147E  C3		     1C            ret
 147F			     1C ??01A0:
 147F  E8 EB8D		      C             call  SetClkLow ; ce = 2
			      C             AssertOutHi
 1482  E4 00		     1C            in    al, 0
 1484  0A C0		     1C            or    al, al
 1486  75 03		     1C            jnz   ??01A1
 1488  33 C0		     1C            xor   ax, ax
 148A  C3		     1C            ret
 148B			     1C ??01A1:
			      C             AssertByteCeEq 2
 148B  E4 40		     1C            in    al, 40h
 148D  3C 02		     1C            cmp   al, 2
 148F  74 03		     1C            jz    ??01A2
 1491  33 C0		     1C            xor   ax, ax
 1493  C3		     1C            ret
 1494			     1C ??01A2:
 1494  E8 EB73		      C             call  SetClkHi
			      C             AssertOutHi
 1497  E4 00		     1C            in    al, 0
 1499  0A C0		     1C            or    al, al
 149B  75 03		     1C            jnz   ??01A3
 149D  33 C0		     1C            xor   ax, ax
 149F  C3		     1C            ret
 14A0			     1C ??01A3:
 14A0  E8 EB6C		      C             call  SetClkLow ; ce = cr = 4
			      C             AssertOutLow
 14A3  E4 00		     1C            in    al, 0
 14A5  0A C0		     1C            or    al, al
 14A7  74 03		     1C            jz    ??01A4
 14A9  33 C0		     1C            xor   ax, ax
 14AB  C3		     1C            ret
 14AC			     1C ??01A4:           
			      C             AssertByteCeEq 4
 14AC  E4 40		     1C            in    al, 40h
 14AE  3C 04		     1C            cmp   al, 4
 14B0  74 03		     1C            jz    ??01A5
 14B2  33 C0		     1C            xor   ax, ax
 14B4  C3		     1C            ret
 14B5			     1C ??01A5:
			      C             
 14B5  B8 0001		      C             mov  ax, 1
 14B8  C3		      C             ret
 14B9			      C Mode3_Datasheet3 ENDP
			      C 
				include    mode4.asm
 14B9			      C TestMode4  PROC NEAR
 14B9  51		      C             push  cx
 14BA  B9 0000		      C             mov   cx, 0
 14BD  E8 0024		      C             call  Mode4_Datasheet1
 14C0  C1 E0 00		      C             shl   ax, 0
 14C3  0B C8		      C             or    cx, ax
 14C5  8A C1		      C             mov   al, cl
 14C7  E6 14		      C             out   14h, al
			      C 
 14C9  E8 013D		      C             call  Mode4_Datasheet2
 14CC  D1 E0		      C             shl   ax, 1
 14CE  0B C8		      C             or    cx, ax
 14D0  8A C1		      C             mov   al, cl
 14D2  E6 14		      C             out   14h, al
			      C 
 14D4  E8 026F		      C             call  Mode4_Datasheet3
 14D7  C1 E0 02		      C             shl   ax, 2
 14DA  0B C8		      C             or    cx, ax
 14DC  8A C1		      C             mov   al, cl
 14DE  E6 14		      C             out   14h, al
			      C 
 14E0  8B C1		      C             mov   ax, cx
 14E2  59		      C             pop   cx
 14E3  C3		      C             ret
 14E4			      C TestMode4  ENDP
			      C 
 14E4			      C Mode4_Datasheet1 PROC NEAR
 14E4  E8 EB19		      C             call  SetGateHi
			      C 
 14E7  E8 EB20		      C             call  SetClkHi
 14EA  B0 18		      C             mov   al, 18h
 14EC  E8 EB2F		      C             call  WriteCw
			      C             AssertOutHi
 14EF  E4 00		     1C            in    al, 0
 14F1  0A C0		     1C            or    al, al
 14F3  75 03		     1C            jnz   ??01A6
 14F5  33 C0		     1C            xor   ax, ax
 14F7  C3		     1C            ret
 14F8			     1C ??01A6:
 14F8  E8 EB14		      C             call  SetClkLow
			      C             AssertOutHi
 14FB  E4 00		     1C            in    al, 0
 14FD  0A C0		     1C            or    al, al
 14FF  75 03		     1C            jnz   ??01A7
 1501  33 C0		     1C            xor   ax, ax
 1503  C3		     1C            ret
 1504			     1C ??01A7:
 1504  E8 EB03		      C             call  SetClkHi
			      C             AssertOutHi
 1507  E4 00		     1C            in    al, 0
 1509  0A C0		     1C            or    al, al
 150B  75 03		     1C            jnz   ??01A8
 150D  33 C0		     1C            xor   ax, ax
 150F  C3		     1C            ret
 1510			     1C ??01A8:
 1510  E8 EAFC		      C             call  SetClkLow
			      C             AssertOutHi
 1513  E4 00		     1C            in    al, 0
 1515  0A C0		     1C            or    al, al
 1517  75 03		     1C            jnz   ??01A9
 1519  33 C0		     1C            xor   ax, ax
 151B  C3		     1C            ret
 151C			     1C ??01A9:
 151C  B0 03		      C             mov   al, 3
 151E  E8 EB00		      C             call  WriteCountByte
			      C             AssertOutHi
 1521  E4 00		     1C            in    al, 0
 1523  0A C0		     1C            or    al, al
 1525  75 03		     1C            jnz   ??01AA
 1527  33 C0		     1C            xor   ax, ax
 1529  C3		     1C            ret
 152A			     1C ??01AA:
 152A  E8 EADD		      C             call  SetClkHi
			      C             AssertOutHi
 152D  E4 00		     1C            in    al, 0
 152F  0A C0		     1C            or    al, al
 1531  75 03		     1C            jnz   ??01AB
 1533  33 C0		     1C            xor   ax, ax
 1535  C3		     1C            ret
 1536			     1C ??01AB:
 1536  E8 EAD6		      C             call  SetClkLow ; ce = cr = 3
			      C             AssertOutHi
 1539  E4 00		     1C            in    al, 0
 153B  0A C0		     1C            or    al, al
 153D  75 03		     1C            jnz   ??01AC
 153F  33 C0		     1C            xor   ax, ax
 1541  C3		     1C            ret
 1542			     1C ??01AC:
			      C             AssertByteCeEq 3
 1542  E4 40		     1C            in    al, 40h
 1544  3C 03		     1C            cmp   al, 3
 1546  74 03		     1C            jz    ??01AD
 1548  33 C0		     1C            xor   ax, ax
 154A  C3		     1C            ret
 154B			     1C ??01AD:
 154B  E8 EABC		      C             call  SetClkHi
			      C             AssertOutHi
 154E  E4 00		     1C            in    al, 0
 1550  0A C0		     1C            or    al, al
 1552  75 03		     1C            jnz   ??01AE
 1554  33 C0		     1C            xor   ax, ax
 1556  C3		     1C            ret
 1557			     1C ??01AE:
 1557  E8 EAB5		      C             call  SetClkLow ; ce = 2
			      C             AssertOutHi
 155A  E4 00		     1C            in    al, 0
 155C  0A C0		     1C            or    al, al
 155E  75 03		     1C            jnz   ??01AF
 1560  33 C0		     1C            xor   ax, ax
 1562  C3		     1C            ret
 1563			     1C ??01AF:
			      C             AssertByteCeEq 2
 1563  E4 40		     1C            in    al, 40h
 1565  3C 02		     1C            cmp   al, 2
 1567  74 03		     1C            jz    ??01B0
 1569  33 C0		     1C            xor   ax, ax
 156B  C3		     1C            ret
 156C			     1C ??01B0:
 156C  E8 EA9B		      C             call  SetClkHi
			      C             AssertOutHi
 156F  E4 00		     1C            in    al, 0
 1571  0A C0		     1C            or    al, al
 1573  75 03		     1C            jnz   ??01B1
 1575  33 C0		     1C            xor   ax, ax
 1577  C3		     1C            ret
 1578			     1C ??01B1:
 1578  E8 EA94		      C             call  SetClkLow ; ce = 1
			      C             AssertOutHi
 157B  E4 00		     1C            in    al, 0
 157D  0A C0		     1C            or    al, al
 157F  75 03		     1C            jnz   ??01B2
 1581  33 C0		     1C            xor   ax, ax
 1583  C3		     1C            ret
 1584			     1C ??01B2:
			      C             AssertByteCeEq 1
 1584  E4 40		     1C            in    al, 40h
 1586  3C 01		     1C            cmp   al, 1
 1588  74 03		     1C            jz    ??01B3
 158A  33 C0		     1C            xor   ax, ax
 158C  C3		     1C            ret
 158D			     1C ??01B3:
 158D  E8 EA7A		      C             call  SetClkHi
			      C             AssertOutHi
 1590  E4 00		     1C            in    al, 0
 1592  0A C0		     1C            or    al, al
 1594  75 03		     1C            jnz   ??01B4
 1596  33 C0		     1C            xor   ax, ax
 1598  C3		     1C            ret
 1599			     1C ??01B4:
 1599  E8 EA73		      C             call  SetClkLow ; ce = 0
			      C             AssertOutLow
 159C  E4 00		     1C            in    al, 0
 159E  0A C0		     1C            or    al, al
 15A0  74 03		     1C            jz    ??01B5
 15A2  33 C0		     1C            xor   ax, ax
 15A4  C3		     1C            ret
 15A5			     1C ??01B5:           
			      C             AssertByteCeEq 0
 15A5  E4 40		     1C            in    al, 40h
 15A7  3C 00		     1C            cmp   al, 0
 15A9  74 03		     1C            jz    ??01B6
 15AB  33 C0		     1C            xor   ax, ax
 15AD  C3		     1C            ret
 15AE			     1C ??01B6:
 15AE  E8 EA59		      C             call  SetClkHi
			      C             AssertOutLow
 15B1  E4 00		     1C            in    al, 0
 15B3  0A C0		     1C            or    al, al
 15B5  74 03		     1C            jz    ??01B7
 15B7  33 C0		     1C            xor   ax, ax
 15B9  C3		     1C            ret
 15BA			     1C ??01B7:           
 15BA  E8 EA52		      C             call  SetClkLow ; ce = 0ffffh
			      C             AssertOutHi
 15BD  E4 00		     1C            in    al, 0
 15BF  0A C0		     1C            or    al, al
 15C1  75 03		     1C            jnz   ??01B8
 15C3  33 C0		     1C            xor   ax, ax
 15C5  C3		     1C            ret
 15C6			     1C ??01B8:
			      C             AssertByteCeEq 0ffh
 15C6  E4 40		     1C            in    al, 40h
 15C8  3C FF		     1C            cmp   al, 0ffh
 15CA  74 03		     1C            jz    ??01B9
 15CC  33 C0		     1C            xor   ax, ax
 15CE  C3		     1C            ret
 15CF			     1C ??01B9:
			      C 
 15CF  33 C0		      C             xor   ax, ax
 15D1  8B C8		      C             mov   cx, ax
 15D3			      C Mode4_Datasheet1_M1:            
 15D3  E8 EA34		      C             call  SetClkHi
			      C             AssertOutHi
 15D6  E4 00		     1C            in    al, 0
 15D8  0A C0		     1C            or    al, al
 15DA  75 03		     1C            jnz   ??01BA
 15DC  33 C0		     1C            xor   ax, ax
 15DE  C3		     1C            ret
 15DF			     1C ??01BA:
 15DF  E8 EA2D		      C             call  SetClkLow
			      C             AssertOutHi
 15E2  E4 00		     1C            in    al, 0
 15E4  0A C0		     1C            or    al, al
 15E6  75 03		     1C            jnz   ??01BB
 15E8  33 C0		     1C            xor   ax, ax
 15EA  C3		     1C            ret
 15EB			     1C ??01BB:
 15EB  E2 E6		      C             loop  Mode4_Datasheet1_M1
			      C             
 15ED  E8 EA1A		      C             call  SetClkHi
			      C             AssertOutHi
 15F0  E4 00		     1C            in    al, 0
 15F2  0A C0		     1C            or    al, al
 15F4  75 03		     1C            jnz   ??01BC
 15F6  33 C0		     1C            xor   ax, ax
 15F8  C3		     1C            ret
 15F9			     1C ??01BC:
 15F9  E8 EA13		      C             call  SetClkLow
			      C             AssertOutHi
 15FC  E4 00		     1C            in    al, 0
 15FE  0A C0		     1C            or    al, al
 1600  75 03		     1C            jnz   ??01BD
 1602  33 C0		     1C            xor   ax, ax
 1604  C3		     1C            ret
 1605			     1C ??01BD:
			      C 
 1605  B8 0001		      C             mov  ax, 1
 1608  C3		      C             ret
 1609			      C Mode4_Datasheet1 ENDP
			      C 
 1609			      C Mode4_Datasheet2 PROC NEAR
 1609  E8 E9F9		      C             call  SetGateLow
			      C 
 160C  E8 E9FB		      C             call  SetClkHi
 160F  B0 18		      C             mov   al, 18h
 1611  E8 EA0A		      C             call  WriteCw
			      C             AssertOutHi
 1614  E4 00		     1C            in    al, 0
 1616  0A C0		     1C            or    al, al
 1618  75 03		     1C            jnz   ??01BE
 161A  33 C0		     1C            xor   ax, ax
 161C  C3		     1C            ret
 161D			     1C ??01BE:
 161D  E8 E9EF		      C             call  SetClkLow
			      C             AssertOutHi
 1620  E4 00		     1C            in    al, 0
 1622  0A C0		     1C            or    al, al
 1624  75 03		     1C            jnz   ??01BF
 1626  33 C0		     1C            xor   ax, ax
 1628  C3		     1C            ret
 1629			     1C ??01BF:
 1629  E8 E9DE		      C             call  SetClkHi
			      C             AssertOutHi

 162C  E4 00		     1C            in    al, 0
 162E  0A C0		     1C            or    al, al
 1630  75 03		     1C            jnz   ??01C0
 1632  33 C0		     1C            xor   ax, ax
 1634  C3		     1C            ret
 1635			     1C ??01C0:
 1635  E8 E9D7		      C             call  SetClkLow
			      C             AssertOutHi
 1638  E4 00		     1C            in    al, 0
 163A  0A C0		     1C            or    al, al
 163C  75 03		     1C            jnz   ??01C1
 163E  33 C0		     1C            xor   ax, ax
 1640  C3		     1C            ret
 1641			     1C ??01C1:
 1641  B0 03		      C             mov   al, 3
 1643  E8 E9DB		      C             call  WriteCountByte
			      C             AssertOutHi
 1646  E4 00		     1C            in    al, 0
 1648  0A C0		     1C            or    al, al
 164A  75 03		     1C            jnz   ??01C2
 164C  33 C0		     1C            xor   ax, ax
 164E  C3		     1C            ret
 164F			     1C ??01C2:
 164F  E8 E9B8		      C             call  SetClkHi
			      C             AssertOutHi
 1652  E4 00		     1C            in    al, 0
 1654  0A C0		     1C            or    al, al
 1656  75 03		     1C            jnz   ??01C3
 1658  33 C0		     1C            xor   ax, ax
 165A  C3		     1C            ret
 165B			     1C ??01C3:
 165B  E8 E9B1		      C             call  SetClkLow ; ce = cr = 3
			      C             AssertOutHi
 165E  E4 00		     1C            in    al, 0
 1660  0A C0		     1C            or    al, al
 1662  75 03		     1C            jnz   ??01C4
 1664  33 C0		     1C            xor   ax, ax
 1666  C3		     1C            ret
 1667			     1C ??01C4:
			      C             AssertByteCeEq 3
 1667  E4 40		     1C            in    al, 40h
 1669  3C 03		     1C            cmp   al, 3
 166B  74 03		     1C            jz    ??01C5
 166D  33 C0		     1C            xor   ax, ax
 166F  C3		     1C            ret
 1670			     1C ??01C5:
 1670  E8 E997		      C             call  SetClkHi
			      C             AssertOutHi
 1673  E4 00		     1C            in    al, 0
 1675  0A C0		     1C            or    al, al
 1677  75 03		     1C            jnz   ??01C6
 1679  33 C0		     1C            xor   ax, ax
 167B  C3		     1C            ret
 167C			     1C ??01C6:
 167C  E8 E990		      C             call  SetClkLow ; ce = 3
			      C             AssertOutHi
 167F  E4 00		     1C            in    al, 0
 1681  0A C0		     1C            or    al, al
 1683  75 03		     1C            jnz   ??01C7
 1685  33 C0		     1C            xor   ax, ax
 1687  C3		     1C            ret
 1688			     1C ??01C7:
			      C             AssertByteCeEq 3
 1688  E4 40		     1C            in    al, 40h
 168A  3C 03		     1C            cmp   al, 3
 168C  74 03		     1C            jz    ??01C8
 168E  33 C0		     1C            xor   ax, ax
 1690  C3		     1C            ret
 1691			     1C ??01C8:
 1691  E8 E976		      C             call  SetClkHi
			      C             AssertOutHi
 1694  E4 00		     1C            in    al, 0
 1696  0A C0		     1C            or    al, al
 1698  75 03		     1C            jnz   ??01C9
 169A  33 C0		     1C            xor   ax, ax
 169C  C3		     1C            ret
 169D			     1C ??01C9:
 169D  E8 E960		      C             call  SetGateHi
			      C             AssertOutHi
 16A0  E4 00		     1C            in    al, 0
 16A2  0A C0		     1C            or    al, al
 16A4  75 03		     1C            jnz   ??01CA
 16A6  33 C0		     1C            xor   ax, ax
 16A8  C3		     1C            ret
 16A9			     1C ??01CA:
 16A9  E8 E963		      C             call  SetClkLow ; ce = 3
			      C             AssertOutHi
 16AC  E4 00		     1C            in    al, 0
 16AE  0A C0		     1C            or    al, al
 16B0  75 03		     1C            jnz   ??01CB
 16B2  33 C0		     1C            xor   ax, ax
 16B4  C3		     1C            ret
 16B5			     1C ??01CB:
			      C             AssertByteCeEq 3
 16B5  E4 40		     1C            in    al, 40h
 16B7  3C 03		     1C            cmp   al, 3
 16B9  74 03		     1C            jz    ??01CC
 16BB  33 C0		     1C            xor   ax, ax
 16BD  C3		     1C            ret
 16BE			     1C ??01CC:
 16BE  E8 E949		      C             call  SetClkHi
			      C             AssertOutHi
 16C1  E4 00		     1C            in    al, 0
 16C3  0A C0		     1C            or    al, al
 16C5  75 03		     1C            jnz   ??01CD
 16C7  33 C0		     1C            xor   ax, ax
 16C9  C3		     1C            ret
 16CA			     1C ??01CD:
 16CA  E8 E942		      C             call  SetClkLow ; ce = 2
			      C             AssertOutHi
 16CD  E4 00		     1C            in    al, 0
 16CF  0A C0		     1C            or    al, al
 16D1  75 03		     1C            jnz   ??01CE
 16D3  33 C0		     1C            xor   ax, ax
 16D5  C3		     1C            ret
 16D6			     1C ??01CE:
			      C             AssertByteCeEq 2
 16D6  E4 40		     1C            in    al, 40h
 16D8  3C 02		     1C            cmp   al, 2
 16DA  74 03		     1C            jz    ??01CF
 16DC  33 C0		     1C            xor   ax, ax
 16DE  C3		     1C            ret
 16DF			     1C ??01CF:
 16DF  E8 E928		      C             call  SetClkHi
			      C             AssertOutHi
 16E2  E4 00		     1C            in    al, 0
 16E4  0A C0		     1C            or    al, al
 16E6  75 03		     1C            jnz   ??01D0
 16E8  33 C0		     1C            xor   ax, ax
 16EA  C3		     1C            ret
 16EB			     1C ??01D0:
 16EB  E8 E921		      C             call  SetClkLow ; ce = 1
			      C             AssertOutHi
 16EE  E4 00		     1C            in    al, 0
 16F0  0A C0		     1C            or    al, al
 16F2  75 03		     1C            jnz   ??01D1
 16F4  33 C0		     1C            xor   ax, ax
 16F6  C3		     1C            ret
 16F7			     1C ??01D1:
			      C             AssertByteCeEq 1
 16F7  E4 40		     1C            in    al, 40h
 16F9  3C 01		     1C            cmp   al, 1
 16FB  74 03		     1C            jz    ??01D2
 16FD  33 C0		     1C            xor   ax, ax
 16FF  C3		     1C            ret
 1700			     1C ??01D2:
 1700  E8 E907		      C             call  SetClkHi
			      C             AssertOutHi
 1703  E4 00		     1C            in    al, 0
 1705  0A C0		     1C            or    al, al
 1707  75 03		     1C            jnz   ??01D3
 1709  33 C0		     1C            xor   ax, ax
 170B  C3		     1C            ret
 170C			     1C ??01D3:
 170C  E8 E900		      C             call  SetClkLow ; ce = 0
			      C             AssertOutLow
 170F  E4 00		     1C            in    al, 0
 1711  0A C0		     1C            or    al, al
 1713  74 03		     1C            jz    ??01D4
 1715  33 C0		     1C            xor   ax, ax
 1717  C3		     1C            ret
 1718			     1C ??01D4:           
			      C             AssertByteCeEq 0
 1718  E4 40		     1C            in    al, 40h
 171A  3C 00		     1C            cmp   al, 0
 171C  74 03		     1C            jz    ??01D5
 171E  33 C0		     1C            xor   ax, ax
 1720  C3		     1C            ret
 1721			     1C ??01D5:
 1721  E8 E8E6		      C             call  SetClkHi
			      C             AssertOutLow
 1724  E4 00		     1C            in    al, 0
 1726  0A C0		     1C            or    al, al
 1728  74 03		     1C            jz    ??01D6
 172A  33 C0		     1C            xor   ax, ax
 172C  C3		     1C            ret
 172D			     1C ??01D6:           
 172D  E8 E8DF		      C             call  SetClkLow ; ce = 0ffffh
			      C             AssertOutHi
 1730  E4 00		     1C            in    al, 0
 1732  0A C0		     1C            or    al, al
 1734  75 03		     1C            jnz   ??01D7
 1736  33 C0		     1C            xor   ax, ax
 1738  C3		     1C            ret
 1739			     1C ??01D7:
			      C             AssertByteCeEq 0ffh
 1739  E4 40		     1C            in    al, 40h
 173B  3C FF		     1C            cmp   al, 0ffh
 173D  74 03		     1C            jz    ??01D8
 173F  33 C0		     1C            xor   ax, ax
 1741  C3		     1C            ret
 1742			     1C ??01D8:
			      C 
 1742  B8 0001		      C             mov   ax, 1
 1745  C3		      C             ret
 1746			      C Mode4_Datasheet2 ENDP
			      C 
 1746			      C Mode4_Datasheet3 PROC NEAR
 1746  E8 E8B7		      C             call  SetGateHi
			      C 
 1749  E8 E8BE		      C             call  SetClkHi
 174C  B0 18		      C             mov   al, 18h
 174E  E8 E8CD		      C             call  WriteCw
			      C             AssertOutHi
 1751  E4 00		     1C            in    al, 0
 1753  0A C0		     1C            or    al, al
 1755  75 03		     1C            jnz   ??01D9
 1757  33 C0		     1C            xor   ax, ax
 1759  C3		     1C            ret
 175A			     1C ??01D9:
 175A  E8 E8B2		      C             call  SetClkLow
			      C             AssertOutHi
 175D  E4 00		     1C            in    al, 0
 175F  0A C0		     1C            or    al, al
 1761  75 03		     1C            jnz   ??01DA
 1763  33 C0		     1C            xor   ax, ax
 1765  C3		     1C            ret
 1766			     1C ??01DA:
 1766  E8 E8A1		      C             call  SetClkHi
			      C             AssertOutHi
 1769  E4 00		     1C            in    al, 0
 176B  0A C0		     1C            or    al, al
 176D  75 03		     1C            jnz   ??01DB
 176F  33 C0		     1C            xor   ax, ax
 1771  C3		     1C            ret
 1772			     1C ??01DB:
 1772  E8 E89A		      C             call  SetClkLow
			      C             AssertOutHi
 1775  E4 00		     1C            in    al, 0
 1777  0A C0		     1C            or    al, al
 1779  75 03		     1C            jnz   ??01DC
 177B  33 C0		     1C            xor   ax, ax
 177D  C3		     1C            ret
 177E			     1C ??01DC:
 177E  B0 03		      C             mov   al, 3
 1780  E8 E89E		      C             call  WriteCountByte
			      C             AssertOutHi
 1783  E4 00		     1C            in    al, 0
 1785  0A C0		     1C            or    al, al
 1787  75 03		     1C            jnz   ??01DD
 1789  33 C0		     1C            xor   ax, ax
 178B  C3		     1C            ret
 178C			     1C ??01DD:
 178C  E8 E87B		      C             call  SetClkHi
			      C             AssertOutHi
 178F  E4 00		     1C            in    al, 0
 1791  0A C0		     1C            or    al, al
 1793  75 03		     1C            jnz   ??01DE
 1795  33 C0		     1C            xor   ax, ax
 1797  C3		     1C            ret
 1798			     1C ??01DE:
 1798  E8 E874		      C             call  SetClkLow ; ce = cr = 3
			      C             AssertOutHi
 179B  E4 00		     1C            in    al, 0
 179D  0A C0		     1C            or    al, al
 179F  75 03		     1C            jnz   ??01DF
 17A1  33 C0		     1C            xor   ax, ax
 17A3  C3		     1C            ret
 17A4			     1C ??01DF:
			      C             AssertByteCeEq 3
 17A4  E4 40		     1C            in    al, 40h
 17A6  3C 03		     1C            cmp   al, 3
 17A8  74 03		     1C            jz    ??01E0
 17AA  33 C0		     1C            xor   ax, ax
 17AC  C3		     1C            ret
 17AD			     1C ??01E0:
 17AD  E8 E85A		      C             call  SetClkHi
			      C             AssertOutHi
 17B0  E4 00		     1C            in    al, 0
 17B2  0A C0		     1C            or    al, al
 17B4  75 03		     1C            jnz   ??01E1
 17B6  33 C0		     1C            xor   ax, ax
 17B8  C3		     1C            ret
 17B9			     1C ??01E1:
 17B9  E8 E853		      C             call  SetClkLow ; ce = 2
			      C             AssertOutHi
 17BC  E4 00		     1C            in    al, 0
 17BE  0A C0		     1C            or    al, al
 17C0  75 03		     1C            jnz   ??01E2
 17C2  33 C0		     1C            xor   ax, ax
 17C4  C3		     1C            ret
 17C5			     1C ??01E2:
			      C             AssertByteCeEq 2
 17C5  E4 40		     1C            in    al, 40h
 17C7  3C 02		     1C            cmp   al, 2
 17C9  74 03		     1C            jz    ??01E3
 17CB  33 C0		     1C            xor   ax, ax
 17CD  C3		     1C            ret
 17CE			     1C ??01E3:
 17CE  E8 E839		      C             call  SetClkHi
			      C             AssertOutHi
 17D1  E4 00		     1C            in    al, 0
 17D3  0A C0		     1C            or    al, al
 17D5  75 03		     1C            jnz   ??01E4
 17D7  33 C0		     1C            xor   ax, ax
 17D9  C3		     1C            ret
 17DA			     1C ??01E4:
 17DA  E8 E832		      C             call  SetClkLow ; ce = 1
			      C             AssertOutHi
 17DD  E4 00		     1C            in    al, 0
 17DF  0A C0		     1C            or    al, al
 17E1  75 03		     1C            jnz   ??01E5
 17E3  33 C0		     1C            xor   ax, ax
 17E5  C3		     1C            ret
 17E6			     1C ??01E5:
			      C             AssertByteCeEq 1
 17E6  E4 40		     1C            in    al, 40h
 17E8  3C 01		     1C            cmp   al, 1
 17EA  74 03		     1C            jz    ??01E6
 17EC  33 C0		     1C            xor   ax, ax
 17EE  C3		     1C            ret
 17EF			     1C ??01E6:
 17EF  B0 02		      C             mov   al, 2
 17F1  E8 E82D		      C             call  WriteCountByte ; cr = 2
			      C             AssertOutHi
 17F4  E4 00		     1C            in    al, 0
 17F6  0A C0		     1C            or    al, al
 17F8  75 03		     1C            jnz   ??01E7
 17FA  33 C0		     1C            xor   ax, ax
 17FC  C3		     1C            ret
 17FD			     1C ??01E7:
 17FD  E8 E80A		      C             call  SetClkHi
			      C             AssertOutHi
 1800  E4 00		     1C            in    al, 0
 1802  0A C0		     1C            or    al, al
 1804  75 03		     1C            jnz   ??01E8
 1806  33 C0		     1C            xor   ax, ax
 1808  C3		     1C            ret
 1809			     1C ??01E8:
 1809  E8 E803		      C             call  SetClkLow ; ce = cr = 2
			      C             AssertOutHi
 180C  E4 00		     1C            in    al, 0
 180E  0A C0		     1C            or    al, al
 1810  75 03		     1C            jnz   ??01E9
 1812  33 C0		     1C            xor   ax, ax
 1814  C3		     1C            ret
 1815			     1C ??01E9:
			      C             AssertByteCeEq 2
 1815  E4 40		     1C            in    al, 40h
 1817  3C 02		     1C            cmp   al, 2
 1819  74 03		     1C            jz    ??01EA
 181B  33 C0		     1C            xor   ax, ax
 181D  C3		     1C            ret
 181E			     1C ??01EA:
 181E  E8 E7E9		      C             call  SetClkHi
			      C             AssertOutHi
 1821  E4 00		     1C            in    al, 0
 1823  0A C0		     1C            or    al, al
 1825  75 03		     1C            jnz   ??01EB
 1827  33 C0		     1C            xor   ax, ax
 1829  C3		     1C            ret
 182A			     1C ??01EB:
 182A  E8 E7E2		      C             call  SetClkLow ; ce = 1
			      C             AssertOutHi
 182D  E4 00		     1C            in    al, 0
 182F  0A C0		     1C            or    al, al
 1831  75 03		     1C            jnz   ??01EC
 1833  33 C0		     1C            xor   ax, ax
 1835  C3		     1C            ret
 1836			     1C ??01EC:
			      C             AssertByteCeEq 1
 1836  E4 40		     1C            in    al, 40h
 1838  3C 01		     1C            cmp   al, 1
 183A  74 03		     1C            jz    ??01ED
 183C  33 C0		     1C            xor   ax, ax
 183E  C3		     1C            ret
 183F			     1C ??01ED:
 183F  E8 E7C8		      C             call  SetClkHi
			      C             AssertOutHi
 1842  E4 00		     1C            in    al, 0
 1844  0A C0		     1C            or    al, al
 1846  75 03		     1C            jnz   ??01EE
 1848  33 C0		     1C            xor   ax, ax
 184A  C3		     1C            ret
 184B			     1C ??01EE:
 184B  E8 E7C1		      C             call  SetClkLow ; ce = 0
			      C             AssertOutLow
 184E  E4 00		     1C            in    al, 0
 1850  0A C0		     1C            or    al, al
 1852  74 03		     1C            jz    ??01EF
 1854  33 C0		     1C            xor   ax, ax
 1856  C3		     1C            ret
 1857			     1C ??01EF:           
			      C             AssertByteCeEq 0
 1857  E4 40		     1C            in    al, 40h
 1859  3C 00		     1C            cmp   al, 0
 185B  74 03		     1C            jz    ??01F0
 185D  33 C0		     1C            xor   ax, ax
 185F  C3		     1C            ret
 1860			     1C ??01F0:
 1860  E8 E7A7		      C             call  SetClkHi
			      C             AssertOutLow
 1863  E4 00		     1C            in    al, 0
 1865  0A C0		     1C            or    al, al
 1867  74 03		     1C            jz    ??01F1
 1869  33 C0		     1C            xor   ax, ax
 186B  C3		     1C            ret
 186C			     1C ??01F1:           
 186C  E8 E7A0		      C             call  SetClkLow ; ce = 0ffffh
			      C             AssertOutHi
 186F  E4 00		     1C            in    al, 0
 1871  0A C0		     1C            or    al, al
 1873  75 03		     1C            jnz   ??01F2
 1875  33 C0		     1C            xor   ax, ax
 1877  C3		     1C            ret
 1878			     1C ??01F2:
			      C             AssertByteCeEq 0ffh
 1878  E4 40		     1C            in    al, 40h
 187A  3C FF		     1C            cmp   al, 0ffh
 187C  74 03		     1C            jz    ??01F3
 187E  33 C0		     1C            xor   ax, ax
 1880  C3		     1C            ret
 1881			     1C ??01F3:
			      C 
 1881  B8 0001		      C             mov   ax, 1
 1884  C3		      C             ret
 1885			      C Mode4_Datasheet3 ENDP
			      C 
				include    mode5.asm
 1885			      C TestMode5  PROC NEAR
 1885  51		      C             push  cx
			      C 
 1886  B9 0000		      C             mov   cx, 0
 1889  E8 0048		      C             call  Mode5_Datasheet1_Gate_Low
 188C  C1 E0 00		      C             shl   ax, 0
 188F  0B C8		      C             or    cx, ax
 1891  8A C1		      C             mov   al, cl
 1893  E6 15		      C             out   15h, al
			      C 
 1895  E8 0194		      C             call  Mode5_Datasheet1_Gate_High
 1898  D1 E0		      C             shl   ax, 1
 189A  0B C8		      C             or    cx, ax
 189C  8A C1		      C             mov   al, cl
 189E  E6 15		      C             out   15h, al
			      C 
 18A0  E8 02E1		      C             call  Mode5_Datasheet2_Gate_Low
 18A3  C1 E0 02		      C             shl   ax, 2
 18A6  0B C8		      C             or    cx, ax
 18A8  8A C1		      C             mov   al, cl
 18AA  E6 15		      C             out   15h, al
			      C 
 18AC  E8 0466		      C             call  Mode5_Datasheet2_Gate_High
 18AF  C1 E0 03		      C             shl   ax, 3
 18B2  0B C8		      C             or    cx, ax
 18B4  8A C1		      C             mov   al, cl
 18B6  E6 15		      C             out   15h, al
			      C 
 18B8  E8 05EB		      C             call  Mode5_Datasheet3_Gate_Low
 18BB  C1 E0 04		      C             shl   ax, 4
 18BE  0B C8		      C             or    cx, ax
 18C0  8A C1		      C             mov   al, cl
 18C2  E6 15		      C             out   15h, al
			      C 
 18C4  E8 079F		      C             call  Mode5_Datasheet3_Gate_High
 18C7  C1 E0 05		      C             shl   ax, 5
 18CA  0B C8		      C             or    cx, ax
 18CC  8A C1		      C             mov   al, cl
 18CE  E6 15		      C             out   15h, al
			      C 
 18D0  8B C1		      C             mov   ax, cx
 18D2  59		      C             pop   cx
 18D3  C3		      C             ret
 18D4			      C TestMode5  ENDP
			      C 
 18D4			      C Mode5_Datasheet1_Gate_Low PROC NEAR
 18D4  E8 E72E		      C             call  SetGateLow
			      C 
 18D7  E8 E730		      C             call  SetClkHi
 18DA  B0 1A		      C             mov   al, 1ah
 18DC  E8 E73F		      C             call  WriteCw
			      C             AssertOutHi
 18DF  E4 00		     1C            in    al, 0
 18E1  0A C0		     1C            or    al, al
 18E3  75 03		     1C            jnz   ??01F4
 18E5  33 C0		     1C            xor   ax, ax
 18E7  C3		     1C            ret
 18E8			     1C ??01F4:
 18E8  E8 E724		      C             call  SetClkLow
			      C             AssertOutHi
 18EB  E4 00		     1C            in    al, 0
 18ED  0A C0		     1C            or    al, al
 18EF  75 03		     1C            jnz   ??01F5
 18F1  33 C0		     1C            xor   ax, ax
 18F3  C3		     1C            ret
 18F4			     1C ??01F5:
 18F4  E8 E713		      C             call  SetClkHi
			      C             AssertOutHi
 18F7  E4 00		     1C            in    al, 0
 18F9  0A C0		     1C            or    al, al
 18FB  75 03		     1C            jnz   ??01F6
 18FD  33 C0		     1C            xor   ax, ax
 18FF  C3		     1C            ret
 1900			     1C ??01F6:
 1900  E8 E70C		      C             call  SetClkLow
			      C             AssertOutHi
 1903  E4 00		     1C            in    al, 0
 1905  0A C0		     1C            or    al, al
 1907  75 03		     1C            jnz   ??01F7
 1909  33 C0		     1C            xor   ax, ax
 190B  C3		     1C            ret
 190C			     1C ??01F7:
 190C  B0 03		      C             mov   al, 3
 190E  E8 E710		      C             call  WriteCountByte
			      C             AssertOutHi
 1911  E4 00		     1C            in    al, 0
 1913  0A C0		     1C            or    al, al
 1915  75 03		     1C            jnz   ??01F8
 1917  33 C0		     1C            xor   ax, ax
 1919  C3		     1C            ret
 191A			     1C ??01F8:
 191A  E8 E6ED		      C             call  SetClkHi
			      C             AssertOutHi
 191D  E4 00		     1C            in    al, 0
 191F  0A C0		     1C            or    al, al
 1921  75 03		     1C            jnz   ??01F9
 1923  33 C0		     1C            xor   ax, ax
 1925  C3		     1C            ret
 1926			     1C ??01F9:
 1926  E8 E6E6		      C             call  SetClkLow
			      C             AssertOutHi
 1929  E4 00		     1C            in    al, 0
 192B  0A C0		     1C            or    al, al
 192D  75 03		     1C            jnz   ??01FA
 192F  33 C0		     1C            xor   ax, ax
 1931  C3		     1C            ret
 1932			     1C ??01FA:
 1932  E8 E6CB		      C             call  SetGateHi
			      C             AssertOutHi
 1935  E4 00		     1C            in    al, 0
 1937  0A C0		     1C            or    al, al
 1939  75 03		     1C            jnz   ??01FB
 193B  33 C0		     1C            xor   ax, ax
 193D  C3		     1C            ret
 193E			     1C ??01FB:
 193E  E8 E6C4		      C             call  SetGateLow
			      C             AssertOutHi
 1941  E4 00		     1C            in    al, 0
 1943  0A C0		     1C            or    al, al
 1945  75 03		     1C            jnz   ??01FC
 1947  33 C0		     1C            xor   ax, ax
 1949  C3		     1C            ret
 194A			     1C ??01FC:
 194A  E8 E6BD		      C             call  SetClkHi
			      C             AssertOutHi
 194D  E4 00		     1C            in    al, 0
 194F  0A C0		     1C            or    al, al
 1951  75 03		     1C            jnz   ??01FD
 1953  33 C0		     1C            xor   ax, ax
 1955  C3		     1C            ret
 1956			     1C ??01FD:
 1956  E8 E6B6		      C             call  SetClkLow ; ce = cr = 3
			      C             AssertOutHi
 1959  E4 00		     1C            in    al, 0
 195B  0A C0		     1C            or    al, al
 195D  75 03		     1C            jnz   ??01FE
 195F  33 C0		     1C            xor   ax, ax
 1961  C3		     1C            ret
 1962			     1C ??01FE:
			      C             AssertByteCeEq 3
 1962  E4 40		     1C            in    al, 40h
 1964  3C 03		     1C            cmp   al, 3
 1966  74 03		     1C            jz    ??01FF
 1968  33 C0		     1C            xor   ax, ax
 196A  C3		     1C            ret
 196B			     1C ??01FF:
 196B  E8 E69C		      C             call  SetClkHi
			      C             AssertOutHi
 196E  E4 00		     1C            in    al, 0
 1970  0A C0		     1C            or    al, al
 1972  75 03		     1C            jnz   ??0200
 1974  33 C0		     1C            xor   ax, ax
 1976  C3		     1C            ret
 1977			     1C ??0200:
 1977  E8 E695		      C             call  SetClkLow ; ce = 2
			      C             AssertOutHi
 197A  E4 00		     1C            in    al, 0
 197C  0A C0		     1C            or    al, al
 197E  75 03		     1C            jnz   ??0201
 1980  33 C0		     1C            xor   ax, ax
 1982  C3		     1C            ret
 1983			     1C ??0201:
			      C             AssertByteCeEq 2
 1983  E4 40		     1C            in    al, 40h
 1985  3C 02		     1C            cmp   al, 2
 1987  74 03		     1C            jz    ??0202
 1989  33 C0		     1C            xor   ax, ax
 198B  C3		     1C            ret
 198C			     1C ??0202:
 198C  E8 E67B		      C             call  SetClkHi
			      C             AssertOutHi
 198F  E4 00		     1C            in    al, 0
 1991  0A C0		     1C            or    al, al
 1993  75 03		     1C            jnz   ??0203
 1995  33 C0		     1C            xor   ax, ax
 1997  C3		     1C            ret
 1998			     1C ??0203:
 1998  E8 E674		      C             call  SetClkLow ; ce = 1
			      C             AssertOutHi
 199B  E4 00		     1C            in    al, 0
 199D  0A C0		     1C            or    al, al
 199F  75 03		     1C            jnz   ??0204
 19A1  33 C0		     1C            xor   ax, ax
 19A3  C3		     1C            ret
 19A4			     1C ??0204:
			      C             AssertByteCeEq 1
 19A4  E4 40		     1C            in    al, 40h
 19A6  3C 01		     1C            cmp   al, 1
 19A8  74 03		     1C            jz    ??0205
 19AA  33 C0		     1C            xor   ax, ax
 19AC  C3		     1C            ret
 19AD			     1C ??0205:
 19AD  E8 E65A		      C             call  SetClkHi
			      C             AssertOutHi
 19B0  E4 00		     1C            in    al, 0
 19B2  0A C0		     1C            or    al, al
 19B4  75 03		     1C            jnz   ??0206
 19B6  33 C0		     1C            xor   ax, ax
 19B8  C3		     1C            ret
 19B9			     1C ??0206:
 19B9  E8 E653		      C             call  SetClkLow ; ce = 0
			      C             AssertOutLow
 19BC  E4 00		     1C            in    al, 0
 19BE  0A C0		     1C            or    al, al
 19C0  74 03		     1C            jz    ??0207
 19C2  33 C0		     1C            xor   ax, ax
 19C4  C3		     1C            ret
 19C5			     1C ??0207:           
			      C             AssertByteCeEq 0
 19C5  E4 40		     1C            in    al, 40h
 19C7  3C 00		     1C            cmp   al, 0
 19C9  74 03		     1C            jz    ??0208
 19CB  33 C0		     1C            xor   ax, ax
 19CD  C3		     1C            ret
 19CE			     1C ??0208:
 19CE  E8 E639		      C             call  SetClkHi
			      C             AssertOutLow
 19D1  E4 00		     1C            in    al, 0
 19D3  0A C0		     1C            or    al, al
 19D5  74 03		     1C            jz    ??0209
 19D7  33 C0		     1C            xor   ax, ax
 19D9  C3		     1C            ret
 19DA			     1C ??0209:           
 19DA  E8 E623		      C             call  SetGateHi
			      C             AssertOutLow
 19DD  E4 00		     1C            in    al, 0
 19DF  0A C0		     1C            or    al, al
 19E1  74 03		     1C            jz    ??020A
 19E3  33 C0		     1C            xor   ax, ax
 19E5  C3		     1C            ret
 19E6			     1C ??020A:           
 19E6  E8 E626		      C             call  SetClkLow ; ce = 0ffffh
			      C             AssertOutHi
 19E9  E4 00		     1C            in    al, 0
 19EB  0A C0		     1C            or    al, al
 19ED  75 03		     1C            jnz   ??020B
 19EF  33 C0		     1C            xor   ax, ax
 19F1  C3		     1C            ret
 19F2			     1C ??020B:
			      C             AssertByteCeEq 0ffh
 19F2  E4 40		     1C            in    al, 40h
 19F4  3C FF		     1C            cmp   al, 0ffh
 19F6  74 03		     1C            jz    ??020C
 19F8  33 C0		     1C            xor   ax, ax
 19FA  C3		     1C            ret
 19FB			     1C ??020C:
 19FB  E8 E607		      C             call  SetGateLow
			      C             AssertOutHi
 19FE  E4 00		     1C            in    al, 0
 1A00  0A C0		     1C            or    al, al
 1A02  75 03		     1C            jnz   ??020D
 1A04  33 C0		     1C            xor   ax, ax
 1A06  C3		     1C            ret
 1A07			     1C ??020D:
 1A07  E8 E600		      C             call  SetClkHi
			      C             AssertOutHi
 1A0A  E4 00		     1C            in    al, 0
 1A0C  0A C0		     1C            or    al, al
 1A0E  75 03		     1C            jnz   ??020E
 1A10  33 C0		     1C            xor   ax, ax
 1A12  C3		     1C            ret
 1A13			     1C ??020E:
 1A13  E8 E5F9		      C             call  SetClkLow ; ce = cr = 3
			      C             AssertOutHi
 1A16  E4 00		     1C            in    al, 0
 1A18  0A C0		     1C            or    al, al
 1A1A  75 03		     1C            jnz   ??020F
 1A1C  33 C0		     1C            xor   ax, ax
 1A1E  C3		     1C            ret
 1A1F			     1C ??020F:
			      C             AssertByteCeEq 3
 1A1F  E4 40		     1C            in    al, 40h
 1A21  3C 03		     1C            cmp   al, 3
 1A23  74 03		     1C            jz    ??0210
 1A25  33 C0		     1C            xor   ax, ax
 1A27  C3		     1C            ret
 1A28			     1C ??0210:
			      C             
 1A28  B8 0001		      C             mov   ax, 1
 1A2B  C3		      C             ret
 1A2C			      C Mode5_Datasheet1_Gate_Low ENDP
			      C 
 1A2C			      C Mode5_Datasheet1_Gate_High PROC NEAR
 1A2C  E8 E5D1		      C             call  SetGateHi
			      C 
 1A2F  E8 E5D8		      C             call  SetClkHi
 1A32  B0 1A		      C             mov   al, 1ah
 1A34  E8 E5E7		      C             call  WriteCw
			      C             AssertOutHi
 1A37  E4 00		     1C            in    al, 0
 1A39  0A C0		     1C            or    al, al
 1A3B  75 03		     1C            jnz   ??0211
 1A3D  33 C0		     1C            xor   ax, ax
 1A3F  C3		     1C            ret
 1A40			     1C ??0211:
 1A40  E8 E5CC		      C             call  SetClkLow
			      C             AssertOutHi
 1A43  E4 00		     1C            in    al, 0
 1A45  0A C0		     1C            or    al, al
 1A47  75 03		     1C            jnz   ??0212
 1A49  33 C0		     1C            xor   ax, ax
 1A4B  C3		     1C            ret
 1A4C			     1C ??0212:
 1A4C  E8 E5BB		      C             call  SetClkHi
			      C             AssertOutHi
 1A4F  E4 00		     1C            in    al, 0
 1A51  0A C0		     1C            or    al, al
 1A53  75 03		     1C            jnz   ??0213
 1A55  33 C0		     1C            xor   ax, ax
 1A57  C3		     1C            ret
 1A58			     1C ??0213:
 1A58  E8 E5B4		      C             call  SetClkLow
			      C             AssertOutHi
 1A5B  E4 00		     1C            in    al, 0
 1A5D  0A C0		     1C            or    al, al
 1A5F  75 03		     1C            jnz   ??0214
 1A61  33 C0		     1C            xor   ax, ax
 1A63  C3		     1C            ret
 1A64			     1C ??0214:
 1A64  B0 03		      C             mov   al, 3
 1A66  E8 E5B8		      C             call  WriteCountByte
			      C             AssertOutHi
 1A69  E4 00		     1C            in    al, 0
 1A6B  0A C0		     1C            or    al, al
 1A6D  75 03		     1C            jnz   ??0215
 1A6F  33 C0		     1C            xor   ax, ax
 1A71  C3		     1C            ret
 1A72			     1C ??0215:
 1A72  E8 E595		      C             call  SetClkHi
			      C             AssertOutHi
 1A75  E4 00		     1C            in    al, 0
 1A77  0A C0		     1C            or    al, al
 1A79  75 03		     1C            jnz   ??0216
 1A7B  33 C0		     1C            xor   ax, ax
 1A7D  C3		     1C            ret
 1A7E			     1C ??0216:
 1A7E  E8 E584		      C             call  SetGateLow
			      C             AssertOutHi
 1A81  E4 00		     1C            in    al, 0
 1A83  0A C0		     1C            or    al, al
 1A85  75 03		     1C            jnz   ??0217
 1A87  33 C0		     1C            xor   ax, ax
 1A89  C3		     1C            ret
 1A8A			     1C ??0217:
 1A8A  E8 E582		      C             call  SetClkLow
			      C             AssertOutHi
 1A8D  E4 00		     1C            in    al, 0
 1A8F  0A C0		     1C            or    al, al
 1A91  75 03		     1C            jnz   ??0218
 1A93  33 C0		     1C            xor   ax, ax
 1A95  C3		     1C            ret
 1A96			     1C ??0218:
 1A96  E8 E567		      C             call  SetGateHi
			      C             AssertOutHi
 1A99  E4 00		     1C            in    al, 0
 1A9B  0A C0		     1C            or    al, al
 1A9D  75 03		     1C            jnz   ??0219
 1A9F  33 C0		     1C            xor   ax, ax
 1AA1  C3		     1C            ret
 1AA2			     1C ??0219:
 1AA2  E8 E565		      C             call  SetClkHi
			      C             AssertOutHi
 1AA5  E4 00		     1C            in    al, 0
 1AA7  0A C0		     1C            or    al, al
 1AA9  75 03		     1C            jnz   ??021A
 1AAB  33 C0		     1C            xor   ax, ax
 1AAD  C3		     1C            ret
 1AAE			     1C ??021A:
 1AAE  E8 E55E		      C             call  SetClkLow ; ce = cr = 3
			      C             AssertOutHi
 1AB1  E4 00		     1C            in    al, 0
 1AB3  0A C0		     1C            or    al, al
 1AB5  75 03		     1C            jnz   ??021B
 1AB7  33 C0		     1C            xor   ax, ax
 1AB9  C3		     1C            ret
 1ABA			     1C ??021B:
			      C             AssertByteCeEq 3
 1ABA  E4 40		     1C            in    al, 40h
 1ABC  3C 03		     1C            cmp   al, 3
 1ABE  74 03		     1C            jz    ??021C
 1AC0  33 C0		     1C            xor   ax, ax
 1AC2  C3		     1C            ret
 1AC3			     1C ??021C:
 1AC3  E8 E544		      C             call  SetClkHi
			      C             AssertOutHi
 1AC6  E4 00		     1C            in    al, 0
 1AC8  0A C0		     1C            or    al, al
 1ACA  75 03		     1C            jnz   ??021D
 1ACC  33 C0		     1C            xor   ax, ax
 1ACE  C3		     1C            ret
 1ACF			     1C ??021D:
 1ACF  E8 E53D		      C             call  SetClkLow ; ce = 2
			      C             AssertOutHi
 1AD2  E4 00		     1C            in    al, 0
 1AD4  0A C0		     1C            or    al, al
 1AD6  75 03		     1C            jnz   ??021E
 1AD8  33 C0		     1C            xor   ax, ax
 1ADA  C3		     1C            ret
 1ADB			     1C ??021E:
			      C             AssertByteCeEq 2
 1ADB  E4 40		     1C            in    al, 40h
 1ADD  3C 02		     1C            cmp   al, 2
 1ADF  74 03		     1C            jz    ??021F
 1AE1  33 C0		     1C            xor   ax, ax
 1AE3  C3		     1C            ret
 1AE4			     1C ??021F:
 1AE4  E8 E523		      C             call  SetClkHi
			      C             AssertOutHi
 1AE7  E4 00		     1C            in    al, 0
 1AE9  0A C0		     1C            or    al, al
 1AEB  75 03		     1C            jnz   ??0220
 1AED  33 C0		     1C            xor   ax, ax
 1AEF  C3		     1C            ret
 1AF0			     1C ??0220:
 1AF0  E8 E51C		      C             call  SetClkLow ; ce = 1
			      C             AssertOutHi
 1AF3  E4 00		     1C            in    al, 0
 1AF5  0A C0		     1C            or    al, al
 1AF7  75 03		     1C            jnz   ??0221
 1AF9  33 C0		     1C            xor   ax, ax
 1AFB  C3		     1C            ret
 1AFC			     1C ??0221:
			      C             AssertByteCeEq 1
 1AFC  E4 40		     1C            in    al, 40h
 1AFE  3C 01		     1C            cmp   al, 1
 1B00  74 03		     1C            jz    ??0222
 1B02  33 C0		     1C            xor   ax, ax
 1B04  C3		     1C            ret
 1B05			     1C ??0222:
 1B05  E8 E502		      C             call  SetClkHi
			      C             AssertOutHi
 1B08  E4 00		     1C            in    al, 0
 1B0A  0A C0		     1C            or    al, al
 1B0C  75 03		     1C            jnz   ??0223
 1B0E  33 C0		     1C            xor   ax, ax
 1B10  C3		     1C            ret
 1B11			     1C ??0223:
 1B11  E8 E4FB		      C             call  SetClkLow ; ce = 0
			      C             AssertOutLow
 1B14  E4 00		     1C            in    al, 0
 1B16  0A C0		     1C            or    al, al
 1B18  74 03		     1C            jz    ??0224
 1B1A  33 C0		     1C            xor   ax, ax
 1B1C  C3		     1C            ret
 1B1D			     1C ??0224:           
			      C             AssertByteCeEq 0
 1B1D  E4 40		     1C            in    al, 40h
 1B1F  3C 00		     1C            cmp   al, 0
 1B21  74 03		     1C            jz    ??0225
 1B23  33 C0		     1C            xor   ax, ax
 1B25  C3		     1C            ret
 1B26			     1C ??0225:
 1B26  E8 E4E1		      C             call  SetClkHi
			      C             AssertOutLow
 1B29  E4 00		     1C            in    al, 0
 1B2B  0A C0		     1C            or    al, al
 1B2D  74 03		     1C            jz    ??0226
 1B2F  33 C0		     1C            xor   ax, ax
 1B31  C3		     1C            ret
 1B32			     1C ??0226:           
 1B32  E8 E4D0		      C             call  SetGateLow
			      C             AssertOutLow
 1B35  E4 00		     1C            in    al, 0
 1B37  0A C0		     1C            or    al, al
 1B39  74 03		     1C            jz    ??0227
 1B3B  33 C0		     1C            xor   ax, ax
 1B3D  C3		     1C            ret
 1B3E			     1C ??0227:           
 1B3E  E8 E4BF		      C             call  SetGateHi
			      C             AssertOutLow
 1B41  E4 00		     1C            in    al, 0
 1B43  0A C0		     1C            or    al, al
 1B45  74 03		     1C            jz    ??0228
 1B47  33 C0		     1C            xor   ax, ax
 1B49  C3		     1C            ret
 1B4A			     1C ??0228:           
 1B4A  E8 E4C2		      C             call  SetClkLow ; ce = 0ffffh
			      C             AssertOutHi
 1B4D  E4 00		     1C            in    al, 0
 1B4F  0A C0		     1C            or    al, al
 1B51  75 03		     1C            jnz   ??0229
 1B53  33 C0		     1C            xor   ax, ax
 1B55  C3		     1C            ret
 1B56			     1C ??0229:
			      C             AssertByteCeEq 0ffh
 1B56  E4 40		     1C            in    al, 40h
 1B58  3C FF		     1C            cmp   al, 0ffh
 1B5A  74 03		     1C            jz    ??022A
 1B5C  33 C0		     1C            xor   ax, ax
 1B5E  C3		     1C            ret
 1B5F			     1C ??022A:
 1B5F  E8 E4A8		      C             call  SetClkHi
			      C             AssertOutHi
 1B62  E4 00		     1C            in    al, 0
 1B64  0A C0		     1C            or    al, al
 1B66  75 03		     1C            jnz   ??022B
 1B68  33 C0		     1C            xor   ax, ax
 1B6A  C3		     1C            ret
 1B6B			     1C ??022B:
 1B6B  E8 E4A1		      C             call  SetClkLow ; ce = cr = 3
			      C             AssertOutHi
 1B6E  E4 00		     1C            in    al, 0
 1B70  0A C0		     1C            or    al, al
 1B72  75 03		     1C            jnz   ??022C
 1B74  33 C0		     1C            xor   ax, ax
 1B76  C3		     1C            ret
 1B77			     1C ??022C:
			      C             AssertByteCeEq 3
 1B77  E4 40		     1C            in    al, 40h
 1B79  3C 03		     1C            cmp   al, 3
 1B7B  74 03		     1C            jz    ??022D
 1B7D  33 C0		     1C            xor   ax, ax
 1B7F  C3		     1C            ret
 1B80			     1C ??022D:
			      C 
 1B80  B8 0001		      C             mov   ax, 1
 1B83  C3		      C             ret
 1B84			      C Mode5_Datasheet1_Gate_High ENDP
			      C 
 1B84			      C Mode5_Datasheet2_Gate_Low PROC NEAR
 1B84  E8 E47E		      C             call  SetGateLow
			      C 
 1B87  E8 E480		      C             call  SetClkHi
 1B8A  B0 1A		      C             mov   al, 1ah
 1B8C  E8 E48F		      C             call  WriteCw
			      C             AssertOutHi
 1B8F  E4 00		     1C            in    al, 0
 1B91  0A C0		     1C            or    al, al
 1B93  75 03		     1C            jnz   ??022E
 1B95  33 C0		     1C            xor   ax, ax
 1B97  C3		     1C            ret
 1B98			     1C ??022E:
 1B98  E8 E474		      C             call  SetClkLow
			      C             AssertOutHi
 1B9B  E4 00		     1C            in    al, 0
 1B9D  0A C0		     1C            or    al, al
 1B9F  75 03		     1C            jnz   ??022F
 1BA1  33 C0		     1C            xor   ax, ax
 1BA3  C3		     1C            ret
 1BA4			     1C ??022F:
 1BA4  E8 E463		      C             call  SetClkHi
			      C             AssertOutHi
 1BA7  E4 00		     1C            in    al, 0
 1BA9  0A C0		     1C            or    al, al
 1BAB  75 03		     1C            jnz   ??0230
 1BAD  33 C0		     1C            xor   ax, ax
 1BAF  C3		     1C            ret
 1BB0			     1C ??0230:
 1BB0  E8 E45C		      C             call  SetClkLow
			      C             AssertOutHi
 1BB3  E4 00		     1C            in    al, 0
 1BB5  0A C0		     1C            or    al, al
 1BB7  75 03		     1C            jnz   ??0231
 1BB9  33 C0		     1C            xor   ax, ax
 1BBB  C3		     1C            ret
 1BBC			     1C ??0231:
 1BBC  B0 03		      C             mov   al, 3
 1BBE  E8 E460		      C             call  WriteCountByte
			      C             AssertOutHi
 1BC1  E4 00		     1C            in    al, 0
 1BC3  0A C0		     1C            or    al, al
 1BC5  75 03		     1C            jnz   ??0232
 1BC7  33 C0		     1C            xor   ax, ax
 1BC9  C3		     1C            ret
 1BCA			     1C ??0232:
 1BCA  E8 E43D		      C             call  SetClkHi
			      C             AssertOutHi
 1BCD  E4 00		     1C            in    al, 0
 1BCF  0A C0		     1C            or    al, al
 1BD1  75 03		     1C            jnz   ??0233
 1BD3  33 C0		     1C            xor   ax, ax
 1BD5  C3		     1C            ret
 1BD6			     1C ??0233:
 1BD6  E8 E436		      C             call  SetClkLow
			      C             AssertOutHi
 1BD9  E4 00		     1C            in    al, 0
 1BDB  0A C0		     1C            or    al, al
 1BDD  75 03		     1C            jnz   ??0234
 1BDF  33 C0		     1C            xor   ax, ax
 1BE1  C3		     1C            ret
 1BE2			     1C ??0234:
 1BE2  E8 E425		      C             call  SetClkHi
			      C             AssertOutHi
 1BE5  E4 00		     1C            in    al, 0
 1BE7  0A C0		     1C            or    al, al
 1BE9  75 03		     1C            jnz   ??0235
 1BEB  33 C0		     1C            xor   ax, ax
 1BED  C3		     1C            ret
 1BEE			     1C ??0235:
 1BEE  E8 E41E		      C             call  SetClkLow
			      C             AssertOutHi
 1BF1  E4 00		     1C            in    al, 0
 1BF3  0A C0		     1C            or    al, al
 1BF5  75 03		     1C            jnz   ??0236
 1BF7  33 C0		     1C            xor   ax, ax
 1BF9  C3		     1C            ret
 1BFA			     1C ??0236:
 1BFA  E8 E403		      C             call  SetGateHi
			      C             AssertOutHi
 1BFD  E4 00		     1C            in    al, 0
 1BFF  0A C0		     1C            or    al, al
 1C01  75 03		     1C            jnz   ??0237
 1C03  33 C0		     1C            xor   ax, ax
 1C05  C3		     1C            ret
 1C06			     1C ??0237:
 1C06  E8 E3FC		      C             call  SetGateLow
			      C             AssertOutHi
 1C09  E4 00		     1C            in    al, 0
 1C0B  0A C0		     1C            or    al, al
 1C0D  75 03		     1C            jnz   ??0238
 1C0F  33 C0		     1C            xor   ax, ax
 1C11  C3		     1C            ret
 1C12			     1C ??0238:
 1C12  E8 E3F5		      C             call  SetClkHi
			      C             AssertOutHi
 1C15  E4 00		     1C            in    al, 0
 1C17  0A C0		     1C            or    al, al
 1C19  75 03		     1C            jnz   ??0239
 1C1B  33 C0		     1C            xor   ax, ax
 1C1D  C3		     1C            ret
 1C1E			     1C ??0239:
 1C1E  E8 E3EE		      C             call  SetClkLow ; ce = cr = 3
			      C             AssertOutHi
 1C21  E4 00		     1C            in    al, 0
 1C23  0A C0		     1C            or    al, al
 1C25  75 03		     1C            jnz   ??023A
 1C27  33 C0		     1C            xor   ax, ax
 1C29  C3		     1C            ret
 1C2A			     1C ??023A:
			      C             AssertByteCeEq 3
 1C2A  E4 40		     1C            in    al, 40h
 1C2C  3C 03		     1C            cmp   al, 3
 1C2E  74 03		     1C            jz    ??023B
 1C30  33 C0		     1C            xor   ax, ax
 1C32  C3		     1C            ret
 1C33			     1C ??023B:
 1C33  E8 E3D4		      C             call  SetClkHi
			      C             AssertOutHi
 1C36  E4 00		     1C            in    al, 0
 1C38  0A C0		     1C            or    al, al
 1C3A  75 03		     1C            jnz   ??023C
 1C3C  33 C0		     1C            xor   ax, ax
 1C3E  C3		     1C            ret
 1C3F			     1C ??023C:
 1C3F  E8 E3BE		      C             call  SetGateHi
			      C             AssertOutHi
 1C42  E4 00		     1C            in    al, 0
 1C44  0A C0		     1C            or    al, al
 1C46  75 03		     1C            jnz   ??023D
 1C48  33 C0		     1C            xor   ax, ax
 1C4A  C3		     1C            ret
 1C4B			     1C ??023D:
 1C4B  E8 E3C1		      C             call  SetClkLow ; ce = 2
			      C             AssertOutHi
 1C4E  E4 00		     1C            in    al, 0
 1C50  0A C0		     1C            or    al, al
 1C52  75 03		     1C            jnz   ??023E
 1C54  33 C0		     1C            xor   ax, ax
 1C56  C3		     1C            ret
 1C57			     1C ??023E:
			      C             AssertByteCeEq 2
 1C57  E4 40		     1C            in    al, 40h
 1C59  3C 02		     1C            cmp   al, 2
 1C5B  74 03		     1C            jz    ??023F
 1C5D  33 C0		     1C            xor   ax, ax
 1C5F  C3		     1C            ret
 1C60			     1C ??023F:
 1C60  E8 E3A2		      C             call  SetGateLow
			      C             AssertOutHi
 1C63  E4 00		     1C            in    al, 0
 1C65  0A C0		     1C            or    al, al
 1C67  75 03		     1C            jnz   ??0240
 1C69  33 C0		     1C            xor   ax, ax
 1C6B  C3		     1C            ret
 1C6C			     1C ??0240:
 1C6C  E8 E39B		      C             call  SetClkHi
			      C             AssertOutHi
 1C6F  E4 00		     1C            in    al, 0
 1C71  0A C0		     1C            or    al, al
 1C73  75 03		     1C            jnz   ??0241
 1C75  33 C0		     1C            xor   ax, ax
 1C77  C3		     1C            ret
 1C78			     1C ??0241:
 1C78  E8 E394		      C             call  SetClkLow ; ce = cr = 3
			      C             AssertOutHi
 1C7B  E4 00		     1C            in    al, 0
 1C7D  0A C0		     1C            or    al, al
 1C7F  75 03		     1C            jnz   ??0242
 1C81  33 C0		     1C            xor   ax, ax
 1C83  C3		     1C            ret
 1C84			     1C ??0242:
			      C             AssertByteCeEq 3
 1C84  E4 40		     1C            in    al, 40h
 1C86  3C 03		     1C            cmp   al, 3
 1C88  74 03		     1C            jz    ??0243
 1C8A  33 C0		     1C            xor   ax, ax
 1C8C  C3		     1C            ret
 1C8D			     1C ??0243:
 1C8D  E8 E37A		      C             call  SetClkHi
			      C             AssertOutHi
 1C90  E4 00		     1C            in    al, 0
 1C92  0A C0		     1C            or    al, al
 1C94  75 03		     1C            jnz   ??0244
 1C96  33 C0		     1C            xor   ax, ax
 1C98  C3		     1C            ret
 1C99			     1C ??0244:
 1C99  E8 E373		      C             call  SetClkLow ; ce = 2
			      C             AssertOutHi
 1C9C  E4 00		     1C            in    al, 0
 1C9E  0A C0		     1C            or    al, al
 1CA0  75 03		     1C            jnz   ??0245
 1CA2  33 C0		     1C            xor   ax, ax
 1CA4  C3		     1C            ret
 1CA5			     1C ??0245:
			      C             AssertByteCeEq 2
 1CA5  E4 40		     1C            in    al, 40h
 1CA7  3C 02		     1C            cmp   al, 2
 1CA9  74 03		     1C            jz    ??0246
 1CAB  33 C0		     1C            xor   ax, ax
 1CAD  C3		     1C            ret
 1CAE			     1C ??0246:
 1CAE  E8 E359		      C             call  SetClkHi
			      C             AssertOutHi
 1CB1  E4 00		     1C            in    al, 0
 1CB3  0A C0		     1C            or    al, al
 1CB5  75 03		     1C            jnz   ??0247
 1CB7  33 C0		     1C            xor   ax, ax
 1CB9  C3		     1C            ret
 1CBA			     1C ??0247:
 1CBA  E8 E352		      C             call  SetClkLow ; ce = 1
			      C             AssertOutHi
 1CBD  E4 00		     1C            in    al, 0
 1CBF  0A C0		     1C            or    al, al
 1CC1  75 03		     1C            jnz   ??0248
 1CC3  33 C0		     1C            xor   ax, ax
 1CC5  C3		     1C            ret
 1CC6			     1C ??0248:
			      C             AssertByteCeEq 1
 1CC6  E4 40		     1C            in    al, 40h
 1CC8  3C 01		     1C            cmp   al, 1
 1CCA  74 03		     1C            jz    ??0249
 1CCC  33 C0		     1C            xor   ax, ax
 1CCE  C3		     1C            ret
 1CCF			     1C ??0249:
 1CCF  E8 E338		      C             call  SetClkHi
			      C             AssertOutHi
 1CD2  E4 00		     1C            in    al, 0
 1CD4  0A C0		     1C            or    al, al
 1CD6  75 03		     1C            jnz   ??024A
 1CD8  33 C0		     1C            xor   ax, ax
 1CDA  C3		     1C            ret
 1CDB			     1C ??024A:
 1CDB  E8 E331		      C             call  SetClkLow ; ce = 0
			      C             AssertOutLow
 1CDE  E4 00		     1C            in    al, 0
 1CE0  0A C0		     1C            or    al, al
 1CE2  74 03		     1C            jz    ??024B
 1CE4  33 C0		     1C            xor   ax, ax
 1CE6  C3		     1C            ret
 1CE7			     1C ??024B:           
			      C             AssertByteCeEq 0
 1CE7  E4 40		     1C            in    al, 40h
 1CE9  3C 00		     1C            cmp   al, 0
 1CEB  74 03		     1C            jz    ??024C
 1CED  33 C0		     1C            xor   ax, ax
 1CEF  C3		     1C            ret
 1CF0			     1C ??024C:
 1CF0  E8 E317		      C             call  SetClkHi
			      C             AssertOutLow
 1CF3  E4 00		     1C            in    al, 0
 1CF5  0A C0		     1C            or    al, al
 1CF7  74 03		     1C            jz    ??024D
 1CF9  33 C0		     1C            xor   ax, ax
 1CFB  C3		     1C            ret
 1CFC			     1C ??024D:           
 1CFC  E8 E310		      C             call  SetClkLow ; ce = 0ffffh
			      C             AssertOutHi
 1CFF  E4 00		     1C            in    al, 0
 1D01  0A C0		     1C            or    al, al
 1D03  75 03		     1C            jnz   ??024E
 1D05  33 C0		     1C            xor   ax, ax
 1D07  C3		     1C            ret
 1D08			     1C ??024E:
			      C             AssertByteCeEq 0ffh
 1D08  E4 40		     1C            in    al, 40h
 1D0A  3C FF		     1C            cmp   al, 0ffh
 1D0C  74 03		     1C            jz    ??024F
 1D0E  33 C0		     1C            xor   ax, ax
 1D10  C3		     1C            ret
 1D11			     1C ??024F:
			      C 
 1D11  B8 0001		      C             mov   ax, 1
 1D14  C3		      C             ret
 1D15			      C Mode5_Datasheet2_Gate_Low ENDP
			      C 
 1D15			      C Mode5_Datasheet2_Gate_High PROC NEAR
 1D15  E8 E2E8		      C             call  SetGateHi
			      C 
 1D18  E8 E2EF		      C             call  SetClkHi
 1D1B  B0 1A		      C             mov   al, 1ah
 1D1D  E8 E2FE		      C             call  WriteCw
			      C             AssertOutHi
 1D20  E4 00		     1C            in    al, 0
 1D22  0A C0		     1C            or    al, al
 1D24  75 03		     1C            jnz   ??0250
 1D26  33 C0		     1C            xor   ax, ax
 1D28  C3		     1C            ret
 1D29			     1C ??0250:
 1D29  E8 E2E3		      C             call  SetClkLow
			      C             AssertOutHi
 1D2C  E4 00		     1C            in    al, 0
 1D2E  0A C0		     1C            or    al, al
 1D30  75 03		     1C            jnz   ??0251
 1D32  33 C0		     1C            xor   ax, ax
 1D34  C3		     1C            ret
 1D35			     1C ??0251:
 1D35  E8 E2D2		      C             call  SetClkHi
			      C             AssertOutHi
 1D38  E4 00		     1C            in    al, 0
 1D3A  0A C0		     1C            or    al, al
 1D3C  75 03		     1C            jnz   ??0252
 1D3E  33 C0		     1C            xor   ax, ax
 1D40  C3		     1C            ret
 1D41			     1C ??0252:
 1D41  E8 E2CB		      C             call  SetClkLow
			      C             AssertOutHi
 1D44  E4 00		     1C            in    al, 0
 1D46  0A C0		     1C            or    al, al
 1D48  75 03		     1C            jnz   ??0253
 1D4A  33 C0		     1C            xor   ax, ax
 1D4C  C3		     1C            ret
 1D4D			     1C ??0253:
 1D4D  B0 03		      C             mov   al, 3
 1D4F  E8 E2CF		      C             call  WriteCountByte
			      C             AssertOutHi
 1D52  E4 00		     1C            in    al, 0
 1D54  0A C0		     1C            or    al, al
 1D56  75 03		     1C            jnz   ??0254
 1D58  33 C0		     1C            xor   ax, ax
 1D5A  C3		     1C            ret
 1D5B			     1C ??0254:
 1D5B  E8 E2AC		      C             call  SetClkHi
			      C             AssertOutHi
 1D5E  E4 00		     1C            in    al, 0
 1D60  0A C0		     1C            or    al, al
 1D62  75 03		     1C            jnz   ??0255
 1D64  33 C0		     1C            xor   ax, ax
 1D66  C3		     1C            ret
 1D67			     1C ??0255:
 1D67  E8 E2A5		      C             call  SetClkLow
			      C             AssertOutHi
 1D6A  E4 00		     1C            in    al, 0
 1D6C  0A C0		     1C            or    al, al
 1D6E  75 03		     1C            jnz   ??0256
 1D70  33 C0		     1C            xor   ax, ax
 1D72  C3		     1C            ret
 1D73			     1C ??0256:
 1D73  E8 E294		      C             call  SetClkHi
			      C             AssertOutHi
 1D76  E4 00		     1C            in    al, 0
 1D78  0A C0		     1C            or    al, al
 1D7A  75 03		     1C            jnz   ??0257
 1D7C  33 C0		     1C            xor   ax, ax
 1D7E  C3		     1C            ret
 1D7F			     1C ??0257:
 1D7F  E8 E28D		      C             call  SetClkLow
			      C             AssertOutHi
 1D82  E4 00		     1C            in    al, 0
 1D84  0A C0		     1C            or    al, al
 1D86  75 03		     1C            jnz   ??0258
 1D88  33 C0		     1C            xor   ax, ax
 1D8A  C3		     1C            ret
 1D8B			     1C ??0258:
 1D8B  E8 E277		      C             call  SetGateLow
			      C             AssertOutHi
 1D8E  E4 00		     1C            in    al, 0
 1D90  0A C0		     1C            or    al, al
 1D92  75 03		     1C            jnz   ??0259
 1D94  33 C0		     1C            xor   ax, ax
 1D96  C3		     1C            ret
 1D97			     1C ??0259:
 1D97  E8 E266		      C             call  SetGateHi
			      C             AssertOutHi
 1D9A  E4 00		     1C            in    al, 0
 1D9C  0A C0		     1C            or    al, al
 1D9E  75 03		     1C            jnz   ??025A
 1DA0  33 C0		     1C            xor   ax, ax
 1DA2  C3		     1C            ret
 1DA3			     1C ??025A:
 1DA3  E8 E264		      C             call  SetClkHi
			      C             AssertOutHi
 1DA6  E4 00		     1C            in    al, 0
 1DA8  0A C0		     1C            or    al, al
 1DAA  75 03		     1C            jnz   ??025B
 1DAC  33 C0		     1C            xor   ax, ax
 1DAE  C3		     1C            ret
 1DAF			     1C ??025B:
 1DAF  E8 E25D		      C             call  SetClkLow ; ce = cr = 3
			      C             AssertOutHi
 1DB2  E4 00		     1C            in    al, 0
 1DB4  0A C0		     1C            or    al, al
 1DB6  75 03		     1C            jnz   ??025C
 1DB8  33 C0		     1C            xor   ax, ax
 1DBA  C3		     1C            ret
 1DBB			     1C ??025C:
			      C             AssertByteCeEq 3
 1DBB  E4 40		     1C            in    al, 40h
 1DBD  3C 03		     1C            cmp   al, 3
 1DBF  74 03		     1C            jz    ??025D
 1DC1  33 C0		     1C            xor   ax, ax
 1DC3  C3		     1C            ret
 1DC4			     1C ??025D:
 1DC4  E8 E243		      C             call  SetClkHi
			      C             AssertOutHi
 1DC7  E4 00		     1C            in    al, 0
 1DC9  0A C0		     1C            or    al, al
 1DCB  75 03		     1C            jnz   ??025E
 1DCD  33 C0		     1C            xor   ax, ax
 1DCF  C3		     1C            ret
 1DD0			     1C ??025E:
 1DD0  E8 E232		      C             call  SetGateLow
			      C             AssertOutHi
 1DD3  E4 00		     1C            in    al, 0
 1DD5  0A C0		     1C            or    al, al
 1DD7  75 03		     1C            jnz   ??025F
 1DD9  33 C0		     1C            xor   ax, ax
 1DDB  C3		     1C            ret
 1DDC			     1C ??025F:
 1DDC  E8 E221		      C             call  SetGateHi
			      C             AssertOutHi
 1DDF  E4 00		     1C            in    al, 0
 1DE1  0A C0		     1C            or    al, al
 1DE3  75 03		     1C            jnz   ??0260
 1DE5  33 C0		     1C            xor   ax, ax
 1DE7  C3		     1C            ret
 1DE8			     1C ??0260:
 1DE8  E8 E224		      C             call  SetClkLow ; ce = 2
			      C             AssertOutHi
 1DEB  E4 00		     1C            in    al, 0
 1DED  0A C0		     1C            or    al, al
 1DEF  75 03		     1C            jnz   ??0261
 1DF1  33 C0		     1C            xor   ax, ax
 1DF3  C3		     1C            ret
 1DF4			     1C ??0261:
			      C             AssertByteCeEq 2
 1DF4  E4 40		     1C            in    al, 40h
 1DF6  3C 02		     1C            cmp   al, 2
 1DF8  74 03		     1C            jz    ??0262
 1DFA  33 C0		     1C            xor   ax, ax
 1DFC  C3		     1C            ret
 1DFD			     1C ??0262:
 1DFD  E8 E20A		      C             call  SetClkHi
			      C             AssertOutHi
 1E00  E4 00		     1C            in    al, 0
 1E02  0A C0		     1C            or    al, al
 1E04  75 03		     1C            jnz   ??0263
 1E06  33 C0		     1C            xor   ax, ax
 1E08  C3		     1C            ret
 1E09			     1C ??0263:
 1E09  E8 E203		      C             call  SetClkLow ; ce = cr = 3
			      C             AssertOutHi
 1E0C  E4 00		     1C            in    al, 0
 1E0E  0A C0		     1C            or    al, al
 1E10  75 03		     1C            jnz   ??0264
 1E12  33 C0		     1C            xor   ax, ax
 1E14  C3		     1C            ret
 1E15			     1C ??0264:
			      C             AssertByteCeEq 3
 1E15  E4 40		     1C            in    al, 40h
 1E17  3C 03		     1C            cmp   al, 3
 1E19  74 03		     1C            jz    ??0265
 1E1B  33 C0		     1C            xor   ax, ax
 1E1D  C3		     1C            ret
 1E1E			     1C ??0265:
 1E1E  E8 E1E9		      C             call  SetClkHi
			      C             AssertOutHi
 1E21  E4 00		     1C            in    al, 0
 1E23  0A C0		     1C            or    al, al
 1E25  75 03		     1C            jnz   ??0266
 1E27  33 C0		     1C            xor   ax, ax
 1E29  C3		     1C            ret
 1E2A			     1C ??0266:
 1E2A  E8 E1E2		      C             call  SetClkLow ; ce = 2
			      C             AssertOutHi
 1E2D  E4 00		     1C            in    al, 0
 1E2F  0A C0		     1C            or    al, al
 1E31  75 03		     1C            jnz   ??0267
 1E33  33 C0		     1C            xor   ax, ax
 1E35  C3		     1C            ret
 1E36			     1C ??0267:
			      C             AssertByteCeEq 2
 1E36  E4 40		     1C            in    al, 40h
 1E38  3C 02		     1C            cmp   al, 2
 1E3A  74 03		     1C            jz    ??0268
 1E3C  33 C0		     1C            xor   ax, ax
 1E3E  C3		     1C            ret
 1E3F			     1C ??0268:
 1E3F  E8 E1C8		      C             call  SetClkHi
			      C             AssertOutHi
 1E42  E4 00		     1C            in    al, 0
 1E44  0A C0		     1C            or    al, al
 1E46  75 03		     1C            jnz   ??0269
 1E48  33 C0		     1C            xor   ax, ax
 1E4A  C3		     1C            ret
 1E4B			     1C ??0269:
 1E4B  E8 E1C1		      C             call  SetClkLow ; ce = 1
			      C             AssertOutHi
 1E4E  E4 00		     1C            in    al, 0
 1E50  0A C0		     1C            or    al, al
 1E52  75 03		     1C            jnz   ??026A
 1E54  33 C0		     1C            xor   ax, ax
 1E56  C3		     1C            ret
 1E57			     1C ??026A:
			      C             AssertByteCeEq 1
 1E57  E4 40		     1C            in    al, 40h
 1E59  3C 01		     1C            cmp   al, 1
 1E5B  74 03		     1C            jz    ??026B
 1E5D  33 C0		     1C            xor   ax, ax
 1E5F  C3		     1C            ret
 1E60			     1C ??026B:
 1E60  E8 E1A7		      C             call  SetClkHi
			      C             AssertOutHi
 1E63  E4 00		     1C            in    al, 0
 1E65  0A C0		     1C            or    al, al
 1E67  75 03		     1C            jnz   ??026C
 1E69  33 C0		     1C            xor   ax, ax
 1E6B  C3		     1C            ret
 1E6C			     1C ??026C:
 1E6C  E8 E1A0		      C             call  SetClkLow ; ce = 0
			      C             AssertOutLow
 1E6F  E4 00		     1C            in    al, 0
 1E71  0A C0		     1C            or    al, al
 1E73  74 03		     1C            jz    ??026D
 1E75  33 C0		     1C            xor   ax, ax
 1E77  C3		     1C            ret
 1E78			     1C ??026D:           
			      C             AssertByteCeEq 0
 1E78  E4 40		     1C            in    al, 40h
 1E7A  3C 00		     1C            cmp   al, 0
 1E7C  74 03		     1C            jz    ??026E
 1E7E  33 C0		     1C            xor   ax, ax
 1E80  C3		     1C            ret
 1E81			     1C ??026E:
 1E81  E8 E186		      C             call  SetClkHi
			      C             AssertOutLow
 1E84  E4 00		     1C            in    al, 0
 1E86  0A C0		     1C            or    al, al
 1E88  74 03		     1C            jz    ??026F
 1E8A  33 C0		     1C            xor   ax, ax
 1E8C  C3		     1C            ret
 1E8D			     1C ??026F:           
 1E8D  E8 E17F		      C             call  SetClkLow ; ce = 0ffffh
			      C             AssertOutHi
 1E90  E4 00		     1C            in    al, 0
 1E92  0A C0		     1C            or    al, al
 1E94  75 03		     1C            jnz   ??0270
 1E96  33 C0		     1C            xor   ax, ax
 1E98  C3		     1C            ret
 1E99			     1C ??0270:
			      C             AssertByteCeEq 0ffh
 1E99  E4 40		     1C            in    al, 40h
 1E9B  3C FF		     1C            cmp   al, 0ffh
 1E9D  74 03		     1C            jz    ??0271
 1E9F  33 C0		     1C            xor   ax, ax
 1EA1  C3		     1C            ret
 1EA2			     1C ??0271:
			      C 
 1EA2  B8 0001		      C             mov   ax, 1
 1EA5  C3		      C             ret
 1EA6			      C Mode5_Datasheet2_Gate_High ENDP
			      C 
 1EA6			      C Mode5_Datasheet3_Gate_Low PROC NEAR
 1EA6  E8 E15C		      C             call  SetGateLow
			      C 
 1EA9  E8 E15E		      C             call  SetClkHi
 1EAC  B0 1A		      C             mov   al, 1ah
 1EAE  E8 E16D		      C             call  WriteCw
			      C             AssertOutHi
 1EB1  E4 00		     1C            in    al, 0
 1EB3  0A C0		     1C            or    al, al
 1EB5  75 03		     1C            jnz   ??0272
 1EB7  33 C0		     1C            xor   ax, ax
 1EB9  C3		     1C            ret
 1EBA			     1C ??0272:
 1EBA  E8 E152		      C             call  SetClkLow
			      C             AssertOutHi
 1EBD  E4 00		     1C            in    al, 0
 1EBF  0A C0		     1C            or    al, al
 1EC1  75 03		     1C            jnz   ??0273
 1EC3  33 C0		     1C            xor   ax, ax
 1EC5  C3		     1C            ret
 1EC6			     1C ??0273:
 1EC6  E8 E141		      C             call  SetClkHi
			      C             AssertOutHi
 1EC9  E4 00		     1C            in    al, 0
 1ECB  0A C0		     1C            or    al, al
 1ECD  75 03		     1C            jnz   ??0274
 1ECF  33 C0		     1C            xor   ax, ax
 1ED1  C3		     1C            ret
 1ED2			     1C ??0274:
 1ED2  E8 E13A		      C             call  SetClkLow
			      C             AssertOutHi
 1ED5  E4 00		     1C            in    al, 0
 1ED7  0A C0		     1C            or    al, al
 1ED9  75 03		     1C            jnz   ??0275
 1EDB  33 C0		     1C            xor   ax, ax
 1EDD  C3		     1C            ret
 1EDE			     1C ??0275:
 1EDE  B0 03		      C             mov   al, 3
 1EE0  E8 E13E		      C             call  WriteCountByte
			      C             AssertOutHi
 1EE3  E4 00		     1C            in    al, 0
 1EE5  0A C0		     1C            or    al, al
 1EE7  75 03		     1C            jnz   ??0276
 1EE9  33 C0		     1C            xor   ax, ax
 1EEB  C3		     1C            ret
 1EEC			     1C ??0276:
 1EEC  E8 E11B		      C             call  SetClkHi
			      C             AssertOutHi
 1EEF  E4 00		     1C            in    al, 0
 1EF1  0A C0		     1C            or    al, al
 1EF3  75 03		     1C            jnz   ??0277
 1EF5  33 C0		     1C            xor   ax, ax
 1EF7  C3		     1C            ret
 1EF8			     1C ??0277:
 1EF8  E8 E114		      C             call  SetClkLow
			      C             AssertOutHi
 1EFB  E4 00		     1C            in    al, 0
 1EFD  0A C0		     1C            or    al, al
 1EFF  75 03		     1C            jnz   ??0278
 1F01  33 C0		     1C            xor   ax, ax
 1F03  C3		     1C            ret
 1F04			     1C ??0278:
 1F04  E8 E103		      C             call  SetClkHi
			      C             AssertOutHi
 1F07  E4 00		     1C            in    al, 0
 1F09  0A C0		     1C            or    al, al
 1F0B  75 03		     1C            jnz   ??0279
 1F0D  33 C0		     1C            xor   ax, ax
 1F0F  C3		     1C            ret
 1F10			     1C ??0279:
 1F10  E8 E0FC		      C             call  SetClkLow
			      C             AssertOutHi
 1F13  E4 00		     1C            in    al, 0
 1F15  0A C0		     1C            or    al, al
 1F17  75 03		     1C            jnz   ??027A
 1F19  33 C0		     1C            xor   ax, ax
 1F1B  C3		     1C            ret
 1F1C			     1C ??027A:
 1F1C  E8 E0E1		      C             call  SetGateHi
			      C             AssertOutHi
 1F1F  E4 00		     1C            in    al, 0
 1F21  0A C0		     1C            or    al, al
 1F23  75 03		     1C            jnz   ??027B
 1F25  33 C0		     1C            xor   ax, ax
 1F27  C3		     1C            ret
 1F28			     1C ??027B:
 1F28  E8 E0DA		      C             call  SetGateLow
			      C             AssertOutHi
 1F2B  E4 00		     1C            in    al, 0
 1F2D  0A C0		     1C            or    al, al
 1F2F  75 03		     1C            jnz   ??027C
 1F31  33 C0		     1C            xor   ax, ax
 1F33  C3		     1C            ret
 1F34			     1C ??027C:
 1F34  E8 E0D3		      C             call  SetClkHi
			      C             AssertOutHi
 1F37  E4 00		     1C            in    al, 0
 1F39  0A C0		     1C            or    al, al
 1F3B  75 03		     1C            jnz   ??027D
 1F3D  33 C0		     1C            xor   ax, ax
 1F3F  C3		     1C            ret
 1F40			     1C ??027D:
 1F40  E8 E0CC		      C             call  SetClkLow ; ce = cr = 3
			      C             AssertOutHi
 1F43  E4 00		     1C            in    al, 0
 1F45  0A C0		     1C            or    al, al
 1F47  75 03		     1C            jnz   ??027E
 1F49  33 C0		     1C            xor   ax, ax
 1F4B  C3		     1C            ret
 1F4C			     1C ??027E:
			      C             AssertByteCeEq 3
 1F4C  E4 40		     1C            in    al, 40h
 1F4E  3C 03		     1C            cmp   al, 3
 1F50  74 03		     1C            jz    ??027F
 1F52  33 C0		     1C            xor   ax, ax
 1F54  C3		     1C            ret
 1F55			     1C ??027F:
 1F55  E8 E0B2		      C             call  SetClkHi
			      C             AssertOutHi
 1F58  E4 00		     1C            in    al, 0
 1F5A  0A C0		     1C            or    al, al
 1F5C  75 03		     1C            jnz   ??0280
 1F5E  33 C0		     1C            xor   ax, ax
 1F60  C3		     1C            ret
 1F61			     1C ??0280:
 1F61  E8 E0AB		      C             call  SetClkLow ; ce = 2
			      C             AssertOutHi
 1F64  E4 00		     1C            in    al, 0
 1F66  0A C0		     1C            or    al, al
 1F68  75 03		     1C            jnz   ??0281
 1F6A  33 C0		     1C            xor   ax, ax
 1F6C  C3		     1C            ret
 1F6D			     1C ??0281:
			      C             AssertByteCeEq 2
 1F6D  E4 40		     1C            in    al, 40h
 1F6F  3C 02		     1C            cmp   al, 2
 1F71  74 03		     1C            jz    ??0282
 1F73  33 C0		     1C            xor   ax, ax
 1F75  C3		     1C            ret
 1F76			     1C ??0282:
 1F76  B0 05		      C             mov   al, 5
 1F78  E8 E0A6		      C             call  WriteCountByte
			      C             AssertOutHi
 1F7B  E4 00		     1C            in    al, 0
 1F7D  0A C0		     1C            or    al, al
 1F7F  75 03		     1C            jnz   ??0283
 1F81  33 C0		     1C            xor   ax, ax
 1F83  C3		     1C            ret
 1F84			     1C ??0283:
 1F84  E8 E083		      C             call  SetClkHi
			      C             AssertOutHi
 1F87  E4 00		     1C            in    al, 0
 1F89  0A C0		     1C            or    al, al
 1F8B  75 03		     1C            jnz   ??0284
 1F8D  33 C0		     1C            xor   ax, ax
 1F8F  C3		     1C            ret
 1F90			     1C ??0284:
 1F90  E8 E07C		      C             call  SetClkLow ; ce = 1
			      C             AssertOutHi
 1F93  E4 00		     1C            in    al, 0
 1F95  0A C0		     1C            or    al, al
 1F97  75 03		     1C            jnz   ??0285
 1F99  33 C0		     1C            xor   ax, ax
 1F9B  C3		     1C            ret
 1F9C			     1C ??0285:
			      C             AssertByteCeEq 1
 1F9C  E4 40		     1C            in    al, 40h
 1F9E  3C 01		     1C            cmp   al, 1
 1FA0  74 03		     1C            jz    ??0286
 1FA2  33 C0		     1C            xor   ax, ax
 1FA4  C3		     1C            ret
 1FA5			     1C ??0286:
 1FA5  E8 E062		      C             call  SetClkHi
			      C             AssertOutHi
 1FA8  E4 00		     1C            in    al, 0
 1FAA  0A C0		     1C            or    al, al
 1FAC  75 03		     1C            jnz   ??0287
 1FAE  33 C0		     1C            xor   ax, ax
 1FB0  C3		     1C            ret
 1FB1			     1C ??0287:
 1FB1  E8 E05B		      C             call  SetClkLow ; ce = 0
			      C             AssertOutLow
 1FB4  E4 00		     1C            in    al, 0
 1FB6  0A C0		     1C            or    al, al
 1FB8  74 03		     1C            jz    ??0288
 1FBA  33 C0		     1C            xor   ax, ax
 1FBC  C3		     1C            ret
 1FBD			     1C ??0288:           
			      C             AssertByteCeEq 0
 1FBD  E4 40		     1C            in    al, 40h
 1FBF  3C 00		     1C            cmp   al, 0
 1FC1  74 03		     1C            jz    ??0289
 1FC3  33 C0		     1C            xor   ax, ax
 1FC5  C3		     1C            ret
 1FC6			     1C ??0289:
 1FC6  E8 E041		      C             call  SetClkHi
			      C             AssertOutLow
 1FC9  E4 00		     1C            in    al, 0
 1FCB  0A C0		     1C            or    al, al
 1FCD  74 03		     1C            jz    ??028A
 1FCF  33 C0		     1C            xor   ax, ax
 1FD1  C3		     1C            ret
 1FD2			     1C ??028A:           
 1FD2  E8 E03A		      C             call  SetClkLow ; ce = 0ffffh
			      C             AssertOutHi
 1FD5  E4 00		     1C            in    al, 0
 1FD7  0A C0		     1C            or    al, al
 1FD9  75 03		     1C            jnz   ??028B
 1FDB  33 C0		     1C            xor   ax, ax
 1FDD  C3		     1C            ret
 1FDE			     1C ??028B:
			      C             AssertByteCeEq 0ffh
 1FDE  E4 40		     1C            in    al, 40h
 1FE0  3C FF		     1C            cmp   al, 0ffh
 1FE2  74 03		     1C            jz    ??028C
 1FE4  33 C0		     1C            xor   ax, ax
 1FE6  C3		     1C            ret
 1FE7			     1C ??028C:
 1FE7  E8 E020		      C             call  SetClkHi
			      C             AssertOutHi
 1FEA  E4 00		     1C            in    al, 0
 1FEC  0A C0		     1C            or    al, al
 1FEE  75 03		     1C            jnz   ??028D
 1FF0  33 C0		     1C            xor   ax, ax
 1FF2  C3		     1C            ret
 1FF3			     1C ??028D:
 1FF3  E8 E019		      C             call  SetClkLow ; ce = 0xfffe
			      C             AssertOutHi
 1FF6  E4 00		     1C            in    al, 0
 1FF8  0A C0		     1C            or    al, al
 1FFA  75 03		     1C            jnz   ??028E
 1FFC  33 C0		     1C            xor   ax, ax
 1FFE  C3		     1C            ret
 1FFF			     1C ??028E:
			      C             AssertByteCeEq 0feh
 1FFF  E4 40		     1C            in    al, 40h
 2001  3C FE		     1C            cmp   al, 0feh
 2003  74 03		     1C            jz    ??028F
 2005  33 C0		     1C            xor   ax, ax
 2007  C3		     1C            ret
 2008			     1C ??028F:
 2008  E8 DFF5		      C             call  SetGateHi
			      C             AssertOutHi
 200B  E4 00		     1C            in    al, 0
 200D  0A C0		     1C            or    al, al
 200F  75 03		     1C            jnz   ??0290
 2011  33 C0		     1C            xor   ax, ax
 2013  C3		     1C            ret
 2014			     1C ??0290:
 2014  E8 DFEE		      C             call  SetGateLow
			      C             AssertOutHi
 2017  E4 00		     1C            in    al, 0
 2019  0A C0		     1C            or    al, al
 201B  75 03		     1C            jnz   ??0291
 201D  33 C0		     1C            xor   ax, ax
 201F  C3		     1C            ret
 2020			     1C ??0291:
 2020  E8 DFE7		      C             call  SetClkHi
			      C             AssertOutHi
 2023  E4 00		     1C            in    al, 0
 2025  0A C0		     1C            or    al, al
 2027  75 03		     1C            jnz   ??0292
 2029  33 C0		     1C            xor   ax, ax
 202B  C3		     1C            ret
 202C			     1C ??0292:
 202C  E8 DFE0		      C             call  SetClkLow ; ce = cr = 5
			      C             AssertOutHi
 202F  E4 00		     1C            in    al, 0
 2031  0A C0		     1C            or    al, al
 2033  75 03		     1C            jnz   ??0293
 2035  33 C0		     1C            xor   ax, ax
 2037  C3		     1C            ret
 2038			     1C ??0293:
			      C             AssertByteCeEq 5
 2038  E4 40		     1C            in    al, 40h
 203A  3C 05		     1C            cmp   al, 5
 203C  74 03		     1C            jz    ??0294
 203E  33 C0		     1C            xor   ax, ax
 2040  C3		     1C            ret
 2041			     1C ??0294:
 2041  E8 DFC6		      C             call  SetClkHi
			      C             AssertOutHi
 2044  E4 00		     1C            in    al, 0
 2046  0A C0		     1C            or    al, al
 2048  75 03		     1C            jnz   ??0295
 204A  33 C0		     1C            xor   ax, ax
 204C  C3		     1C            ret
 204D			     1C ??0295:
 204D  E8 DFBF		      C             call  SetClkLow ; ce = 4
			      C             AssertOutHi
 2050  E4 00		     1C            in    al, 0
 2052  0A C0		     1C            or    al, al
 2054  75 03		     1C            jnz   ??0296
 2056  33 C0		     1C            xor   ax, ax
 2058  C3		     1C            ret
 2059			     1C ??0296:
			      C             AssertByteCeEq 4
 2059  E4 40		     1C            in    al, 40h
 205B  3C 04		     1C            cmp   al, 4
 205D  74 03		     1C            jz    ??0297
 205F  33 C0		     1C            xor   ax, ax
 2061  C3		     1C            ret
 2062			     1C ??0297:
			      C 
 2062  B8 0001		      C             mov   ax, 1
 2065  C3		      C             ret
 2066			      C Mode5_Datasheet3_Gate_Low ENDP
			      C 
 2066			      C Mode5_Datasheet3_Gate_High PROC NEAR
 2066  E8 DF97		      C             call  SetGateHi
			      C 
 2069  E8 DF9E		      C             call  SetClkHi
 206C  B0 1A		      C             mov   al, 1ah
 206E  E8 DFAD		      C             call  WriteCw
			      C             AssertOutHi
 2071  E4 00		     1C            in    al, 0
 2073  0A C0		     1C            or    al, al
 2075  75 03		     1C            jnz   ??0298
 2077  33 C0		     1C            xor   ax, ax
 2079  C3		     1C            ret
 207A			     1C ??0298:
 207A  E8 DF92		      C             call  SetClkLow
			      C             AssertOutHi
 207D  E4 00		     1C            in    al, 0
 207F  0A C0		     1C            or    al, al
 2081  75 03		     1C            jnz   ??0299
 2083  33 C0		     1C            xor   ax, ax
 2085  C3		     1C            ret
 2086			     1C ??0299:
 2086  E8 DF81		      C             call  SetClkHi
			      C             AssertOutHi
 2089  E4 00		     1C            in    al, 0
 208B  0A C0		     1C            or    al, al
 208D  75 03		     1C            jnz   ??029A
 208F  33 C0		     1C            xor   ax, ax
 2091  C3		     1C            ret
 2092			     1C ??029A:
 2092  E8 DF7A		      C             call  SetClkLow
			      C             AssertOutHi
 2095  E4 00		     1C            in    al, 0
 2097  0A C0		     1C            or    al, al
 2099  75 03		     1C            jnz   ??029B
 209B  33 C0		     1C            xor   ax, ax
 209D  C3		     1C            ret
 209E			     1C ??029B:
 209E  B0 03		      C             mov   al, 3
 20A0  E8 DF7E		      C             call  WriteCountByte
			      C             AssertOutHi
 20A3  E4 00		     1C            in    al, 0
 20A5  0A C0		     1C            or    al, al
 20A7  75 03		     1C            jnz   ??029C
 20A9  33 C0		     1C            xor   ax, ax
 20AB  C3		     1C            ret
 20AC			     1C ??029C:
 20AC  E8 DF5B		      C             call  SetClkHi
			      C             AssertOutHi
 20AF  E4 00		     1C            in    al, 0
 20B1  0A C0		     1C            or    al, al
 20B3  75 03		     1C            jnz   ??029D
 20B5  33 C0		     1C            xor   ax, ax
 20B7  C3		     1C            ret
 20B8			     1C ??029D:
 20B8  E8 DF54		      C             call  SetClkLow
			      C             AssertOutHi
 20BB  E4 00		     1C            in    al, 0
 20BD  0A C0		     1C            or    al, al
 20BF  75 03		     1C            jnz   ??029E
 20C1  33 C0		     1C            xor   ax, ax
 20C3  C3		     1C            ret
 20C4			     1C ??029E:
 20C4  E8 DF43		      C             call  SetClkHi
			      C             AssertOutHi
 20C7  E4 00		     1C            in    al, 0
 20C9  0A C0		     1C            or    al, al
 20CB  75 03		     1C            jnz   ??029F
 20CD  33 C0		     1C            xor   ax, ax
 20CF  C3		     1C            ret
 20D0			     1C ??029F:
 20D0  E8 DF32		      C             call  SetGateLow
			      C             AssertOutHi
 20D3  E4 00		     1C            in    al, 0
 20D5  0A C0		     1C            or    al, al
 20D7  75 03		     1C            jnz   ??02A0
 20D9  33 C0		     1C            xor   ax, ax
 20DB  C3		     1C            ret
 20DC			     1C ??02A0:
 20DC  E8 DF30		      C             call  SetClkLow
			      C             AssertOutHi
 20DF  E4 00		     1C            in    al, 0
 20E1  0A C0		     1C            or    al, al
 20E3  75 03		     1C            jnz   ??02A1
 20E5  33 C0		     1C            xor   ax, ax
 20E7  C3		     1C            ret
 20E8			     1C ??02A1:
 20E8  E8 DF15		      C             call  SetGateHi
			      C             AssertOutHi
 20EB  E4 00		     1C            in    al, 0
 20ED  0A C0		     1C            or    al, al
 20EF  75 03		     1C            jnz   ??02A2
 20F1  33 C0		     1C            xor   ax, ax
 20F3  C3		     1C            ret
 20F4			     1C ??02A2:
 20F4  E8 DF13		      C             call  SetClkHi
			      C             AssertOutHi
 20F7  E4 00		     1C            in    al, 0
 20F9  0A C0		     1C            or    al, al
 20FB  75 03		     1C            jnz   ??02A3
 20FD  33 C0		     1C            xor   ax, ax
 20FF  C3		     1C            ret
 2100			     1C ??02A3:
 2100  E8 DF0C		      C             call  SetClkLow ; ce = cr = 3
			      C             AssertOutHi
 2103  E4 00		     1C            in    al, 0
 2105  0A C0		     1C            or    al, al
 2107  75 03		     1C            jnz   ??02A4
 2109  33 C0		     1C            xor   ax, ax
 210B  C3		     1C            ret
 210C			     1C ??02A4:
			      C             AssertByteCeEq 3
 210C  E4 40		     1C            in    al, 40h
 210E  3C 03		     1C            cmp   al, 3
 2110  74 03		     1C            jz    ??02A5
 2112  33 C0		     1C            xor   ax, ax
 2114  C3		     1C            ret
 2115			     1C ??02A5:
 2115  E8 DEF2		      C             call  SetClkHi
			      C             AssertOutHi
 2118  E4 00		     1C            in    al, 0
 211A  0A C0		     1C            or    al, al
 211C  75 03		     1C            jnz   ??02A6
 211E  33 C0		     1C            xor   ax, ax
 2120  C3		     1C            ret
 2121			     1C ??02A6:
 2121  E8 DEEB		      C             call  SetClkLow ; ce = 2
			      C             AssertOutHi
 2124  E4 00		     1C            in    al, 0
 2126  0A C0		     1C            or    al, al
 2128  75 03		     1C            jnz   ??02A7
 212A  33 C0		     1C            xor   ax, ax
 212C  C3		     1C            ret
 212D			     1C ??02A7:
			      C             AssertByteCeEq 2
 212D  E4 40		     1C            in    al, 40h
 212F  3C 02		     1C            cmp   al, 2
 2131  74 03		     1C            jz    ??02A8
 2133  33 C0		     1C            xor   ax, ax
 2135  C3		     1C            ret
 2136			     1C ??02A8:
 2136  B0 05		      C             mov   al, 5
 2138  E8 DEE6		      C             call  WriteCountByte
			      C             AssertOutHi
 213B  E4 00		     1C            in    al, 0
 213D  0A C0		     1C            or    al, al
 213F  75 03		     1C            jnz   ??02A9
 2141  33 C0		     1C            xor   ax, ax
 2143  C3		     1C            ret
 2144			     1C ??02A9:
 2144  E8 DEC3		      C             call  SetClkHi
			      C             AssertOutHi
 2147  E4 00		     1C            in    al, 0
 2149  0A C0		     1C            or    al, al
 214B  75 03		     1C            jnz   ??02AA
 214D  33 C0		     1C            xor   ax, ax
 214F  C3		     1C            ret
 2150			     1C ??02AA:
 2150  E8 DEBC		      C             call  SetClkLow ; ce = 1
			      C             AssertOutHi
 2153  E4 00		     1C            in    al, 0
 2155  0A C0		     1C            or    al, al
 2157  75 03		     1C            jnz   ??02AB
 2159  33 C0		     1C            xor   ax, ax
 215B  C3		     1C            ret
 215C			     1C ??02AB:
			      C             AssertByteCeEq 1
 215C  E4 40		     1C            in    al, 40h
 215E  3C 01		     1C            cmp   al, 1
 2160  74 03		     1C            jz    ??02AC
 2162  33 C0		     1C            xor   ax, ax
 2164  C3		     1C            ret
 2165			     1C ??02AC:
 2165  E8 DEA2		      C             call  SetClkHi
			      C             AssertOutHi
 2168  E4 00		     1C            in    al, 0
 216A  0A C0		     1C            or    al, al
 216C  75 03		     1C            jnz   ??02AD
 216E  33 C0		     1C            xor   ax, ax
 2170  C3		     1C            ret
 2171			     1C ??02AD:
 2171  E8 DE9B		      C             call  SetClkLow ; ce = 0
			      C             AssertOutLow
 2174  E4 00		     1C            in    al, 0
 2176  0A C0		     1C            or    al, al
 2178  74 03		     1C            jz    ??02AE
 217A  33 C0		     1C            xor   ax, ax
 217C  C3		     1C            ret
 217D			     1C ??02AE:           
			      C             AssertByteCeEq 0
 217D  E4 40		     1C            in    al, 40h
 217F  3C 00		     1C            cmp   al, 0
 2181  74 03		     1C            jz    ??02AF
 2183  33 C0		     1C            xor   ax, ax
 2185  C3		     1C            ret
 2186			     1C ??02AF:
 2186  E8 DE81		      C             call  SetClkHi
			      C             AssertOutLow
 2189  E4 00		     1C            in    al, 0
 218B  0A C0		     1C            or    al, al
 218D  74 03		     1C            jz    ??02B0
 218F  33 C0		     1C            xor   ax, ax
 2191  C3		     1C            ret
 2192			     1C ??02B0:           
 2192  E8 DE7A		      C             call  SetClkLow ; ce = 0ffffh
			      C             AssertOutHi
 2195  E4 00		     1C            in    al, 0
 2197  0A C0		     1C            or    al, al
 2199  75 03		     1C            jnz   ??02B1
 219B  33 C0		     1C            xor   ax, ax
 219D  C3		     1C            ret
 219E			     1C ??02B1:
			      C             AssertByteCeEq 0ffh
 219E  E4 40		     1C            in    al, 40h
 21A0  3C FF		     1C            cmp   al, 0ffh
 21A2  74 03		     1C            jz    ??02B2
 21A4  33 C0		     1C            xor   ax, ax
 21A6  C3		     1C            ret
 21A7			     1C ??02B2:
 21A7  E8 DE60		      C             call  SetClkHi
			      C             AssertOutHi
 21AA  E4 00		     1C            in    al, 0
 21AC  0A C0		     1C            or    al, al
 21AE  75 03		     1C            jnz   ??02B3
 21B0  33 C0		     1C            xor   ax, ax
 21B2  C3		     1C            ret
 21B3			     1C ??02B3:
 21B3  E8 DE4F		      C             call  SetGateLow
			      C             AssertOutHi
 21B6  E4 00		     1C            in    al, 0
 21B8  0A C0		     1C            or    al, al
 21BA  75 03		     1C            jnz   ??02B4
 21BC  33 C0		     1C            xor   ax, ax
 21BE  C3		     1C            ret
 21BF			     1C ??02B4:
 21BF  E8 DE4D		      C             call  SetClkLow ; ce = 0fffeh
			      C             AssertOutHi
 21C2  E4 00		     1C            in    al, 0
 21C4  0A C0		     1C            or    al, al
 21C6  75 03		     1C            jnz   ??02B5
 21C8  33 C0		     1C            xor   ax, ax
 21CA  C3		     1C            ret
 21CB			     1C ??02B5:
			      C             AssertByteCeEq 0feh
 21CB  E4 40		     1C            in    al, 40h
 21CD  3C FE		     1C            cmp   al, 0feh
 21CF  74 03		     1C            jz    ??02B6
 21D1  33 C0		     1C            xor   ax, ax
 21D3  C3		     1C            ret
 21D4			     1C ??02B6:
 21D4  E8 DE29		      C             call  SetGateHi
			      C             AssertOutHi
 21D7  E4 00		     1C            in    al, 0
 21D9  0A C0		     1C            or    al, al
 21DB  75 03		     1C            jnz   ??02B7
 21DD  33 C0		     1C            xor   ax, ax
 21DF  C3		     1C            ret
 21E0			     1C ??02B7:
 21E0  E8 DE22		      C             call  SetGateLow
			      C             AssertOutHi
 21E3  E4 00		     1C            in    al, 0
 21E5  0A C0		     1C            or    al, al
 21E7  75 03		     1C            jnz   ??02B8
 21E9  33 C0		     1C            xor   ax, ax
 21EB  C3		     1C            ret
 21EC			     1C ??02B8:
 21EC  E8 DE1B		      C             call  SetClkHi
			      C             AssertOutHi
 21EF  E4 00		     1C            in    al, 0
 21F1  0A C0		     1C            or    al, al
 21F3  75 03		     1C            jnz   ??02B9
 21F5  33 C0		     1C            xor   ax, ax
 21F7  C3		     1C            ret
 21F8			     1C ??02B9:
 21F8  E8 DE14		      C             call  SetClkLow ; ce = cr = 5
			      C             AssertOutHi
 21FB  E4 00		     1C            in    al, 0
 21FD  0A C0		     1C            or    al, al
 21FF  75 03		     1C            jnz   ??02BA
 2201  33 C0		     1C            xor   ax, ax
 2203  C3		     1C            ret
 2204			     1C ??02BA:
			      C             AssertByteCeEq 5
 2204  E4 40		     1C            in    al, 40h
 2206  3C 05		     1C            cmp   al, 5
 2208  74 03		     1C            jz    ??02BB
 220A  33 C0		     1C            xor   ax, ax
 220C  C3		     1C            ret
 220D			     1C ??02BB:
 220D  E8 DDFA		      C             call  SetClkHi
			      C             AssertOutHi
 2210  E4 00		     1C            in    al, 0
 2212  0A C0		     1C            or    al, al
 2214  75 03		     1C            jnz   ??02BC
 2216  33 C0		     1C            xor   ax, ax
 2218  C3		     1C            ret
 2219			     1C ??02BC:
 2219  E8 DDF3		      C             call  SetClkLow ; ce = 4
			      C             AssertOutHi
 221C  E4 00		     1C            in    al, 0
 221E  0A C0		     1C            or    al, al
 2220  75 03		     1C            jnz   ??02BD
 2222  33 C0		     1C            xor   ax, ax
 2224  C3		     1C            ret
 2225			     1C ??02BD:
			      C             AssertByteCeEq 4
 2225  E4 40		     1C            in    al, 40h
 2227  3C 04		     1C            cmp   al, 4
 2229  74 03		     1C            jz    ??02BE
 222B  33 C0		     1C            xor   ax, ax
 222D  C3		     1C            ret
 222E			     1C ??02BE:
			      C 
 222E  B8 0001		      C             mov   ax, 1
 2231  C3		      C             ret
 2232			      C Mode5_Datasheet3_Gate_High ENDP
			      C 

 2232				Int32Handler     PROC FAR    ; Обработчик прерывания 20h
 2232  50			           push  ax
 2233  1E			           push  ds
				           
 2234  B8 ---- R		           mov   ax, Data
 2237  8E D8			           mov   ds, ax
 2239  FF 06 0000 R		           inc   IntCounter
				           
 223D  1F			           pop   ds
 223E  58			           pop   ax
 223F  CF			           iret
 2240				Int32Handler     ENDP

 2240				InitFlash  PROC  NEAR
				           ; Программируем таймер 1: режим 2, коэффициент деления 10
				           ; Режим 2 выглядит так: ----_----_----_- ...
 2240  B0 74			           mov   al,  74h
 2242  E6 43			           out   43h, al
 2244  B0 0A			           mov   al,  10
 2246  E6 41			           out   41h, al
 2248  B0 00			           mov   al,  0
 224A  E6 41			           out   41h, al
				           
 224C  C3			           ret
 224D				InitFlash  ENDP

 224D				InitCounter      PROC  NEAR
				           ; Обнуляем счётчик прерываний
 224D  33 C0			           xor   ax, ax
 224F  A3 0000 R		           mov   IntCounter, ax
				           
				           ; Программируем таймер 2: режим 2, коэффициент деления 10
				           ; Режим 2 выглядит так: ----_----_----_- ...
 2252  B0 B4			           mov   al,  0B4h
 2254  E6 43			           out   43h, al
 2256  B0 0A			           mov   al,  10
 2258  E6 42			           out   42h, al
 225A  B0 00			           mov   al,  0
 225C  E6 42			           out   42h, al
				           
				           ; Установка обработчика прерывания
 225E  1E			           push  ds
 225F  B8 ---- R		           mov   ax, IntTable
 2262  8E D8			           mov   ds, ax
 2264  B8 2232 R		           mov   ax, cs:Int32Handler
 2267  A3 0080 R		           mov   ds:Int32HandlerPtrOffs, ax
 226A  B8 ---- R		           mov   ax, Code
 226D  A3 0082 R		           mov   ds:Int32HandlerPtrSeg, ax
 2270  1F			           pop   ds
				           
 2271  C3			           ret
 2272				InitCounter      ENDP

				           ; Выводит содержимое счётчика прерываний в порт 20h
 2272				ShowCounter      PROC NEAR
 2272  A1 0000 R		           mov   ax,  IntCounter
 2275  E6 20			           out   20h, al
 2277  C3			           ret
 2278				ShowCounter      ENDP

 2278				Start:
 2278  B8 ---- R		           mov   ax, Data
 227B  8E D8			           mov   ds, ax
 227D  8E C0			           mov   es, ax
 227F  B8 ---- R		           mov   ax, Stk
 2282  8E D0			           mov   ss, ax
 2284  8D 26 0200 R		           lea   sp, StkTop
				;Здесь размещается код программы
				           
 2288  E8 FFB5			           call  InitFlash   ; Инициализация таймера мигающего светодиода
 228B  E8 FFBF			           call  InitCounter ; Инициализация таймера со счётчиком прерываний
 228E  FB			           sti
				           
				           ; Тесты режимов таймера согласно осциллограмм из документации
				           ; Смотри 8254.pdf из папки проекта
 228F  E8 DD99			           call  TestMode0
 2292  E8 E177			           call  TestMode1
 2295  E8 EA10			           call  TestMode2
 2298  E8 EE06			           call  TestMode3
 229B  E8 F21B			           call  TestMode4
 229E  E8 F5E4			           call  TestMode5
				      
 22A1  CD 20			           int   20h         ; Проверка программного вызова прерываний
 22A3				MLoop:
 22A3  E8 FFCC			           call  ShowCounter ; Обновление порта вывода счётчика прерываний
 22A6  F4			           hlt               ; Ждём прерывания
 22A7  EB FA			           jmp   MLoop       ; Бесконечный цикл

				;В следующей строке необходимо указать смещение стартовой точки
				           org   RomSize-16-((InitDataEnd-InitDataStart+15) AND 0FFF0h)
				           ASSUME cs:NOTHING
 3FF0  EA ---- 2278 R		           jmp   Far Ptr Start
 3FF5				Code       ENDS
				END	   Start
Microsoft (R) Macro Assembler Version 6.14.8444		    03/27/23 08:37:22
VI54.asm						     Symbols 2 - 1




Macros:

                N a m e                 Type

AssertByteCeEq . . . . . . . . .	Proc
AssertByteEq . . . . . . . . . .	Proc
AssertOutHi  . . . . . . . . . .	Proc
AssertOutLow . . . . . . . . . .	Proc
AssertWordCeEq . . . . . . . . .	Proc


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

Code . . . . . . . . . . . . . .	16 Bit	 3FF5	  Para	  Private 
Data . . . . . . . . . . . . . .	16 Bit	 0002	  Abs	  Private 
InitData . . . . . . . . . . . .	16 Bit	 0000	  Para	  Private 
IntTable . . . . . . . . . . . .	16 Bit	 0084	  Abs	  Private 
Stk  . . . . . . . . . . . . . .	16 Bit	 0200	  Abs	  Private 


Procedures,  parameters and locals:

                N a m e                 Type     Value    Attr

GetCeByte  . . . . . . . . . . .	P Near	 0019	  Code	Length= 0005 Public
GetOut . . . . . . . . . . . . .	P Near	 0014	  Code	Length= 0005 Public
InitCounter  . . . . . . . . . .	P Near	 224D	  Code	Length= 0025 Public
InitFlash  . . . . . . . . . . .	P Near	 2240	  Code	Length= 000D Public
Int32Handler . . . . . . . . . .	P Far	 2232	  Code	Length= 000E Public
Mode0_Datasheet1 . . . . . . . .	P Near	 0056	  Code	Length= 0149 Public
  ??0000 . . . . . . . . . . . .	L Near	 006A	  Code	
  ??0001 . . . . . . . . . . . .	L Near	 0076	  Code	
  ??0002 . . . . . . . . . . . .	L Near	 0082	  Code	
  ??0003 . . . . . . . . . . . .	L Near	 008E	  Code	
  ??0004 . . . . . . . . . . . .	L Near	 009C	  Code	
  ??0005 . . . . . . . . . . . .	L Near	 00A8	  Code	
  ??0006 . . . . . . . . . . . .	L Near	 00B4	  Code	
  ??0007 . . . . . . . . . . . .	L Near	 00BD	  Code	
  ??0008 . . . . . . . . . . . .	L Near	 00C9	  Code	
  ??0009 . . . . . . . . . . . .	L Near	 00D5	  Code	
  ??000A . . . . . . . . . . . .	L Near	 00DE	  Code	
  ??000B . . . . . . . . . . . .	L Near	 00EA	  Code	
  ??000C . . . . . . . . . . . .	L Near	 00F6	  Code	
  ??000D . . . . . . . . . . . .	L Near	 00FF	  Code	
  ??000E . . . . . . . . . . . .	L Near	 010B	  Code	
  ??000F . . . . . . . . . . . .	L Near	 0117	  Code	
  ??0010 . . . . . . . . . . . .	L Near	 0120	  Code	
  ??0011 . . . . . . . . . . . .	L Near	 012C	  Code	
  ??0012 . . . . . . . . . . . .	L Near	 0138	  Code	
  ??0013 . . . . . . . . . . . .	L Near	 0141	  Code	
  ??0014 . . . . . . . . . . . .	L Near	 014D	  Code	
  ??0015 . . . . . . . . . . . .	L Near	 0159	  Code	
  ??0016 . . . . . . . . . . . .	L Near	 0162	  Code	
  Mode0_Datasheet1_M1  . . . . .	L Near	 0164	  Code	
  ??0017 . . . . . . . . . . . .	L Near	 0170	  Code	
  ??0018 . . . . . . . . . . . .	L Near	 017C	  Code	
  Mode0_Datasheet1_M2  . . . . .	L Near	 0181	  Code	
  ??0019 . . . . . . . . . . . .	L Near	 018D	  Code	
  ??001A . . . . . . . . . . . .	L Near	 0199	  Code	
Mode0_Datasheet2 . . . . . . . .	P Near	 019F	  Code	Length= 0137 Public
  ??001B . . . . . . . . . . . .	L Near	 01B3	  Code	
  ??001C . . . . . . . . . . . .	L Near	 01BF	  Code	
  ??001D . . . . . . . . . . . .	L Near	 01CB	  Code	
  ??001E . . . . . . . . . . . .	L Near	 01D7	  Code	
  ??001F . . . . . . . . . . . .	L Near	 01E5	  Code	
  ??0020 . . . . . . . . . . . .	L Near	 01F1	  Code	
  ??0021 . . . . . . . . . . . .	L Near	 01FD	  Code	
  ??0022 . . . . . . . . . . . .	L Near	 0206	  Code	
  ??0023 . . . . . . . . . . . .	L Near	 0215	  Code	
  ??0024 . . . . . . . . . . . .	L Near	 0221	  Code	
  ??0025 . . . . . . . . . . . .	L Near	 022A	  Code	
  ??0026 . . . . . . . . . . . .	L Near	 0236	  Code	
  ??0027 . . . . . . . . . . . .	L Near	 0242	  Code	
  ??0028 . . . . . . . . . . . .	L Near	 024B	  Code	
  ??0029 . . . . . . . . . . . .	L Near	 0257	  Code	
  ??002A . . . . . . . . . . . .	L Near	 0263	  Code	
  ??002B . . . . . . . . . . . .	L Near	 026C	  Code	
  ??002C . . . . . . . . . . . .	L Near	 027B	  Code	
  ??002D . . . . . . . . . . . .	L Near	 0287	  Code	
  ??002E . . . . . . . . . . . .	L Near	 0290	  Code	
  ??002F . . . . . . . . . . . .	L Near	 029C	  Code	
  ??0030 . . . . . . . . . . . .	L Near	 02A8	  Code	
  ??0031 . . . . . . . . . . . .	L Near	 02B1	  Code	
  ??0032 . . . . . . . . . . . .	L Near	 02BD	  Code	
  ??0033 . . . . . . . . . . . .	L Near	 02C9	  Code	
  ??0034 . . . . . . . . . . . .	L Near	 02D2	  Code	
Mode0_Datasheet3 . . . . . . . .	P Near	 02D6	  Code	Length= 0136 Public
  ??0035 . . . . . . . . . . . .	L Near	 02EA	  Code	
  ??0036 . . . . . . . . . . . .	L Near	 02F6	  Code	
  ??0037 . . . . . . . . . . . .	L Near	 0302	  Code	
  ??0038 . . . . . . . . . . . .	L Near	 030E	  Code	
  ??0039 . . . . . . . . . . . .	L Near	 031C	  Code	
  ??003A . . . . . . . . . . . .	L Near	 0328	  Code	
  ??003B . . . . . . . . . . . .	L Near	 0334	  Code	
  ??003C . . . . . . . . . . . .	L Near	 033D	  Code	
  ??003D . . . . . . . . . . . .	L Near	 0349	  Code	
  ??003E . . . . . . . . . . . .	L Near	 0355	  Code	
  ??003F . . . . . . . . . . . .	L Near	 035E	  Code	
  ??0040 . . . . . . . . . . . .	L Near	 036A	  Code	
  ??0041 . . . . . . . . . . . .	L Near	 0376	  Code	
  ??0042 . . . . . . . . . . . .	L Near	 037F	  Code	
  ??0043 . . . . . . . . . . . .	L Near	 0390	  Code	
  ??0044 . . . . . . . . . . . .	L Near	 039C	  Code	
  ??0045 . . . . . . . . . . . .	L Near	 03A5	  Code	
  ??0046 . . . . . . . . . . . .	L Near	 03B1	  Code	
  ??0047 . . . . . . . . . . . .	L Near	 03BD	  Code	
  ??0048 . . . . . . . . . . . .	L Near	 03C6	  Code	
  ??0049 . . . . . . . . . . . .	L Near	 03D2	  Code	
  ??004A . . . . . . . . . . . .	L Near	 03DE	  Code	
  ??004B . . . . . . . . . . . .	L Near	 03E7	  Code	
  ??004C . . . . . . . . . . . .	L Near	 03F3	  Code	
  ??004D . . . . . . . . . . . .	L Near	 03FF	  Code	
  ??004E . . . . . . . . . . . .	L Near	 0408	  Code	
Mode1_Datasheet1GateHi . . . . .	P Near	 05BC	  Code	Length= 015B Public
  ??006C . . . . . . . . . . . .	L Near	 05D0	  Code	
  ??006D . . . . . . . . . . . .	L Near	 05DC	  Code	
  ??006E . . . . . . . . . . . .	L Near	 05E8	  Code	
  ??006F . . . . . . . . . . . .	L Near	 05F9	  Code	
  ??0070 . . . . . . . . . . . .	L Near	 0608	  Code	
  ??0071 . . . . . . . . . . . .	L Near	 0617	  Code	
  ??0072 . . . . . . . . . . . .	L Near	 0623	  Code	
  ??0073 . . . . . . . . . . . .	L Near	 062F	  Code	
  ??0074 . . . . . . . . . . . .	L Near	 0638	  Code	
  ??0075 . . . . . . . . . . . .	L Near	 0644	  Code	
  ??0076 . . . . . . . . . . . .	L Near	 0650	  Code	
  ??0077 . . . . . . . . . . . .	L Near	 0659	  Code	
  ??0078 . . . . . . . . . . . .	L Near	 0665	  Code	
  ??0079 . . . . . . . . . . . .	L Near	 0671	  Code	
  ??007A . . . . . . . . . . . .	L Near	 067A	  Code	
  ??007B . . . . . . . . . . . .	L Near	 0686	  Code	
  ??007C . . . . . . . . . . . .	L Near	 0692	  Code	
  ??007D . . . . . . . . . . . .	L Near	 069B	  Code	
  ??007E . . . . . . . . . . . .	L Near	 06A7	  Code	
  ??007F . . . . . . . . . . . .	L Near	 06B3	  Code	
  ??0080 . . . . . . . . . . . .	L Near	 06BF	  Code	
  ??0081 . . . . . . . . . . . .	L Near	 06C8	  Code	
  ??0082 . . . . . . . . . . . .	L Near	 06D7	  Code	
  ??0083 . . . . . . . . . . . .	L Near	 06E3	  Code	
  ??0084 . . . . . . . . . . . .	L Near	 06EF	  Code	
  ??0085 . . . . . . . . . . . .	L Near	 06FB	  Code	
  ??0086 . . . . . . . . . . . .	L Near	 0707	  Code	
  ??0087 . . . . . . . . . . . .	L Near	 0713	  Code	
Mode1_Datasheet1GateLow  . . . .	P Near	 045B	  Code	Length= 0161 Public
  ??004F . . . . . . . . . . . .	L Near	 046F	  Code	
  ??0050 . . . . . . . . . . . .	L Near	 047B	  Code	
  ??0051 . . . . . . . . . . . .	L Near	 0487	  Code	
  ??0052 . . . . . . . . . . . .	L Near	 0498	  Code	
  ??0053 . . . . . . . . . . . .	L Near	 04A4	  Code	
  ??0054 . . . . . . . . . . . .	L Near	 04B3	  Code	
  ??0055 . . . . . . . . . . . .	L Near	 04C2	  Code	
  ??0056 . . . . . . . . . . . .	L Near	 04CE	  Code	
  ??0057 . . . . . . . . . . . .	L Near	 04D7	  Code	
  ??0058 . . . . . . . . . . . .	L Near	 04E3	  Code	
  ??0059 . . . . . . . . . . . .	L Near	 04EF	  Code	
  ??005A . . . . . . . . . . . .	L Near	 04F8	  Code	
  ??005B . . . . . . . . . . . .	L Near	 0504	  Code	
  ??005C . . . . . . . . . . . .	L Near	 0510	  Code	
  ??005D . . . . . . . . . . . .	L Near	 0519	  Code	
  ??005E . . . . . . . . . . . .	L Near	 0525	  Code	
  ??005F . . . . . . . . . . . .	L Near	 0531	  Code	
  ??0060 . . . . . . . . . . . .	L Near	 053A	  Code	
  ??0061 . . . . . . . . . . . .	L Near	 0546	  Code	
  ??0062 . . . . . . . . . . . .	L Near	 0552	  Code	
  ??0063 . . . . . . . . . . . .	L Near	 055B	  Code	
  ??0064 . . . . . . . . . . . .	L Near	 056A	  Code	
  ??0065 . . . . . . . . . . . .	L Near	 0576	  Code	
  ??0066 . . . . . . . . . . . .	L Near	 0582	  Code	
  ??0067 . . . . . . . . . . . .	L Near	 058B	  Code	
  ??0068 . . . . . . . . . . . .	L Near	 0597	  Code	
  ??0069 . . . . . . . . . . . .	L Near	 05A3	  Code	
  ??006A . . . . . . . . . . . .	L Near	 05AC	  Code	
  ??006B . . . . . . . . . . . .	L Near	 05B8	  Code	
Mode1_Datasheet2GateHi . . . . .	P Near	 087E	  Code	Length= 017F Public
  ??00A6 . . . . . . . . . . . .	L Near	 0892	  Code	
  ??00A7 . . . . . . . . . . . .	L Near	 089E	  Code	
  ??00A8 . . . . . . . . . . . .	L Near	 08AA	  Code	
  ??00A9 . . . . . . . . . . . .	L Near	 08BB	  Code	
  ??00AA . . . . . . . . . . . .	L Near	 08C7	  Code	
  ??00AB . . . . . . . . . . . .	L Near	 08D3	  Code	
  ??00AC . . . . . . . . . . . .	L Near	 08E2	  Code	
  ??00AD . . . . . . . . . . . .	L Near	 08F1	  Code	
  ??00AE . . . . . . . . . . . .	L Near	 08FD	  Code	
  ??00AF . . . . . . . . . . . .	L Near	 0906	  Code	
  ??00B0 . . . . . . . . . . . .	L Near	 0912	  Code	
  ??00B1 . . . . . . . . . . . .	L Near	 091E	  Code	
  ??00B2 . . . . . . . . . . . .	L Near	 0927	  Code	
  ??00B3 . . . . . . . . . . . .	L Near	 0933	  Code	
  ??00B4 . . . . . . . . . . . .	L Near	 093F	  Code	
  ??00B5 . . . . . . . . . . . .	L Near	 094B	  Code	
  ??00B6 . . . . . . . . . . . .	L Near	 0957	  Code	
  ??00B7 . . . . . . . . . . . .	L Near	 0960	  Code	
  ??00B8 . . . . . . . . . . . .	L Near	 096C	  Code	
  ??00B9 . . . . . . . . . . . .	L Near	 0975	  Code	
  ??00BA . . . . . . . . . . . .	L Near	 0981	  Code	
  ??00BB . . . . . . . . . . . .	L Near	 098D	  Code	
  ??00BC . . . . . . . . . . . .	L Near	 0996	  Code	
  ??00BD . . . . . . . . . . . .	L Near	 09A2	  Code	
  ??00BE . . . . . . . . . . . .	L Near	 09AE	  Code	
  ??00BF . . . . . . . . . . . .	L Near	 09B7	  Code	
  ??00C0 . . . . . . . . . . . .	L Near	 09C3	  Code	
  ??00C1 . . . . . . . . . . . .	L Near	 09CF	  Code	
  ??00C2 . . . . . . . . . . . .	L Near	 09D8	  Code	
  ??00C3 . . . . . . . . . . . .	L Near	 09E4	  Code	
  ??00C4 . . . . . . . . . . . .	L Near	 09F0	  Code	
  ??00C5 . . . . . . . . . . . .	L Near	 09F9	  Code	
Mode1_Datasheet2GateLow  . . . .	P Near	 0717	  Code	Length= 0167 Public
  ??0088 . . . . . . . . . . . .	L Near	 072B	  Code	
  ??0089 . . . . . . . . . . . .	L Near	 0737	  Code	
  ??008A . . . . . . . . . . . .	L Near	 0743	  Code	
  ??008B . . . . . . . . . . . .	L Near	 0754	  Code	
  ??008C . . . . . . . . . . . .	L Near	 0760	  Code	
  ??008D . . . . . . . . . . . .	L Near	 076F	  Code	
  ??008E . . . . . . . . . . . .	L Near	 077E	  Code	
  ??008F . . . . . . . . . . . .	L Near	 078A	  Code	
  ??0090 . . . . . . . . . . . .	L Near	 0793	  Code	
  ??0091 . . . . . . . . . . . .	L Near	 079F	  Code	
  ??0092 . . . . . . . . . . . .	L Near	 07AB	  Code	
  ??0093 . . . . . . . . . . . .	L Near	 07B4	  Code	
  ??0094 . . . . . . . . . . . .	L Near	 07C0	  Code	
  ??0095 . . . . . . . . . . . .	L Near	 07CC	  Code	
  ??0096 . . . . . . . . . . . .	L Near	 07D8	  Code	
  ??0097 . . . . . . . . . . . .	L Near	 07E1	  Code	
  ??0098 . . . . . . . . . . . .	L Near	 07ED	  Code	
  ??0099 . . . . . . . . . . . .	L Near	 07F6	  Code	
  ??009A . . . . . . . . . . . .	L Near	 0802	  Code	
  ??009B . . . . . . . . . . . .	L Near	 080E	  Code	
  ??009C . . . . . . . . . . . .	L Near	 0817	  Code	
  ??009D . . . . . . . . . . . .	L Near	 0823	  Code	
  ??009E . . . . . . . . . . . .	L Near	 082F	  Code	
  ??009F . . . . . . . . . . . .	L Near	 0838	  Code	
  ??00A0 . . . . . . . . . . . .	L Near	 0844	  Code	
  ??00A1 . . . . . . . . . . . .	L Near	 0850	  Code	
  ??00A2 . . . . . . . . . . . .	L Near	 0859	  Code	
  ??00A3 . . . . . . . . . . . .	L Near	 0865	  Code	
  ??00A4 . . . . . . . . . . . .	L Near	 0871	  Code	
  ??00A5 . . . . . . . . . . . .	L Near	 087A	  Code	
Mode1_Datasheet3GateHi . . . . .	P Near	 0B57	  Code	Length= 0151 Public
  ??00E2 . . . . . . . . . . . .	L Near	 0B6B	  Code	
  ??00E3 . . . . . . . . . . . .	L Near	 0B77	  Code	
  ??00E4 . . . . . . . . . . . .	L Near	 0B83	  Code	
  ??00E5 . . . . . . . . . . . .	L Near	 0B94	  Code	
  ??00E6 . . . . . . . . . . . .	L Near	 0BA3	  Code	
  ??00E7 . . . . . . . . . . . .	L Near	 0BB2	  Code	
  ??00E8 . . . . . . . . . . . .	L Near	 0BBE	  Code	
  ??00E9 . . . . . . . . . . . .	L Near	 0BCA	  Code	
  ??00EA . . . . . . . . . . . .	L Near	 0BD3	  Code	
  ??00EB . . . . . . . . . . . .	L Near	 0BE7	  Code	
  ??00EC . . . . . . . . . . . .	L Near	 0BF0	  Code	
  ??00ED . . . . . . . . . . . .	L Near	 0BFC	  Code	
  ??00EE . . . . . . . . . . . .	L Near	 0C08	  Code	
  ??00EF . . . . . . . . . . . .	L Near	 0C11	  Code	
  ??00F0 . . . . . . . . . . . .	L Near	 0C1D	  Code	
  ??00F1 . . . . . . . . . . . .	L Near	 0C29	  Code	
  ??00F2 . . . . . . . . . . . .	L Near	 0C32	  Code	
  ??00F3 . . . . . . . . . . . .	L Near	 0C3E	  Code	
  ??00F4 . . . . . . . . . . . .	L Near	 0C4D	  Code	
  ??00F5 . . . . . . . . . . . .	L Near	 0C59	  Code	
  ??00F6 . . . . . . . . . . . .	L Near	 0C62	  Code	
  ??00F7 . . . . . . . . . . . .	L Near	 0C6E	  Code	
  ??00F8 . . . . . . . . . . . .	L Near	 0C7A	  Code	
  ??00F9 . . . . . . . . . . . .	L Near	 0C83	  Code	
  ??00FA . . . . . . . . . . . .	L Near	 0C8F	  Code	
  ??00FB . . . . . . . . . . . .	L Near	 0C9B	  Code	
  ??00FC . . . . . . . . . . . .	L Near	 0CA4	  Code	
Mode1_Datasheet3GateLow  . . . .	P Near	 09FD	  Code	Length= 015A Public
  ??00C6 . . . . . . . . . . . .	L Near	 0A11	  Code	
  ??00C7 . . . . . . . . . . . .	L Near	 0A1D	  Code	
  ??00C8 . . . . . . . . . . . .	L Near	 0A29	  Code	
  ??00C9 . . . . . . . . . . . .	L Near	 0A3A	  Code	
  ??00CA . . . . . . . . . . . .	L Near	 0A46	  Code	
  ??00CB . . . . . . . . . . . .	L Near	 0A55	  Code	
  ??00CC . . . . . . . . . . . .	L Near	 0A64	  Code	
  ??00CD . . . . . . . . . . . .	L Near	 0A70	  Code	
  ??00CE . . . . . . . . . . . .	L Near	 0A79	  Code	
  ??00CF . . . . . . . . . . . .	L Near	 0A8D	  Code	
  ??00D0 . . . . . . . . . . . .	L Near	 0A96	  Code	
  ??00D1 . . . . . . . . . . . .	L Near	 0AA2	  Code	
  ??00D2 . . . . . . . . . . . .	L Near	 0AAE	  Code	
  ??00D3 . . . . . . . . . . . .	L Near	 0AB7	  Code	
  ??00D4 . . . . . . . . . . . .	L Near	 0AC3	  Code	
  ??00D5 . . . . . . . . . . . .	L Near	 0ACF	  Code	
  ??00D6 . . . . . . . . . . . .	L Near	 0AD8	  Code	
  ??00D7 . . . . . . . . . . . .	L Near	 0AE4	  Code	
  ??00D8 . . . . . . . . . . . .	L Near	 0AF0	  Code	
  ??00D9 . . . . . . . . . . . .	L Near	 0AFC	  Code	
  ??00DA . . . . . . . . . . . .	L Near	 0B05	  Code	
  ??00DB . . . . . . . . . . . .	L Near	 0B11	  Code	
  ??00DC . . . . . . . . . . . .	L Near	 0B1D	  Code	
  ??00DD . . . . . . . . . . . .	L Near	 0B29	  Code	
  ??00DE . . . . . . . . . . . .	L Near	 0B32	  Code	
  ??00DF . . . . . . . . . . . .	L Near	 0B3E	  Code	
  ??00E0 . . . . . . . . . . . .	L Near	 0B4A	  Code	
  ??00E1 . . . . . . . . . . . .	L Near	 0B53	  Code	
Mode2_Datasheet1 . . . . . . . .	P Near	 0CD3	  Code	Length= 0131 Public
  ??00FD . . . . . . . . . . . .	L Near	 0CE7	  Code	
  ??00FE . . . . . . . . . . . .	L Near	 0CF3	  Code	
  ??00FF . . . . . . . . . . . .	L Near	 0CFF	  Code	
  ??0100 . . . . . . . . . . . .	L Near	 0D0B	  Code	
  ??0101 . . . . . . . . . . . .	L Near	 0D19	  Code	
  ??0102 . . . . . . . . . . . .	L Near	 0D25	  Code	
  ??0103 . . . . . . . . . . . .	L Near	 0D31	  Code	
  ??0104 . . . . . . . . . . . .	L Near	 0D3A	  Code	
  ??0105 . . . . . . . . . . . .	L Near	 0D46	  Code	
  ??0106 . . . . . . . . . . . .	L Near	 0D52	  Code	
  ??0107 . . . . . . . . . . . .	L Near	 0D5B	  Code	
  ??0108 . . . . . . . . . . . .	L Near	 0D67	  Code	
  ??0109 . . . . . . . . . . . .	L Near	 0D73	  Code	
  ??010A . . . . . . . . . . . .	L Near	 0D7C	  Code	
  ??010B . . . . . . . . . . . .	L Near	 0D88	  Code	
  ??010C . . . . . . . . . . . .	L Near	 0D94	  Code	
  ??010D . . . . . . . . . . . .	L Near	 0D9D	  Code	
  ??010E . . . . . . . . . . . .	L Near	 0DA9	  Code	
  ??010F . . . . . . . . . . . .	L Near	 0DB5	  Code	
  ??0110 . . . . . . . . . . . .	L Near	 0DBE	  Code	
  ??0111 . . . . . . . . . . . .	L Near	 0DCA	  Code	
  ??0112 . . . . . . . . . . . .	L Near	 0DD6	  Code	
  ??0113 . . . . . . . . . . . .	L Near	 0DDF	  Code	
  ??0114 . . . . . . . . . . . .	L Near	 0DEB	  Code	
  ??0115 . . . . . . . . . . . .	L Near	 0DF7	  Code	
  ??0116 . . . . . . . . . . . .	L Near	 0E00	  Code	
Mode2_Datasheet2 . . . . . . . .	P Near	 0E04	  Code	Length= 0155 Public
  ??0117 . . . . . . . . . . . .	L Near	 0E18	  Code	
  ??0118 . . . . . . . . . . . .	L Near	 0E24	  Code	
  ??0119 . . . . . . . . . . . .	L Near	 0E30	  Code	
  ??011A . . . . . . . . . . . .	L Near	 0E3C	  Code	
  ??011B . . . . . . . . . . . .	L Near	 0E4A	  Code	
  ??011C . . . . . . . . . . . .	L Near	 0E56	  Code	
  ??011D . . . . . . . . . . . .	L Near	 0E62	  Code	
  ??011E . . . . . . . . . . . .	L Near	 0E6B	  Code	
  ??011F . . . . . . . . . . . .	L Near	 0E77	  Code	
  ??0120 . . . . . . . . . . . .	L Near	 0E83	  Code	
  ??0121 . . . . . . . . . . . .	L Near	 0E8F	  Code	
  ??0122 . . . . . . . . . . . .	L Near	 0E98	  Code	
  ??0123 . . . . . . . . . . . .	L Near	 0EA4	  Code	
  ??0124 . . . . . . . . . . . .	L Near	 0EB0	  Code	
  ??0125 . . . . . . . . . . . .	L Near	 0EB9	  Code	
  ??0126 . . . . . . . . . . . .	L Near	 0EC5	  Code	
  ??0127 . . . . . . . . . . . .	L Near	 0ED1	  Code	
  ??0128 . . . . . . . . . . . .	L Near	 0EDD	  Code	
  ??0129 . . . . . . . . . . . .	L Near	 0EE6	  Code	
  ??012A . . . . . . . . . . . .	L Near	 0EF2	  Code	
  ??012B . . . . . . . . . . . .	L Near	 0EFE	  Code	
  ??012C . . . . . . . . . . . .	L Near	 0F07	  Code	
  ??012D . . . . . . . . . . . .	L Near	 0F13	  Code	
  ??012E . . . . . . . . . . . .	L Near	 0F1F	  Code	
  ??012F . . . . . . . . . . . .	L Near	 0F28	  Code	
  ??0130 . . . . . . . . . . . .	L Near	 0F34	  Code	
  ??0131 . . . . . . . . . . . .	L Near	 0F40	  Code	
  ??0132 . . . . . . . . . . . .	L Near	 0F49	  Code	
  ??0133 . . . . . . . . . . . .	L Near	 0F55	  Code	
Mode2_Datasheet3 . . . . . . . .	P Near	 0F59	  Code	Length= 0148 Public
  ??0134 . . . . . . . . . . . .	L Near	 0F6D	  Code	
  ??0135 . . . . . . . . . . . .	L Near	 0F79	  Code	
  ??0136 . . . . . . . . . . . .	L Near	 0F85	  Code	
  ??0137 . . . . . . . . . . . .	L Near	 0F91	  Code	
  ??0138 . . . . . . . . . . . .	L Near	 0F9F	  Code	
  ??0139 . . . . . . . . . . . .	L Near	 0FAB	  Code	
  ??013A . . . . . . . . . . . .	L Near	 0FB7	  Code	
  ??013B . . . . . . . . . . . .	L Near	 0FC0	  Code	
  ??013C . . . . . . . . . . . .	L Near	 0FCC	  Code	
  ??013D . . . . . . . . . . . .	L Near	 0FD8	  Code	
  ??013E . . . . . . . . . . . .	L Near	 0FE1	  Code	
  ??013F . . . . . . . . . . . .	L Near	 0FEF	  Code	
  ??0140 . . . . . . . . . . . .	L Near	 0FF8	  Code	
  ??0141 . . . . . . . . . . . .	L Near	 1004	  Code	
  ??0142 . . . . . . . . . . . .	L Near	 1010	  Code	
  ??0143 . . . . . . . . . . . .	L Near	 1019	  Code	
  ??0144 . . . . . . . . . . . .	L Near	 1025	  Code	
  ??0145 . . . . . . . . . . . .	L Near	 1031	  Code	
  ??0146 . . . . . . . . . . . .	L Near	 103A	  Code	
  ??0147 . . . . . . . . . . . .	L Near	 1046	  Code	
  ??0148 . . . . . . . . . . . .	L Near	 1052	  Code	
  ??0149 . . . . . . . . . . . .	L Near	 105B	  Code	
  ??014A . . . . . . . . . . . .	L Near	 1067	  Code	
  ??014B . . . . . . . . . . . .	L Near	 1073	  Code	
  ??014C . . . . . . . . . . . .	L Near	 107C	  Code	
  ??014D . . . . . . . . . . . .	L Near	 1088	  Code	
  ??014E . . . . . . . . . . . .	L Near	 1094	  Code	
  ??014F . . . . . . . . . . . .	L Near	 109D	  Code	
Mode3_Datasheet1 . . . . . . . .	P Near	 10CC	  Code	Length= 00EF Public
  ??0150 . . . . . . . . . . . .	L Near	 10E0	  Code	
  ??0151 . . . . . . . . . . . .	L Near	 10EC	  Code	
  ??0152 . . . . . . . . . . . .	L Near	 10F8	  Code	
  ??0153 . . . . . . . . . . . .	L Near	 1104	  Code	
  ??0154 . . . . . . . . . . . .	L Near	 1112	  Code	
  ??0155 . . . . . . . . . . . .	L Near	 111E	  Code	
  ??0156 . . . . . . . . . . . .	L Near	 112A	  Code	
  ??0157 . . . . . . . . . . . .	L Near	 1133	  Code	
  ??0158 . . . . . . . . . . . .	L Near	 113F	  Code	
  ??0159 . . . . . . . . . . . .	L Near	 114B	  Code	
  ??015A . . . . . . . . . . . .	L Near	 1154	  Code	
  ??015B . . . . . . . . . . . .	L Near	 1160	  Code	
  ??015C . . . . . . . . . . . .	L Near	 116C	  Code	
  ??015D . . . . . . . . . . . .	L Near	 1175	  Code	
  ??015E . . . . . . . . . . . .	L Near	 1181	  Code	
  ??015F . . . . . . . . . . . .	L Near	 118D	  Code	
  ??0160 . . . . . . . . . . . .	L Near	 1196	  Code	
  ??0161 . . . . . . . . . . . .	L Near	 11A2	  Code	
  ??0162 . . . . . . . . . . . .	L Near	 11AE	  Code	
  ??0163 . . . . . . . . . . . .	L Near	 11B7	  Code	
Mode3_Datasheet2 . . . . . . . .	P Near	 11BB	  Code	Length= 0173 Public
  ??0164 . . . . . . . . . . . .	L Near	 11CF	  Code	
  ??0165 . . . . . . . . . . . .	L Near	 11DB	  Code	
  ??0166 . . . . . . . . . . . .	L Near	 11E7	  Code	
  ??0167 . . . . . . . . . . . .	L Near	 11F3	  Code	
  ??0168 . . . . . . . . . . . .	L Near	 1201	  Code	
  ??0169 . . . . . . . . . . . .	L Near	 120D	  Code	
  ??016A . . . . . . . . . . . .	L Near	 1219	  Code	
  ??016B . . . . . . . . . . . .	L Near	 1222	  Code	
  ??016C . . . . . . . . . . . .	L Near	 122E	  Code	
  ??016D . . . . . . . . . . . .	L Near	 123A	  Code	
  ??016E . . . . . . . . . . . .	L Near	 1243	  Code	
  ??016F . . . . . . . . . . . .	L Near	 124F	  Code	
  ??0170 . . . . . . . . . . . .	L Near	 125B	  Code	
  ??0171 . . . . . . . . . . . .	L Near	 1264	  Code	
  ??0172 . . . . . . . . . . . .	L Near	 1270	  Code	
  ??0173 . . . . . . . . . . . .	L Near	 127C	  Code	
  ??0174 . . . . . . . . . . . .	L Near	 1285	  Code	
  ??0175 . . . . . . . . . . . .	L Near	 1291	  Code	
  ??0176 . . . . . . . . . . . .	L Near	 129D	  Code	
  ??0177 . . . . . . . . . . . .	L Near	 12A6	  Code	
  ??0178 . . . . . . . . . . . .	L Near	 12B2	  Code	
  ??0179 . . . . . . . . . . . .	L Near	 12BE	  Code	
  ??017A . . . . . . . . . . . .	L Near	 12C7	  Code	
  ??017B . . . . . . . . . . . .	L Near	 12D3	  Code	
  ??017C . . . . . . . . . . . .	L Near	 12DF	  Code	
  ??017D . . . . . . . . . . . .	L Near	 12E8	  Code	
  ??017E . . . . . . . . . . . .	L Near	 12F4	  Code	
  ??017F . . . . . . . . . . . .	L Near	 1300	  Code	
  ??0180 . . . . . . . . . . . .	L Near	 1309	  Code	
  ??0181 . . . . . . . . . . . .	L Near	 1315	  Code	
  ??0182 . . . . . . . . . . . .	L Near	 1321	  Code	
  ??0183 . . . . . . . . . . . .	L Near	 132A	  Code	
Mode3_Datasheet3 . . . . . . . .	P Near	 132E	  Code	Length= 018B Public
  ??0184 . . . . . . . . . . . .	L Near	 1342	  Code	
  ??0185 . . . . . . . . . . . .	L Near	 134E	  Code	
  ??0186 . . . . . . . . . . . .	L Near	 135A	  Code	
  ??0187 . . . . . . . . . . . .	L Near	 1366	  Code	
  ??0188 . . . . . . . . . . . .	L Near	 1374	  Code	
  ??0189 . . . . . . . . . . . .	L Near	 1380	  Code	
  ??018A . . . . . . . . . . . .	L Near	 138C	  Code	
  ??018B . . . . . . . . . . . .	L Near	 1395	  Code	
  ??018C . . . . . . . . . . . .	L Near	 13A1	  Code	
  ??018D . . . . . . . . . . . .	L Near	 13AD	  Code	
  ??018E . . . . . . . . . . . .	L Near	 13B6	  Code	
  ??018F . . . . . . . . . . . .	L Near	 13C2	  Code	
  ??0190 . . . . . . . . . . . .	L Near	 13CE	  Code	
  ??0191 . . . . . . . . . . . .	L Near	 13D7	  Code	
  ??0192 . . . . . . . . . . . .	L Near	 13E3	  Code	
  ??0193 . . . . . . . . . . . .	L Near	 13EF	  Code	
  ??0194 . . . . . . . . . . . .	L Near	 13F8	  Code	
  ??0195 . . . . . . . . . . . .	L Near	 1404	  Code	
  ??0196 . . . . . . . . . . . .	L Near	 1410	  Code	
  ??0197 . . . . . . . . . . . .	L Near	 141C	  Code	
  ??0198 . . . . . . . . . . . .	L Near	 1425	  Code	
  ??0199 . . . . . . . . . . . .	L Near	 1431	  Code	
  ??019A . . . . . . . . . . . .	L Near	 143D	  Code	
  ??019B . . . . . . . . . . . .	L Near	 1446	  Code	
  ??019C . . . . . . . . . . . .	L Near	 1452	  Code	
  ??019D . . . . . . . . . . . .	L Near	 145E	  Code	
  ??019E . . . . . . . . . . . .	L Near	 146A	  Code	
  ??019F . . . . . . . . . . . .	L Near	 1473	  Code	
  ??01A0 . . . . . . . . . . . .	L Near	 147F	  Code	
  ??01A1 . . . . . . . . . . . .	L Near	 148B	  Code	
  ??01A2 . . . . . . . . . . . .	L Near	 1494	  Code	
  ??01A3 . . . . . . . . . . . .	L Near	 14A0	  Code	
  ??01A4 . . . . . . . . . . . .	L Near	 14AC	  Code	
  ??01A5 . . . . . . . . . . . .	L Near	 14B5	  Code	
Mode4_Datasheet1 . . . . . . . .	P Near	 14E4	  Code	Length= 0125 Public
  ??01A6 . . . . . . . . . . . .	L Near	 14F8	  Code	
  ??01A7 . . . . . . . . . . . .	L Near	 1504	  Code	
  ??01A8 . . . . . . . . . . . .	L Near	 1510	  Code	
  ??01A9 . . . . . . . . . . . .	L Near	 151C	  Code	
  ??01AA . . . . . . . . . . . .	L Near	 152A	  Code	
  ??01AB . . . . . . . . . . . .	L Near	 1536	  Code	
  ??01AC . . . . . . . . . . . .	L Near	 1542	  Code	
  ??01AD . . . . . . . . . . . .	L Near	 154B	  Code	
  ??01AE . . . . . . . . . . . .	L Near	 1557	  Code	
  ??01AF . . . . . . . . . . . .	L Near	 1563	  Code	
  ??01B0 . . . . . . . . . . . .	L Near	 156C	  Code	
  ??01B1 . . . . . . . . . . . .	L Near	 1578	  Code	
  ??01B2 . . . . . . . . . . . .	L Near	 1584	  Code	
  ??01B3 . . . . . . . . . . . .	L Near	 158D	  Code	
  ??01B4 . . . . . . . . . . . .	L Near	 1599	  Code	
  ??01B5 . . . . . . . . . . . .	L Near	 15A5	  Code	
  ??01B6 . . . . . . . . . . . .	L Near	 15AE	  Code	
  ??01B7 . . . . . . . . . . . .	L Near	 15BA	  Code	
  ??01B8 . . . . . . . . . . . .	L Near	 15C6	  Code	
  ??01B9 . . . . . . . . . . . .	L Near	 15CF	  Code	
  Mode4_Datasheet1_M1  . . . . .	L Near	 15D3	  Code	
  ??01BA . . . . . . . . . . . .	L Near	 15DF	  Code	
  ??01BB . . . . . . . . . . . .	L Near	 15EB	  Code	
  ??01BC . . . . . . . . . . . .	L Near	 15F9	  Code	
  ??01BD . . . . . . . . . . . .	L Near	 1605	  Code	
Mode4_Datasheet2 . . . . . . . .	P Near	 1609	  Code	Length= 013D Public
  ??01BE . . . . . . . . . . . .	L Near	 161D	  Code	
  ??01BF . . . . . . . . . . . .	L Near	 1629	  Code	
  ??01C0 . . . . . . . . . . . .	L Near	 1635	  Code	
  ??01C1 . . . . . . . . . . . .	L Near	 1641	  Code	
  ??01C2 . . . . . . . . . . . .	L Near	 164F	  Code	
  ??01C3 . . . . . . . . . . . .	L Near	 165B	  Code	
  ??01C4 . . . . . . . . . . . .	L Near	 1667	  Code	
  ??01C5 . . . . . . . . . . . .	L Near	 1670	  Code	
  ??01C6 . . . . . . . . . . . .	L Near	 167C	  Code	
  ??01C7 . . . . . . . . . . . .	L Near	 1688	  Code	
  ??01C8 . . . . . . . . . . . .	L Near	 1691	  Code	
  ??01C9 . . . . . . . . . . . .	L Near	 169D	  Code	
  ??01CA . . . . . . . . . . . .	L Near	 16A9	  Code	
  ??01CB . . . . . . . . . . . .	L Near	 16B5	  Code	
  ??01CC . . . . . . . . . . . .	L Near	 16BE	  Code	
  ??01CD . . . . . . . . . . . .	L Near	 16CA	  Code	
  ??01CE . . . . . . . . . . . .	L Near	 16D6	  Code	
  ??01CF . . . . . . . . . . . .	L Near	 16DF	  Code	
  ??01D0 . . . . . . . . . . . .	L Near	 16EB	  Code	
  ??01D1 . . . . . . . . . . . .	L Near	 16F7	  Code	
  ??01D2 . . . . . . . . . . . .	L Near	 1700	  Code	
  ??01D3 . . . . . . . . . . . .	L Near	 170C	  Code	
  ??01D4 . . . . . . . . . . . .	L Near	 1718	  Code	
  ??01D5 . . . . . . . . . . . .	L Near	 1721	  Code	
  ??01D6 . . . . . . . . . . . .	L Near	 172D	  Code	
  ??01D7 . . . . . . . . . . . .	L Near	 1739	  Code	
  ??01D8 . . . . . . . . . . . .	L Near	 1742	  Code	
Mode4_Datasheet3 . . . . . . . .	P Near	 1746	  Code	Length= 013F Public
  ??01D9 . . . . . . . . . . . .	L Near	 175A	  Code	
  ??01DA . . . . . . . . . . . .	L Near	 1766	  Code	
  ??01DB . . . . . . . . . . . .	L Near	 1772	  Code	
  ??01DC . . . . . . . . . . . .	L Near	 177E	  Code	
  ??01DD . . . . . . . . . . . .	L Near	 178C	  Code	
  ??01DE . . . . . . . . . . . .	L Near	 1798	  Code	
  ??01DF . . . . . . . . . . . .	L Near	 17A4	  Code	
  ??01E0 . . . . . . . . . . . .	L Near	 17AD	  Code	
  ??01E1 . . . . . . . . . . . .	L Near	 17B9	  Code	
  ??01E2 . . . . . . . . . . . .	L Near	 17C5	  Code	
  ??01E3 . . . . . . . . . . . .	L Near	 17CE	  Code	
  ??01E4 . . . . . . . . . . . .	L Near	 17DA	  Code	
  ??01E5 . . . . . . . . . . . .	L Near	 17E6	  Code	
  ??01E6 . . . . . . . . . . . .	L Near	 17EF	  Code	
  ??01E7 . . . . . . . . . . . .	L Near	 17FD	  Code	
  ??01E8 . . . . . . . . . . . .	L Near	 1809	  Code	
  ??01E9 . . . . . . . . . . . .	L Near	 1815	  Code	
  ??01EA . . . . . . . . . . . .	L Near	 181E	  Code	
  ??01EB . . . . . . . . . . . .	L Near	 182A	  Code	
  ??01EC . . . . . . . . . . . .	L Near	 1836	  Code	
  ??01ED . . . . . . . . . . . .	L Near	 183F	  Code	
  ??01EE . . . . . . . . . . . .	L Near	 184B	  Code	
  ??01EF . . . . . . . . . . . .	L Near	 1857	  Code	
  ??01F0 . . . . . . . . . . . .	L Near	 1860	  Code	
  ??01F1 . . . . . . . . . . . .	L Near	 186C	  Code	
  ??01F2 . . . . . . . . . . . .	L Near	 1878	  Code	
  ??01F3 . . . . . . . . . . . .	L Near	 1881	  Code	
Mode5_Datasheet1_Gate_High . . .	P Near	 1A2C	  Code	Length= 0158 Public
  ??0211 . . . . . . . . . . . .	L Near	 1A40	  Code	
  ??0212 . . . . . . . . . . . .	L Near	 1A4C	  Code	
  ??0213 . . . . . . . . . . . .	L Near	 1A58	  Code	
  ??0214 . . . . . . . . . . . .	L Near	 1A64	  Code	
  ??0215 . . . . . . . . . . . .	L Near	 1A72	  Code	
  ??0216 . . . . . . . . . . . .	L Near	 1A7E	  Code	
  ??0217 . . . . . . . . . . . .	L Near	 1A8A	  Code	
  ??0218 . . . . . . . . . . . .	L Near	 1A96	  Code	
  ??0219 . . . . . . . . . . . .	L Near	 1AA2	  Code	
  ??021A . . . . . . . . . . . .	L Near	 1AAE	  Code	
  ??021B . . . . . . . . . . . .	L Near	 1ABA	  Code	
  ??021C . . . . . . . . . . . .	L Near	 1AC3	  Code	
  ??021D . . . . . . . . . . . .	L Near	 1ACF	  Code	
  ??021E . . . . . . . . . . . .	L Near	 1ADB	  Code	
  ??021F . . . . . . . . . . . .	L Near	 1AE4	  Code	
  ??0220 . . . . . . . . . . . .	L Near	 1AF0	  Code	
  ??0221 . . . . . . . . . . . .	L Near	 1AFC	  Code	
  ??0222 . . . . . . . . . . . .	L Near	 1B05	  Code	
  ??0223 . . . . . . . . . . . .	L Near	 1B11	  Code	
  ??0224 . . . . . . . . . . . .	L Near	 1B1D	  Code	
  ??0225 . . . . . . . . . . . .	L Near	 1B26	  Code	
  ??0226 . . . . . . . . . . . .	L Near	 1B32	  Code	
  ??0227 . . . . . . . . . . . .	L Near	 1B3E	  Code	
  ??0228 . . . . . . . . . . . .	L Near	 1B4A	  Code	
  ??0229 . . . . . . . . . . . .	L Near	 1B56	  Code	
  ??022A . . . . . . . . . . . .	L Near	 1B5F	  Code	
  ??022B . . . . . . . . . . . .	L Near	 1B6B	  Code	
  ??022C . . . . . . . . . . . .	L Near	 1B77	  Code	
  ??022D . . . . . . . . . . . .	L Near	 1B80	  Code	
Mode5_Datasheet1_Gate_Low  . . .	P Near	 18D4	  Code	Length= 0158 Public
  ??01F4 . . . . . . . . . . . .	L Near	 18E8	  Code	
  ??01F5 . . . . . . . . . . . .	L Near	 18F4	  Code	
  ??01F6 . . . . . . . . . . . .	L Near	 1900	  Code	
  ??01F7 . . . . . . . . . . . .	L Near	 190C	  Code	
  ??01F8 . . . . . . . . . . . .	L Near	 191A	  Code	
  ??01F9 . . . . . . . . . . . .	L Near	 1926	  Code	
  ??01FA . . . . . . . . . . . .	L Near	 1932	  Code	
  ??01FB . . . . . . . . . . . .	L Near	 193E	  Code	
  ??01FC . . . . . . . . . . . .	L Near	 194A	  Code	
  ??01FD . . . . . . . . . . . .	L Near	 1956	  Code	
  ??01FE . . . . . . . . . . . .	L Near	 1962	  Code	
  ??01FF . . . . . . . . . . . .	L Near	 196B	  Code	
  ??0200 . . . . . . . . . . . .	L Near	 1977	  Code	
  ??0201 . . . . . . . . . . . .	L Near	 1983	  Code	
  ??0202 . . . . . . . . . . . .	L Near	 198C	  Code	
  ??0203 . . . . . . . . . . . .	L Near	 1998	  Code	
  ??0204 . . . . . . . . . . . .	L Near	 19A4	  Code	
  ??0205 . . . . . . . . . . . .	L Near	 19AD	  Code	
  ??0206 . . . . . . . . . . . .	L Near	 19B9	  Code	
  ??0207 . . . . . . . . . . . .	L Near	 19C5	  Code	
  ??0208 . . . . . . . . . . . .	L Near	 19CE	  Code	
  ??0209 . . . . . . . . . . . .	L Near	 19DA	  Code	
  ??020A . . . . . . . . . . . .	L Near	 19E6	  Code	
  ??020B . . . . . . . . . . . .	L Near	 19F2	  Code	
  ??020C . . . . . . . . . . . .	L Near	 19FB	  Code	
  ??020D . . . . . . . . . . . .	L Near	 1A07	  Code	
  ??020E . . . . . . . . . . . .	L Near	 1A13	  Code	
  ??020F . . . . . . . . . . . .	L Near	 1A1F	  Code	
  ??0210 . . . . . . . . . . . .	L Near	 1A28	  Code	
Mode5_Datasheet2_Gate_High . . .	P Near	 1D15	  Code	Length= 0191 Public
  ??0250 . . . . . . . . . . . .	L Near	 1D29	  Code	
  ??0251 . . . . . . . . . . . .	L Near	 1D35	  Code	
  ??0252 . . . . . . . . . . . .	L Near	 1D41	  Code	
  ??0253 . . . . . . . . . . . .	L Near	 1D4D	  Code	
  ??0254 . . . . . . . . . . . .	L Near	 1D5B	  Code	
  ??0255 . . . . . . . . . . . .	L Near	 1D67	  Code	
  ??0256 . . . . . . . . . . . .	L Near	 1D73	  Code	
  ??0257 . . . . . . . . . . . .	L Near	 1D7F	  Code	
  ??0258 . . . . . . . . . . . .	L Near	 1D8B	  Code	
  ??0259 . . . . . . . . . . . .	L Near	 1D97	  Code	
  ??025A . . . . . . . . . . . .	L Near	 1DA3	  Code	
  ??025B . . . . . . . . . . . .	L Near	 1DAF	  Code	
  ??025C . . . . . . . . . . . .	L Near	 1DBB	  Code	
  ??025D . . . . . . . . . . . .	L Near	 1DC4	  Code	
  ??025E . . . . . . . . . . . .	L Near	 1DD0	  Code	
  ??025F . . . . . . . . . . . .	L Near	 1DDC	  Code	
  ??0260 . . . . . . . . . . . .	L Near	 1DE8	  Code	
  ??0261 . . . . . . . . . . . .	L Near	 1DF4	  Code	
  ??0262 . . . . . . . . . . . .	L Near	 1DFD	  Code	
  ??0263 . . . . . . . . . . . .	L Near	 1E09	  Code	
  ??0264 . . . . . . . . . . . .	L Near	 1E15	  Code	
  ??0265 . . . . . . . . . . . .	L Near	 1E1E	  Code	
  ??0266 . . . . . . . . . . . .	L Near	 1E2A	  Code	
  ??0267 . . . . . . . . . . . .	L Near	 1E36	  Code	
  ??0268 . . . . . . . . . . . .	L Near	 1E3F	  Code	
  ??0269 . . . . . . . . . . . .	L Near	 1E4B	  Code	
  ??026A . . . . . . . . . . . .	L Near	 1E57	  Code	
  ??026B . . . . . . . . . . . .	L Near	 1E60	  Code	
  ??026C . . . . . . . . . . . .	L Near	 1E6C	  Code	
  ??026D . . . . . . . . . . . .	L Near	 1E78	  Code	
  ??026E . . . . . . . . . . . .	L Near	 1E81	  Code	
  ??026F . . . . . . . . . . . .	L Near	 1E8D	  Code	
  ??0270 . . . . . . . . . . . .	L Near	 1E99	  Code	
  ??0271 . . . . . . . . . . . .	L Near	 1EA2	  Code	
Mode5_Datasheet2_Gate_Low  . . .	P Near	 1B84	  Code	Length= 0191 Public
  ??022E . . . . . . . . . . . .	L Near	 1B98	  Code	
  ??022F . . . . . . . . . . . .	L Near	 1BA4	  Code	
  ??0230 . . . . . . . . . . . .	L Near	 1BB0	  Code	
  ??0231 . . . . . . . . . . . .	L Near	 1BBC	  Code	
  ??0232 . . . . . . . . . . . .	L Near	 1BCA	  Code	
  ??0233 . . . . . . . . . . . .	L Near	 1BD6	  Code	
  ??0234 . . . . . . . . . . . .	L Near	 1BE2	  Code	
  ??0235 . . . . . . . . . . . .	L Near	 1BEE	  Code	
  ??0236 . . . . . . . . . . . .	L Near	 1BFA	  Code	
  ??0237 . . . . . . . . . . . .	L Near	 1C06	  Code	
  ??0238 . . . . . . . . . . . .	L Near	 1C12	  Code	
  ??0239 . . . . . . . . . . . .	L Near	 1C1E	  Code	
  ??023A . . . . . . . . . . . .	L Near	 1C2A	  Code	
  ??023B . . . . . . . . . . . .	L Near	 1C33	  Code	
  ??023C . . . . . . . . . . . .	L Near	 1C3F	  Code	
  ??023D . . . . . . . . . . . .	L Near	 1C4B	  Code	
  ??023E . . . . . . . . . . . .	L Near	 1C57	  Code	
  ??023F . . . . . . . . . . . .	L Near	 1C60	  Code	
  ??0240 . . . . . . . . . . . .	L Near	 1C6C	  Code	
  ??0241 . . . . . . . . . . . .	L Near	 1C78	  Code	
  ??0242 . . . . . . . . . . . .	L Near	 1C84	  Code	
  ??0243 . . . . . . . . . . . .	L Near	 1C8D	  Code	
  ??0244 . . . . . . . . . . . .	L Near	 1C99	  Code	
  ??0245 . . . . . . . . . . . .	L Near	 1CA5	  Code	
  ??0246 . . . . . . . . . . . .	L Near	 1CAE	  Code	
  ??0247 . . . . . . . . . . . .	L Near	 1CBA	  Code	
  ??0248 . . . . . . . . . . . .	L Near	 1CC6	  Code	
  ??0249 . . . . . . . . . . . .	L Near	 1CCF	  Code	
  ??024A . . . . . . . . . . . .	L Near	 1CDB	  Code	
  ??024B . . . . . . . . . . . .	L Near	 1CE7	  Code	
  ??024C . . . . . . . . . . . .	L Near	 1CF0	  Code	
  ??024D . . . . . . . . . . . .	L Near	 1CFC	  Code	
  ??024E . . . . . . . . . . . .	L Near	 1D08	  Code	
  ??024F . . . . . . . . . . . .	L Near	 1D11	  Code	
Mode5_Datasheet3_Gate_High . . .	P Near	 2066	  Code	Length= 01CC Public
  ??0298 . . . . . . . . . . . .	L Near	 207A	  Code	
  ??0299 . . . . . . . . . . . .	L Near	 2086	  Code	
  ??029A . . . . . . . . . . . .	L Near	 2092	  Code	
  ??029B . . . . . . . . . . . .	L Near	 209E	  Code	
  ??029C . . . . . . . . . . . .	L Near	 20AC	  Code	
  ??029D . . . . . . . . . . . .	L Near	 20B8	  Code	
  ??029E . . . . . . . . . . . .	L Near	 20C4	  Code	
  ??029F . . . . . . . . . . . .	L Near	 20D0	  Code	
  ??02A0 . . . . . . . . . . . .	L Near	 20DC	  Code	
  ??02A1 . . . . . . . . . . . .	L Near	 20E8	  Code	
  ??02A2 . . . . . . . . . . . .	L Near	 20F4	  Code	
  ??02A3 . . . . . . . . . . . .	L Near	 2100	  Code	
  ??02A4 . . . . . . . . . . . .	L Near	 210C	  Code	
  ??02A5 . . . . . . . . . . . .	L Near	 2115	  Code	
  ??02A6 . . . . . . . . . . . .	L Near	 2121	  Code	
  ??02A7 . . . . . . . . . . . .	L Near	 212D	  Code	
  ??02A8 . . . . . . . . . . . .	L Near	 2136	  Code	
  ??02A9 . . . . . . . . . . . .	L Near	 2144	  Code	
  ??02AA . . . . . . . . . . . .	L Near	 2150	  Code	
  ??02AB . . . . . . . . . . . .	L Near	 215C	  Code	
  ??02AC . . . . . . . . . . . .	L Near	 2165	  Code	
  ??02AD . . . . . . . . . . . .	L Near	 2171	  Code	
  ??02AE . . . . . . . . . . . .	L Near	 217D	  Code	
  ??02AF . . . . . . . . . . . .	L Near	 2186	  Code	
  ??02B0 . . . . . . . . . . . .	L Near	 2192	  Code	
  ??02B1 . . . . . . . . . . . .	L Near	 219E	  Code	
  ??02B2 . . . . . . . . . . . .	L Near	 21A7	  Code	
  ??02B3 . . . . . . . . . . . .	L Near	 21B3	  Code	
  ??02B4 . . . . . . . . . . . .	L Near	 21BF	  Code	
  ??02B5 . . . . . . . . . . . .	L Near	 21CB	  Code	
  ??02B6 . . . . . . . . . . . .	L Near	 21D4	  Code	
  ??02B7 . . . . . . . . . . . .	L Near	 21E0	  Code	
  ??02B8 . . . . . . . . . . . .	L Near	 21EC	  Code	
  ??02B9 . . . . . . . . . . . .	L Near	 21F8	  Code	
  ??02BA . . . . . . . . . . . .	L Near	 2204	  Code	
  ??02BB . . . . . . . . . . . .	L Near	 220D	  Code	
  ??02BC . . . . . . . . . . . .	L Near	 2219	  Code	
  ??02BD . . . . . . . . . . . .	L Near	 2225	  Code	
  ??02BE . . . . . . . . . . . .	L Near	 222E	  Code	
Mode5_Datasheet3_Gate_Low  . . .	P Near	 1EA6	  Code	Length= 01C0 Public
  ??0272 . . . . . . . . . . . .	L Near	 1EBA	  Code	
  ??0273 . . . . . . . . . . . .	L Near	 1EC6	  Code	
  ??0274 . . . . . . . . . . . .	L Near	 1ED2	  Code	
  ??0275 . . . . . . . . . . . .	L Near	 1EDE	  Code	
  ??0276 . . . . . . . . . . . .	L Near	 1EEC	  Code	
  ??0277 . . . . . . . . . . . .	L Near	 1EF8	  Code	
  ??0278 . . . . . . . . . . . .	L Near	 1F04	  Code	
  ??0279 . . . . . . . . . . . .	L Near	 1F10	  Code	
  ??027A . . . . . . . . . . . .	L Near	 1F1C	  Code	
  ??027B . . . . . . . . . . . .	L Near	 1F28	  Code	
  ??027C . . . . . . . . . . . .	L Near	 1F34	  Code	
  ??027D . . . . . . . . . . . .	L Near	 1F40	  Code	
  ??027E . . . . . . . . . . . .	L Near	 1F4C	  Code	
  ??027F . . . . . . . . . . . .	L Near	 1F55	  Code	
  ??0280 . . . . . . . . . . . .	L Near	 1F61	  Code	
  ??0281 . . . . . . . . . . . .	L Near	 1F6D	  Code	
  ??0282 . . . . . . . . . . . .	L Near	 1F76	  Code	
  ??0283 . . . . . . . . . . . .	L Near	 1F84	  Code	
  ??0284 . . . . . . . . . . . .	L Near	 1F90	  Code	
  ??0285 . . . . . . . . . . . .	L Near	 1F9C	  Code	
  ??0286 . . . . . . . . . . . .	L Near	 1FA5	  Code	
  ??0287 . . . . . . . . . . . .	L Near	 1FB1	  Code	
  ??0288 . . . . . . . . . . . .	L Near	 1FBD	  Code	
  ??0289 . . . . . . . . . . . .	L Near	 1FC6	  Code	
  ??028A . . . . . . . . . . . .	L Near	 1FD2	  Code	
  ??028B . . . . . . . . . . . .	L Near	 1FDE	  Code	
  ??028C . . . . . . . . . . . .	L Near	 1FE7	  Code	
  ??028D . . . . . . . . . . . .	L Near	 1FF3	  Code	
  ??028E . . . . . . . . . . . .	L Near	 1FFF	  Code	
  ??028F . . . . . . . . . . . .	L Near	 2008	  Code	
  ??0290 . . . . . . . . . . . .	L Near	 2014	  Code	
  ??0291 . . . . . . . . . . . .	L Near	 2020	  Code	
  ??0292 . . . . . . . . . . . .	L Near	 202C	  Code	
  ??0293 . . . . . . . . . . . .	L Near	 2038	  Code	
  ??0294 . . . . . . . . . . . .	L Near	 2041	  Code	
  ??0295 . . . . . . . . . . . .	L Near	 204D	  Code	
  ??0296 . . . . . . . . . . . .	L Near	 2059	  Code	
  ??0297 . . . . . . . . . . . .	L Near	 2062	  Code	
SetClkHi . . . . . . . . . . . .	P Near	 000A	  Code	Length= 0005 Public
SetClkLow  . . . . . . . . . . .	P Near	 000F	  Code	Length= 0005 Public
SetGateHi  . . . . . . . . . . .	P Near	 0000	  Code	Length= 0005 Public
SetGateLow . . . . . . . . . . .	P Near	 0005	  Code	Length= 0005 Public
ShowCounter  . . . . . . . . . .	P Near	 2272	  Code	Length= 0006 Public
TestMode0  . . . . . . . . . . .	P Near	 002B	  Code	Length= 002B Public
TestMode1  . . . . . . . . . . .	P Near	 040C	  Code	Length= 004F Public
TestMode2  . . . . . . . . . . .	P Near	 0CA8	  Code	Length= 002B Public
TestMode3  . . . . . . . . . . .	P Near	 10A1	  Code	Length= 002B Public
TestMode4  . . . . . . . . . . .	P Near	 14B9	  Code	Length= 002B Public
TestMode5  . . . . . . . . . . .	P Near	 1885	  Code	Length= 004F Public
WriteCountByte . . . . . . . . .	P Near	 0021	  Code	Length= 0003 Public
WriteCountWord . . . . . . . . .	P Near	 0024	  Code	Length= 0007 Public
WriteCw  . . . . . . . . . . . .	P Near	 001E	  Code	Length= 0003 Public


Symbols:

                N a m e                 Type     Value    Attr

InitDataEnd  . . . . . . . . . .	L Near	 0000	  InitData	
InitDataStart  . . . . . . . . .	L Near	 0000	  InitData	
Int32HandlerPtrOffs  . . . . . .	Word	 0080	  IntTable	
Int32HandlerPtrSeg . . . . . . .	Word	 0082	  IntTable	
IntCounter . . . . . . . . . . .	Word	 0000	  Data	
MLoop  . . . . . . . . . . . . .	L Near	 22A3	  Code	
RomSize  . . . . . . . . . . . .	Number	 4000h	 
Start  . . . . . . . . . . . . .	L Near	 2278	  Code	
StkTop . . . . . . . . . . . . .	Word	 0200	  Stk	

	   0 Warnings
	   0 Errors
